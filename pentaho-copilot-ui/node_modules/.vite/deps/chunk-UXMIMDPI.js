import {
  initReactI18next
} from "./chunk-XCL2IQD6.js";
import {
  instance
} from "./chunk-NKIIYATJ.js";
import {
  Browser
} from "./chunk-EU6WBHQH.js";

// node_modules/@hitachivantara/app-shell/dist/esm/lib/i18n/localization/en.json.js
var a = {
  missing: {
    configuration: "Missing or incomplete configuration."
  },
  notFound: {
    code: "404",
    title: "Oops! Seems like the page is lost in space.",
    image_description: "404 Page not found"
  },
  genericError: {
    code: "500",
    title: "Shoot! We have a problem! Be back soon.",
    image_description: "500 Generic error"
  },
  footer: "Click <navigate>here</navigate> to go back to the {{label}} page."
};
var e = {
  helpUrl: {
    documentationLink: "Documentation link"
  },
  appSwitcher: {
    title: "Apps",
    ariaLabel: "App Switcher Panel"
  },
  navigation: {
    openNavigationPanel: "Open navigation panel",
    closeNavigationPanel: "Close navigation panel"
  },
  colorModeSwitcher: {
    ariaLabel: "Switch color mode"
  }
};
var i = {
  ariaLabelNavigationTree: "Vertical navigation",
  ariaLabelCollapse: "Collapse vertical navigation",
  ariaLabelExpand: "Expand vertical navigation",
  title: "Menu",
  ariaLabelSliderForwardButton: "Navigate to submenu",
  ariaLabelHeaderBackButton: "Back"
};
var o = {
  banner: {
    close: "Close banner"
  }
};
var n = {
  errors: a,
  header: e,
  verticalNavigation: i,
  notifications: o
};

// node_modules/@hitachivantara/app-shell/dist/esm/lib/i18n/localization/pt.json.js
var a2 = {
  missing: {
    configuration: "Configuração em falta ou incompleta."
  },
  notFound: {
    code: "404",
    title: "Oops! Parece que a página está perdida no espaço.",
    image_description: "404 Página não encontrada"
  },
  genericError: {
    code: "500",
    title: "Bolas! Temos um problema! Estaremos de volta em breve.",
    image_description: "500 Erro genérico"
  },
  footer: "Carregue <navigate>aqui</navigate> para voltar à página {{label}}."
};
var e2 = {
  helpUrl: {
    documentationLink: "Link de documentação"
  },
  appSwitcher: {
    title: "Aplicações",
    ariaLabel: "Painel do App Switcher"
  },
  navigation: {
    openNavigationPanel: "Abrir painel de navegação",
    closeNavigationPanel: "Fechar painel de navegação"
  },
  colorModeSwitcher: {
    ariaLabel: "Alternar modo de cor"
  }
};
var o2 = {
  ariaLabelNavigationTree: "Navegação vertical",
  ariaLabelCollapse: "Recolher navegação vertical",
  ariaLabelExpand: "Expandir navegação vertical",
  title: "Menu",
  ariaLabelSliderForwardButton: "Navegar para submenu",
  ariaLabelHeaderBackButton: "Voltar"
};
var i2 = {
  banner: {
    close: "Fechar barra de notificação"
  }
};
var r = {
  errors: a2,
  header: e2,
  verticalNavigation: o2,
  notifications: i2
};

// node_modules/@hitachivantara/app-shell/dist/esm/lib/i18n/index.js
var t = "appShell";
var S = "configTranslations";
var E = (e3, n2, o3) => {
  Object.entries(n2).forEach((r2) => {
    const [a3, c] = r2;
    e3.addResourceBundle(a3, o3 || t, c);
  });
};
var f = () => {
  const e3 = instance.createInstance();
  return e3.use(Browser).use(initReactI18next).init({
    defaultNS: t,
    fallbackLng: "en",
    detection: {
      order: ["navigator"]
    },
    resources: {}
  }), e3.addResourceBundle("en", t, n), e3.addResourceBundle("pt", t, r), {
    i18n: e3
  };
};
var R = f;

export {
  S,
  E,
  R
};
//# sourceMappingURL=chunk-UXMIMDPI.js.map
