import {
  s
} from "./chunk-FIY7Y6HV.js";
import {
  r
} from "./chunk-IV2EBUV2.js";
import {
  HvButton,
  useTheme2 as useTheme
} from "./chunk-WUKK7SNM.js";
import "./chunk-B3JZNI6F.js";
import "./chunk-3RR3EUPW.js";
import "./chunk-V2DLLZW3.js";
import "./chunk-QMINRHT5.js";
import {
  jsx
} from "./chunk-3L5C4PYA.js";
import "./chunk-K4QCH4XS.js";
import "./chunk-JFO6GW5W.js";
import "./chunk-RC2ZRYDW.js";
import "./chunk-HPTKUUYV.js";
import "./chunk-ZMNBE4DB.js";
import {
  useTranslation
} from "./chunk-XCL2IQD6.js";
import "./chunk-4HFHQ33B.js";
import "./chunk-QV6VW2LK.js";
import "./chunk-T4Q6YU4Z.js";
import "./chunk-YK2NTGKW.js";
import "./chunk-XOU5LQRW.js";
import "./chunk-HM4MQYWN.js";

// node_modules/@hitachivantara/app-shell/dist/esm/components/layout/Header/HeaderActions/InternalActions/ColorModeSwitcher/ColorModeSwitcher.js
var m = () => {
  const {
    t: e
  } = useTranslation(), {
    colorModes: t
  } = useTheme(), r2 = () => {
    const n = new CustomEvent(s.ThemeEvent, {
      detail: {
        colorMode: void 0
      }
    });
    globalThis.dispatchEvent(n);
  };
  return t.length > 1 && jsx(HvButton, { icon: true, onClick: r2, variant: "secondaryGhost", "aria-label": e("header.colorModeSwitcher.ariaLabel") ?? "", children: jsx(r, { name: "ThemeSwitcher" }) });
};
var f = m;
export {
  f as default
};
//# sourceMappingURL=ColorModeSwitcher-RYNMWPQA.js.map
