{
  "version": 3,
  "sources": ["../../@hitachivantara/app-shell/src/components/layout/Header/HeaderActions/InternalActions/AppSwitcherToggle/styles.tsx", "../../@hitachivantara/app-shell/src/components/layout/Header/HeaderActions/InternalActions/AppSwitcherToggle/AppSwitcherToggle.tsx"],
  "sourcesContent": ["import styled from \"@emotion/styled\";\nimport { theme } from \"@hitachivantara/uikit-react-core\";\n\n// zIndex calculation is needed so that the Header shadow goes on top of the panel and not the other way around.\nconst StyledAppShellPanelWrapper = styled.div`\n  position: fixed;\n  max-height: calc(100vh - ${theme.header.height});\n  top: ${theme.header.height};\n  right: 0;\n  display: flex;\n  box-shadow: ${theme.colors.shadow};\n  z-index: calc(${theme.zIndices.banner} - 1);\n`;\n\nexport default StyledAppShellPanelWrapper;\n", "import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { createPortal } from \"react-dom\";\nimport { v4 as uuid } from \"uuid\";\nimport { ClickAwayListener } from \"@mui/material\";\n\nimport {\n  HvAppSwitcherActionApplication,\n  HvAppSwitcher,\n  HvButton,\n  HvTypography\n} from \"@hitachivantara/uikit-react-core\";\n\nimport {\n  HvAppShellAppSwitcherConfig,\n  HvAppShellAppSwitcherItemConfig\n} from \"@hitachivantara/app-shell-shared\";\n\nimport StyledAppShellPanelWrapper from \"./styles\";\nimport IconUiKit from \"../../../../../IconUiKit\";\nimport { CONFIG_TRANSLATIONS_NAMESPACE } from \"../../../../../../lib/i18n\";\nimport includesString from \"../../../../../../lib/utils/textUtil\";\nimport createAppContainerElement from \"../../../../../../lib/utils/documentUtil\";\n\nconst AppSwitcherToggle = ({ title, apps }: HvAppShellAppSwitcherConfig) => {\n  const { t } = useTranslation();\n  const { t: tConfig } = useTranslation(CONFIG_TRANSLATIONS_NAMESPACE);\n  const [isPanelOpen, setIsPanelOpen] = useState(false);\n\n  /**\n   * Creates the apps list to be sent to the HvAppSwitcherPanel.\n   *\n   * @memberof AppSwitcherToggle\n   */\n  const createAppsList = (): HvAppSwitcherActionApplication[] => {\n    return apps\n      ? apps.map((app: HvAppShellAppSwitcherItemConfig) => ({\n          name: tConfig(app.label),\n          description: app.description\n            ? tConfig(app.description).toString()\n            : undefined,\n          url: includesString(app.url, \":\")\n            ? app.url\n            : tConfig(app.url).toString(),\n          target: app.target === \"NEW\" ? \"_blank\" : \"_top\",\n          iconElement: app.icon && <IconUiKit name={app.icon.name} />\n        }))\n      : [];\n  };\n\n  /**\n   * Closes the apps panel.\n   *\n   * @memberof AppSwitcherToggle\n   */\n  const closeAppSwitcherPanel = () => {\n    setIsPanelOpen(false);\n  };\n\n  /**\n   * Handles action clicked event from the AppSwitcherPanel items\n   *\n   * @memberof AppSwitcherToggle\n   */\n  const handleAppSwitcherPanelItemClicked = () => {\n    closeAppSwitcherPanel();\n  };\n\n  /**\n   * Handles the click on the AppSwitcher button.\n   *\n   * @memberof AppSwitcherToggle\n   */\n  const handleAppSwitcherButtonClick = () => {\n    setIsPanelOpen(!isPanelOpen);\n  };\n\n  if (!apps || apps.length === 0) {\n    return null;\n  }\n\n  const finalTitle: string = title\n    ? tConfig(title)\n    : t(\"header.appSwitcher.title\");\n\n  const appSwitcherPanelId = `appSwitcherPanel-${uuid()}`;\n  const extraProps = {\n    ...(isPanelOpen ? { \"aria-controls\": appSwitcherPanelId } : {})\n  };\n\n  return (\n    <ClickAwayListener onClickAway={closeAppSwitcherPanel}>\n      <div style={{ display: \"flex\", margin: 0 }}>\n        <HvButton\n          icon\n          onClick={handleAppSwitcherButtonClick}\n          variant=\"secondaryGhost\"\n          aria-label={finalTitle}\n          aria-expanded={isPanelOpen}\n          {...extraProps}>\n          <IconUiKit name=\"AppSwitcher\" />\n        </HvButton>\n        {isPanelOpen &&\n          createPortal(\n            <StyledAppShellPanelWrapper\n              id={appSwitcherPanelId}\n              role=\"region\"\n              aria-label={t(\"header.appSwitcher.ariaLabel\") ?? \"\"}>\n              <HvAppSwitcher\n                applications={createAppsList()}\n                onActionClickedCallback={handleAppSwitcherPanelItemClicked}\n                header={\n                  <HvTypography variant=\"label\">{finalTitle}</HvTypography>\n                }\n              />\n            </StyledAppShellPanelWrapper>,\n            createAppContainerElement()\n          )}\n      </div>\n    </ClickAwayListener>\n  );\n};\n\nexport default AppSwitcherToggle;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,IAAMA,IAA0BC,aAAA,OAAAC,QAAA;EAAAC,QAAA;AAAA,IAAA;EAAAA,QAAA;EAAAC,OAAA;AAAA,CAAA,EAAA,2CAEHC,MAAMC,OAAOC,QAAM,UACvCF,MAAMC,OAAOC,QAAM,qCAGZF,MAAMG,OAAOC,QAAM,kBACjBJ,MAAMK,SAASC,QAAM,YAAAT,QACtC,KAAA,8wCAAA;AARD,IAUAU,IAAeZ;;;ACUf,IAAMa,IAAoBA,CAAC;EAAEC,OAAAA;EAAOC,MAAAA;AAAkC,MAAM;AACpE,QAAA;IAAEC,GAAAA;EAAAA,IAAMC,eAAe,GACvB;IAAED,GAAGE;EAAAA,IAAYD,eAAeE,CAA6B,GAC7D,CAACC,GAAaC,EAAc,QAAIC,aAAAA,UAAS,KAAK,GAO9CC,IAAiBA,MACdR,IACHA,EAAKS,IAAI,CAACC,OAA0C;IAClDC,MAAMR,EAAQO,EAAIE,KAAK;IACvBC,aAAaH,EAAIG,cACbV,EAAQO,EAAIG,WAAW,EAAEC,SACzBC,IAAAA;IACJC,KAAKC,EAAeP,EAAIM,KAAK,GAAG,IAC5BN,EAAIM,MACJb,EAAQO,EAAIM,GAAG,EAAEF,SAAS;IAC9BI,QAAQR,EAAIQ,WAAW,QAAQ,WAAW;IAC1CC,aAAaT,EAAIU,QAAQC,IAACC,GAAAA,EAAU,MAAMZ,EAAIU,KAAKT,KAAAA,CAAK;EAAA,EACxD,IACF,CAAA,GAQAY,IAAwBA,MAAM;AAClCjB,IAAAA,GAAe,KAAK;EAAA,GAQhBkB,KAAoCA,MAAM;AACxBD,MAAAA;EAAA,GAQlBE,IAA+BA,MAAM;AACzCnB,IAAAA,GAAe,CAACD,CAAW;EAAA;AAG7B,MAAI,CAACL,KAAQA,EAAK0B,WAAW;AACpB,WAAA;AAGT,QAAMC,KAAqB5B,IACvBI,EAAQJ,CAAK,IACbE,GAAE,0BAA0B,GAE1B2B,IAAsB,oBAAmBC,WAAAA,CAAO,IAChDC,IAAa;IACjB,GAAIzB,IAAc;MAAE,iBAAiBuB;IAAAA,IAAuB,CAAC;EAAA;AAG/D,SAAA,IACGG,2BAAkB,EAAA,aAAaR,GAC9B,UAAAS,KAAC,OAAA,EAAI,OAAO;IAAEC,SAAS;IAAQC,QAAQ;EACrC,GAAA,UAAA;IAAAb,IAACc,UAAAA,EACC,MAAI,MACJ,SAASV,GACT,SAAQ,kBACR,cAAYE,IACZ,iBAAetB,GACf,GAAIyB,GACJ,UAAA,IAACR,GAAU,EAAA,MAAK,cAAa,CAAA,EAAA,CAC/B;IACCjB,SACC+B,iBAAAA,cACGf,IAAAgB,GAAA,EACC,IAAIT,GACJ,MAAK,UACL,cAAY3B,GAAE,8BAA8B,KAAK,IACjD,UAACoB,IAAAiB,eAAA,EACC,cAAc9B,EACd,GAAA,yBAAyBgB,IACzB,QACGH,IAAAkB,cAAA,EAAa,SAAQ,SAASZ,UAAWA,GAAA,CAAA,EAC3C,CAAA,EAEL,CAAA,GACAa,EAAAA,CACF;EAAA,EACJ,CAAA,EACF,CAAA;AAEJ;AAjGA,IAmGAC,IAAe3C;",
  "names": ["StyledAppShellPanelWrapper", "_styled", "process", "target", "label", "theme", "header", "height", "colors", "shadow", "zIndices", "banner", "StyledAppShellPanelWrapper$1", "AppSwitcherToggle", "title", "apps", "t", "useTranslation", "tConfig", "CONFIG_TRANSLATIONS_NAMESPACE", "isPanelOpen", "setIsPanelOpen", "useState", "createAppsList", "map", "app", "name", "label", "description", "toString", "undefined", "url", "includesString", "target", "iconElement", "icon", "jsx", "IconUiKit", "closeAppSwitcherPanel", "handleAppSwitcherPanelItemClicked", "handleAppSwitcherButtonClick", "length", "finalTitle", "appSwitcherPanelId", "uuid", "extraProps", "ClickAwayListener", "jsxs", "display", "margin", "HvButton", "createPortal", "StyledAppShellPanelWrapper", "HvAppSwitcher", "HvTypography", "createAppContainerElement", "AppSwitcherToggle$1"]
}
