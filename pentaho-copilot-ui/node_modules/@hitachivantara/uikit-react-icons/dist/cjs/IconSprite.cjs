"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("@emotion/react/jsx-runtime");
const uikitStyles = require("@hitachivantara/uikit-styles");
const IconBase = require("./IconBase.cjs");
const utils = require("./utils.cjs");
const getSecondaryColor = (iconName) => {
  if (utils.isSelector(iconName))
    return uikitStyles.theme.colors.atmo1;
  if (utils.isSort(iconName))
    return uikitStyles.theme.colors.atmo4;
  return uikitStyles.theme.colors.atmo2;
};
const HvIconSprite = ({
  spriteUrl,
  iconName,
  color,
  iconSize: iconSizeProp,
  height,
  width,
  svgProps = {},
  ...others
}) => {
  const iconSize = iconSizeProp ?? (utils.isXS(iconName) ? "XS" : "S");
  const baseColors = [uikitStyles.theme.colors.secondary, getSecondaryColor(iconName)];
  const size = IconBase.getIconSize(iconSize, utils.isSemantic(iconName), width, height);
  return /* @__PURE__ */ jsxRuntime.jsx(IconBase.IconBase, { iconName, iconSize, color, palette: baseColors, ...others, children: /* @__PURE__ */ jsxRuntime.jsx("svg", { xmlns: "http://www.w3.org/2000/svg", height: size.height, width: size.width, focusable: false, ...svgProps, children: /* @__PURE__ */ jsxRuntime.jsx("use", { href: `${spriteUrl}#${iconName}`, height: size.height, width: size.width }) }) });
};
exports.HvIconSprite = HvIconSprite;
//# sourceMappingURL=IconSprite.cjs.map
