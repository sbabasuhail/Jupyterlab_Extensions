{"version":3,"file":"vite-importmap-plugin.js","sourceRoot":"","sources":["../src/vite-importmap-plugin.ts"],"names":[],"mappings":"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","sourcesContent":["import fs from \"fs\";\nimport path from \"path\";\n\nimport type { NormalizedOutputOptions } from \"rollup\";\nimport type { PluginOption } from \"vite\";\n\nimport virtual from \"@rollup/plugin-virtual\";\n\nconst ID_PREFIX = `/@id/`;\n\nfunction replaceIdPrefix(keys: (string | RegExp)[]): PluginOption {\n  const reg = new RegExp(`${ID_PREFIX}(${keys.join(\"|\")})`, \"g\");\n\n  return {\n    name: \"vite-plugin-importmap-replace-idprefix\",\n    enforce: \"pre\",\n    apply: \"serve\",\n\n    // while in dev, we need to prevent 'vite:import-analysis' on runtime modules\n    transform: code =>\n      reg.test(code) ? code.replace(reg, (m, s1) => s1) : code,\n\n    // and to say its resolved (as external)\n    resolveId: (id: string) =>\n      keys.some(key =>\n        typeof key === \"string\" ? id.startsWith(key) : key.test(id)\n      )\n        ? {\n            id,\n            external: true\n          }\n        : undefined,\n\n    // Avoid the warning: The following dependencies are imported but could not be resolved: [dependency] (imported by [sourceFile])\n    load: (id: string) => {\n      if (keys.includes(id)) {\n        // Vite will try to resolve the modules even when externalized\n        // In order to suppress the warning, a stub module is returned\n        return \"export default {};\";\n      }\n\n      return undefined;\n    }\n  };\n}\n\n/**\n * Generate and injects the importmap tag into index.html\n * @param importmapElements The importmap elements to be included\n * @param sharedDependencies The shared packages (other than application bundles)\n */\nexport default function generateImportmap(\n  importmapElements: Record<string, string>,\n  sharedDependencies: string[],\n  externalImportMap = false,\n  placeholderEntryPoint = false\n): PluginOption {\n  const keys = Object.keys(importmapElements);\n  const devKeys = keys.filter(\n    key => !sharedDependencies.some(lib => lib.startsWith(key))\n  );\n\n  let devMode = false;\n\n  const importmapString = JSON.stringify(\n    { imports: importmapElements },\n    null,\n    2\n  );\n\n  const importmapScript = `const im = document.createElement('script');\nim.type = 'importmap';\nim.textContent = \\`${importmapString}\\`;\ndocument.currentScript.after(im);\n`;\n\n  return [\n    {\n      name: \"vite-plugin-importmap\",\n      enforce: \"pre\",\n\n      // don't optimize / pre-transform deps that are in the importmap\n      // except for react and react-dom when in dev mode\n      config(config, { command }) {\n        devMode = command !== \"build\";\n\n        // vite docs says we can mutate the passed-in config directly\n        // assigning to a new variable just to avoid the eslint warning\n        const returnValue = config;\n\n        // make sure optimizeDeps is defined\n        returnValue.optimizeDeps = returnValue.optimizeDeps ?? {};\n\n        returnValue.optimizeDeps.exclude = [\n          ...(config.optimizeDeps?.exclude ?? []),\n          ...(devMode ? devKeys : keys)\n        ];\n\n        if (devMode) {\n          return;\n        }\n\n        // mark the modules referenced in the importmap as external\n        const excludedModules = keys.map(key => {\n          if (key.endsWith(\"/\")) {\n            return new RegExp(`^${key}.*`);\n          }\n\n          return key;\n        });\n\n        console.info(\"Shared packages marked as external: \", excludedModules);\n\n        // make sure build's rollupOptions is defined\n        returnValue.build = returnValue.build ?? {};\n        returnValue.build.rollupOptions = returnValue.build.rollupOptions ?? {};\n        returnValue.build.rollupOptions.external =\n          returnValue.build.rollupOptions.external ?? [];\n\n        if (typeof returnValue.build.rollupOptions.external === \"function\") {\n          // in case the developer has defined a custom external function\n          // we wrap it and check our excluded modules first and call the original function if needed\n          const originalExternal = returnValue.build.rollupOptions.external;\n\n          returnValue.build.rollupOptions.external = (id, ...args) => {\n            if (excludedModules.some(m => typeof m === id)) {\n              return true;\n            }\n\n            return originalExternal(id, ...args);\n          };\n        } else {\n          // otherwise we just add our excluded modules to the list supplied by the developer\n          const externalModules: (string | RegExp)[] = [];\n\n          if (Array.isArray(returnValue.build.rollupOptions.external)) {\n            externalModules.push(...returnValue.build.rollupOptions.external);\n          } else {\n            externalModules.push(returnValue.build.rollupOptions.external);\n          }\n\n          externalModules.push(...excludedModules);\n\n          returnValue.build.rollupOptions.external = externalModules;\n        }\n      },\n\n      // while in dev, we need to prevent 'vite:import-analysis' on runtime modules\n      // and also to say they're resolved (as external)\n      // (it will still output an error in the console, but it won't break)\n      // known issue: https://github.com/vitejs/vite/issues/11633\n      configResolved(resolvedConfig) {\n        if (!devMode) {\n          return;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore an hack: we want to add the plugin only after the config is resolved\n        resolvedConfig.plugins.push(replaceIdPrefix(devKeys));\n      },\n\n      /**\n       * Rollup hook with the info for bundle generation\n       * It will be used to create a new configuration with:\n       *  - bundles replace with the final location (e.g. -> \"bundle\": \"src/pages/Main\" transformed to \"bundle\": \"pages/Main.js\",\n       * @param options build options\n       * @param bundle bundles information\n       */\n      async generateBundle(options: NormalizedOutputOptions) {\n        if (!externalImportMap || placeholderEntryPoint) {\n          return;\n        }\n\n        // obtain the directory (dist) where the new config file will be placed\n        let targetDir: string | undefined;\n        if (options.dir) {\n          targetDir = options.dir;\n        } else if (options.file) {\n          targetDir = path.dirname(options.file);\n        }\n\n        if (!targetDir) {\n          throw new Error(\n            \"Please set outputPath, so we can know where to place the json file\"\n          );\n        }\n\n        // create the targetDir if it does not exist\n        if (!fs.existsSync(targetDir)) {\n          fs.mkdirSync(targetDir, { recursive: true });\n        }\n\n        // support for external import maps isn't yet available (https://github.com/WICG/import-maps/issues/235)\n        // workaround: https://github.com/WICG/import-maps/issues/235#issuecomment-1002340944\n        fs.writeFileSync(\n          path.resolve(targetDir, \"importmap.js\"),\n          importmapScript\n        );\n      },\n\n      // inject the importmap script and also the es-module-shims script\n      transformIndexHtml: {\n        enforce: \"post\",\n        transform: html => ({\n          html,\n          tags: [\n            {\n              tag: \"script\",\n              attrs: { async: true, src: \"./bundles/es-module-shims.js\" },\n              injectTo: \"head-prepend\"\n            },\n            externalImportMap\n              ? {\n                  tag: \"script\",\n                  attrs: { src: \"./importmap.js\" },\n                  injectTo: \"head-prepend\"\n                }\n              : {\n                  tag: \"script\",\n                  attrs: { type: \"importmap\" },\n                  injectTo: \"head-prepend\",\n                  children: placeholderEntryPoint\n                    ? \"%%APPSHELL_IMPORTMAP%%\"\n                    : importmapString\n                }\n          ]\n        })\n      }\n    },\n    externalImportMap\n      ? virtual({\n          \"/importmap.js\": importmapScript\n        })\n      : false\n  ];\n}\n"]}