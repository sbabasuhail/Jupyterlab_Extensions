import type { HvAppShellAppsConfig, HvAppShellConfig } from "@hitachivantara/app-shell-shared";
import type { AppShellVitePluginOptions } from "./vite-plugin.js";
export interface ConfigReplacement {
    token: string;
    value: string;
}
export type AppShellConfigFunction = (pluginOptions: AppShellVitePluginOptions, env: Record<string, string>) => HvAppShellConfig;
export declare const DEFAULT_CONFIG_FILES: string[];
export declare function findAppShellConfigFile(root: string): string | undefined;
export declare function loadConfigFile(appShellConfigFile: string | undefined, opts: AppShellVitePluginOptions, env?: Record<string, string>): HvAppShellConfig;
/**
 * Return the main app (identified by @self)
 * @param appShellConfig The App shell configuration
 */
export declare const getMainApp: (appShellConfig: HvAppShellConfig) => HvAppShellAppsConfig | undefined;
/**
 * Return the public path to be use by vite to launch the application.
 * Value is obtained by returning the baseUrl value of the main app {@link #getMainApp}
 * @param appShellConfig The App shell configuration
 */
export declare const getPublicPath: (appShellConfig: HvAppShellConfig) => string;
/**
 *  Returns the modules to be created by the build of the app.
 *  The list of modules is defined by the app-shell-config.json file routes ( limited to the @self app)
 *  The bundles will be created following the original directories structure ( having the src folder path removed)
 *
 * @param root Project root directory.
 * @param appShellConfig The App Shell configuration.
 * @param selfAppName The name of the application bundle being built.
 */
export declare function getAppModules(root: string, appShellConfig: HvAppShellConfig, selfAppName: string): {
    [key: string]: string;
};
//# sourceMappingURL=config-utils.d.ts.map