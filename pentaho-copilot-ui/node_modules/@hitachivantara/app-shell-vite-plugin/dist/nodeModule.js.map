{"version":3,"file":"nodeModule.js","sourceRoot":"","sources":["../src/nodeModule.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,aAAa,CAAC;AAE5C,MAAM,CAAC,MAAM,OAAO,GAAG,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAEtD;;;;;GAKG;AACH,MAAM,UAAU,aAAa,CAAC,UAAkB;IAC9C,MAAM,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IAC3C,OAAO,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AACrC,CAAC;AAED;;;;;;;GAOG;AACH,MAAM,UAAU,aAAa,CAAC,UAAkB,EAAE,MAAc;IAC9D,MAAM,qBAAqB,GAAG,IAAI,UAAU,GAAG,CAAC;IAChD,MAAM,MAAM,GAAG,aAAa,CAAC,UAAU,CAAC,CAAC;IACzC,MAAM,cAAc,GAAG,MAAM,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC;IACjE,OAAO,GAAG,MAAM,CAAC,KAAK,CACpB,CAAC,EACD,cAAc,GAAG,qBAAqB,CAAC,MAAM,CAC9C,GAAG,MAAM,EAAE,CAAC;AACf,CAAC","sourcesContent":["import { createRequire } from \"node:module\";\n\nexport const require = createRequire(import.meta.url);\n\n/**\n * Resolves the module name and normalizes slashes to be posix/unix-like forward slashes.\n *\n * @param moduleName The name of the module to be searched for\n * @returns The module path normalized\n */\nexport function resolveModule(moduleName: string) {\n  const module = require.resolve(moduleName);\n  return module.replace(/\\\\+/g, \"/\");\n}\n\n/**\n * This function will find out the module path using node `require.resolve` function\n * and add the suffix param after the folder with module name.\n *\n * @param moduleName \"@module/name\"\n * @param suffix to be added after the module path\n * @returns the /path/to/@module/name/<suffix>\n */\nexport function getModulePath(moduleName: string, suffix: string) {\n  const moduleNameWithSlashes = `/${moduleName}/`;\n  const module = resolveModule(moduleName);\n  const modulePosition = module.lastIndexOf(moduleNameWithSlashes);\n  return `${module.slice(\n    0,\n    modulePosition + moduleNameWithSlashes.length\n  )}${suffix}`;\n}\n"]}