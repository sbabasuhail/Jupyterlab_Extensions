import path from "path";
import { getPublicPath } from "./config-utils.js";
import { require } from "./nodeModule.js";
export default function serveAppShellConfig(appShellConfig, root, appShellConfigFile, automaticViewsFolder) {
    return {
        name: "vite-plugin-watch-app-shell-config",
        apply: "serve",
        configureServer(server) {
            const restartServer = (file) => {
                if (appShellConfigFile != null && file.endsWith(appShellConfigFile)) {
                    console.info("App Shell configuration file changed. Reloading...");
                    delete require.cache[require.resolve(appShellConfigFile)];
                    server
                        .restart()
                        .catch(e => console.error(`Restart failed with: ${e}`));
                }
            };
            const restartServer2 = (file) => {
                if (automaticViewsFolder != null && file.match(/\/index\.[tj]sx?$/)) {
                    console.info("Automatic views folder changed. Reloading...");
                    server
                        .restart()
                        .catch(e => console.error(`Restart failed with: ${e}`));
                }
            };
            if (appShellConfigFile != null) {
                server.watcher.add(appShellConfigFile);
                server.watcher.on("change", restartServer);
            }
            if (automaticViewsFolder != null) {
                server.watcher.add(path.resolve(root, automaticViewsFolder));
                server.watcher.on("unlink", restartServer2);
                server.watcher.on("add", restartServer2);
            }
            const publicPath = getPublicPath(appShellConfig);
            server.middlewares.use(`${publicPath}app-shell.config.json`, async (req, res) => {
                res.end(JSON.stringify(appShellConfig));
            });
        }
    };
}
//# sourceMappingURL=vite-watch-config-plugin.js.map