import type { Context } from 'react';
import { EmotionCache } from '@emotion/cache';
import { HvThemeColorModeStructure } from '@hitachivantara/uikit-styles';
import { HvThemeStructure } from '@hitachivantara/uikit-styles';

export declare const defaultCacheKey = "hv";

export declare const defaultEmotionCache: EmotionCache;

export declare const EmotionContext: Context<{
    cache: EmotionCache;
}>;

export declare type HvExtraDeepProps<T> = {
    [P in keyof T]: T[P] & HvExtraProps;
} & HvExtraProps;

export declare type HvExtraProps = {
    [key: string]: any;
};

/**
 * Theme structure
 */
export declare type HvTheme = HvExtraDeepProps<Omit<HvThemeStructure, "colors">> & {
    colors: {
        modes: {
            [key: string]: HvThemeColorModeStructure & {
                [key: string]: string;
            };
        };
    };
};

export declare const HvThemeContext: Context<HvThemeContextValue>;

export declare interface HvThemeContextValue {
    themes: string[];
    colorModes: string[];
    activeTheme?: HvTheme;
    selectedTheme: string;
    selectedMode: string;
    changeTheme: (theme?: string, mode?: string) => void;
    rootId?: string;
}

export { }
