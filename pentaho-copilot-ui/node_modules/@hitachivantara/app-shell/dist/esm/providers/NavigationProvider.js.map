{"version":3,"file":"NavigationProvider.js","sources":["../../../src/providers/NavigationProvider.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useMediaQuery, useTheme } from \"@mui/material\";\n\nimport { useAppShellConfig, useMenuItems } from \"../lib/hooks\";\nimport {\n  findItemById,\n  removeHrefFromMenuItemsWithChildren\n} from \"../lib/utils/navigationUtil\";\nimport { MenuItem } from \"../lib/types\";\n\nexport type NavigationProviderProps = {\n  children: React.ReactNode;\n};\n\nexport type VerticalNavigationMode = \"EXPANDED\" | \"COLLAPSED\" | \"CLOSED\";\n\nexport interface NavigationContextValue {\n  selectedMenuItemId: string | undefined;\n  rootMenuItemId: string | undefined;\n  items: MenuItem[];\n  verticalNavigationItems: MenuItem[];\n  hasVerticalNavigation: boolean;\n  showHeaderSubMenu: boolean;\n  isCompactMode: boolean;\n  verticalNavigationMode: VerticalNavigationMode;\n  switchVerticalNavigationMode: () => void;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextValue>({\n  selectedMenuItemId: undefined,\n  rootMenuItemId: undefined,\n  items: [],\n  verticalNavigationItems: [],\n  hasVerticalNavigation: false,\n  showHeaderSubMenu: false,\n  isCompactMode: false,\n  verticalNavigationMode: \"EXPANDED\",\n  switchVerticalNavigationMode: () => {\n    // Empty function\n  }\n});\n\nconst NavigationProvider = ({ children }: NavigationProviderProps) => {\n  const { navigationMode } = useAppShellConfig();\n  const { items, selectedMenuItemId, rootMenuItemId } = useMenuItems();\n\n  const muiTheme = useTheme();\n  const isCompactMode = useMediaQuery(muiTheme.breakpoints.down(\"md\"));\n\n  const [verticalNavigationMode, setVerticalNavigationMode] =\n    useState<VerticalNavigationMode>(isCompactMode ? \"CLOSED\" : \"EXPANDED\");\n  const [showHeaderSubMenu, setShowHeaderSubMenu] = useState(false);\n\n  const verticalNavigationItems = useMemo(() => {\n    if (isCompactMode) {\n      return items;\n    }\n    if (navigationMode === \"ONLY_LEFT\") {\n      return removeHrefFromMenuItemsWithChildren(items);\n    }\n\n    const itemsToReturn =\n      (rootMenuItemId && findItemById(items, rootMenuItemId)?.data) || [];\n\n    return removeHrefFromMenuItemsWithChildren(itemsToReturn);\n  }, [items, navigationMode, rootMenuItemId, isCompactMode]);\n\n  const hasVerticalNavigation = useMemo(() => {\n    if (isCompactMode) {\n      return true;\n    }\n\n    if (navigationMode === \"ONLY_TOP\") {\n      return false;\n    }\n    return verticalNavigationItems && verticalNavigationItems.length > 0;\n  }, [navigationMode, verticalNavigationItems, isCompactMode]);\n\n  useEffect(() => {\n    // We need to change the verticalNavigationMode when the isCompactMode changes\n    if (isCompactMode) {\n      setVerticalNavigationMode(\"CLOSED\");\n    } else {\n      setVerticalNavigationMode(\"EXPANDED\");\n    }\n  }, [isCompactMode]);\n\n  useEffect(() => {\n    setShowHeaderSubMenu(\n      navigationMode === \"ONLY_TOP\" &&\n        items.some(item => item.data && item.data.length > 0)\n    );\n  }, [navigationMode, items]);\n\n  const switchVerticalNavigationMode = useCallback(() => {\n    setVerticalNavigationMode((prevState: VerticalNavigationMode) => {\n      if (isCompactMode) {\n        if (prevState === \"CLOSED\") {\n          return \"EXPANDED\";\n        }\n        return \"CLOSED\";\n      }\n      if (prevState === \"COLLAPSED\") {\n        return \"EXPANDED\";\n      }\n      return \"COLLAPSED\";\n    });\n  }, [isCompactMode]);\n\n  const value = useMemo(\n    () => ({\n      selectedMenuItemId,\n      rootMenuItemId,\n      items,\n      verticalNavigationItems,\n      hasVerticalNavigation,\n      showHeaderSubMenu,\n      isCompactMode,\n      verticalNavigationMode,\n      switchVerticalNavigationMode\n    }),\n    [\n      selectedMenuItemId,\n      rootMenuItemId,\n      items,\n      verticalNavigationItems,\n      hasVerticalNavigation,\n      showHeaderSubMenu,\n      isCompactMode,\n      verticalNavigationMode,\n      switchVerticalNavigationMode\n    ]\n  );\n\n  return (\n    <NavigationContext.Provider value={value}>\n      {children}\n    </NavigationContext.Provider>\n  );\n};\n\nexport default NavigationProvider;\n"],"names":["NavigationContext","React","createContext","selectedMenuItemId","undefined","rootMenuItemId","items","verticalNavigationItems","hasVerticalNavigation","showHeaderSubMenu","isCompactMode","verticalNavigationMode","switchVerticalNavigationMode","NavigationProvider","children","navigationMode","useAppShellConfig","useMenuItems","muiTheme","useTheme","useMediaQuery","breakpoints","down","setVerticalNavigationMode","useState","setShowHeaderSubMenu","useMemo","removeHrefFromMenuItemsWithChildren","itemsToReturn","findItemById","data","length","useEffect","some","item","useCallback","prevState","value","jsx","NavigationProvider$1"],"mappings":";;;;;;AA4BaA,MAAAA,IAAoBC,EAAMC,cAAsC;AAAA,EAC3EC,oBAAoBC;AAAAA,EACpBC,gBAAgBD;AAAAA,EAChBE,OAAO,CAAE;AAAA,EACTC,yBAAyB,CAAE;AAAA,EAC3BC,uBAAuB;AAAA,EACvBC,mBAAmB;AAAA,EACnBC,eAAe;AAAA,EACfC,wBAAwB;AAAA,EACxBC,8BAA8BA,MAAM;AAAA,EAClC;AAEJ,CAAC,GAEKC,IAAqBA,CAAC;AAAA,EAAEC,UAAAA;AAAkC,MAAM;AAC9D,QAAA;AAAA,IAAEC,gBAAAA;AAAAA,MAAmBC,EAAkB,GACvC;AAAA,IAAEV,OAAAA;AAAAA,IAAOH,oBAAAA;AAAAA,IAAoBE,gBAAAA;AAAAA,MAAmBY,EAAa,GAE7DC,IAAWC,KACXT,IAAgBU,EAAcF,EAASG,YAAYC,KAAK,IAAI,CAAC,GAE7D,CAACX,GAAwBY,CAAyB,IACtDC,EAAiCd,IAAgB,WAAW,UAAU,GAClE,CAACD,GAAmBgB,CAAoB,IAAID,EAAS,EAAK,GAE1DjB,IAA0BmB,EAAQ,MAAM;;AAC5C,QAAIhB;AACKJ,aAAAA;AAET,QAAIS,MAAmB;AACrB,aAAOY,EAAoCrB,CAAK;AAGlD,UAAMsB,IACHvB,OAAkBwB,IAAAA,EAAavB,GAAOD,CAAc,MAAlCwB,gBAAAA,EAAqCC,SAAS;AAEnE,WAAOH,EAAoCC,CAAa;AAAA,KACvD,CAACtB,GAAOS,GAAgBV,GAAgBK,CAAa,CAAC,GAEnDF,IAAwBkB,EAAQ,MAChChB,IACK,KAGLK,MAAmB,aACd,KAEFR,KAA2BA,EAAwBwB,SAAS,GAClE,CAAChB,GAAgBR,GAAyBG,CAAa,CAAC;AAE3DsB,EAAAA,EAAU,MAAM;AAEd,IACET,EADEb,IACwB,WAEA,UAFQ;AAAA,EAGpC,GACC,CAACA,CAAa,CAAC,GAElBsB,EAAU,MAAM;AAEZjB,IAAAA,EAAAA,MAAmB,cACjBT,EAAM2B,KAAKC,CAAAA,MAAQA,EAAKJ,QAAQI,EAAKJ,KAAKC,SAAS,CAAC,CACxD;AAAA,EAAA,GACC,CAAChB,GAAgBT,CAAK,CAAC;AAEpBM,QAAAA,IAA+BuB,EAAY,MAAM;AACrDZ,IAAAA,EAA0B,CAACa,MACrB1B,IACE0B,MAAc,WACT,aAEF,WAELA,MAAc,cACT,aAEF,WACR;AAAA,EAAA,GACA,CAAC1B,CAAa,CAAC,GAEZ2B,IAAQX,EACZ,OAAO;AAAA,IACLvB,oBAAAA;AAAAA,IACAE,gBAAAA;AAAAA,IACAC,OAAAA;AAAAA,IACAC,yBAAAA;AAAAA,IACAC,uBAAAA;AAAAA,IACAC,mBAAAA;AAAAA,IACAC,eAAAA;AAAAA,IACAC,wBAAAA;AAAAA,IACAC,8BAAAA;AAAAA,EACF,IACA,CACET,GACAE,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,CAA4B,CAEhC;AAEA,SACG,gBAAA0B,EAAAtC,EAAkB,UAAlB,EAA2B,OAAAqC,GACzBvB,UAAAA,EACH,CAAA;AAEJ,GAEAyB,IAAe1B;"}