{"version":3,"file":"BannerProvider.js","sources":["../../../src/providers/BannerProvider.tsx"],"sourcesContent":["import { createContext, useEffect, useMemo, useState } from \"react\";\nimport { css } from \"@emotion/css\";\nimport { v4 as uuid } from \"uuid\";\n\nimport { HvBanner, theme } from \"@hitachivantara/uikit-react-core\";\nimport { useTranslation } from \"react-i18next\";\nimport useNavigationContext from \"./hooks/useNavigationContext\";\nimport { SUB_HEADER_HEIGHT } from \"../components/layout/Main/styles\";\nimport { NotificationDetail } from \"../lib/types/notifications\";\nimport useLayoutContext from \"./hooks/useLayoutContext\";\n\nexport type BannerProviderProps = {\n  children: React.ReactNode;\n};\n\nexport interface Banner extends Omit<NotificationDetail, \"type\"> {\n  id: string;\n}\n\nexport interface BannerContextValue {\n  show: (notification: NotificationDetail) => void;\n  dismiss: (id: string) => void;\n}\n\nexport const BannerContext = createContext<BannerContextValue>({\n  show: () => {\n    // Empty function\n  },\n  dismiss: () => {\n    // Empty function\n  }\n});\n\nconst BannerProvider = ({ children }: BannerProviderProps) => {\n  const { t } = useTranslation();\n  const { showHeaderSubMenu, isCompactMode } = useNavigationContext();\n  const { verticalNavigationWidth, setBannerMaxHeight } = useLayoutContext();\n  const [banners, setBanners] = useState<Banner[]>([]);\n\n  const show = (notification: NotificationDetail) => {\n    const id = uuid();\n\n    const newBanner: Banner = {\n      id,\n      ...notification,\n      variant: notification.variant || \"default\"\n    };\n    setBanners(prevBanners => [...prevBanners, newBanner]);\n  };\n\n  const dismiss = (id: string) => {\n    setBanners(prevBanners => prevBanners.filter(banner => banner.id !== id));\n  };\n\n  const value = useMemo(\n    () => ({\n      show,\n      dismiss\n    }),\n    []\n  );\n\n  useEffect(() => {\n    if (banners.length > 0) {\n      // Get all heights from the rendered banners\n      const bannerHeights = banners.map(item => {\n        const bannerElement = document.getElementById(item.id);\n        return bannerElement ? bannerElement.clientHeight : 0;\n      });\n\n      // Find the 'tallest' banner\n      const maxBannerHeight = Math.max(...bannerHeights);\n\n      // Update padding value\n      setBannerMaxHeight(maxBannerHeight);\n    } else {\n      setBannerMaxHeight(0);\n    }\n  }, [banners, setBannerMaxHeight]);\n\n  const styles = useMemo(\n    () =>\n      css({\n        marginTop:\n          showHeaderSubMenu && !isCompactMode\n            ? `calc(${SUB_HEADER_HEIGHT}px + ${theme.space.sm})`\n            : theme.space.sm,\n        left: `calc(${verticalNavigationWidth}px + ${theme.space.sm})`,\n        width: `calc(100% - (${verticalNavigationWidth}px + ${theme.space.sm}) - ${theme.space.sm})`,\n        transform: \"unset\",\n        minWidth: \"unset\",\n        zIndex: theme.zIndices.banner\n      }),\n    [isCompactMode, showHeaderSubMenu, verticalNavigationWidth]\n  );\n\n  const closeBannerLabel = t(\"notifications.banner.close\");\n\n  return (\n    <BannerContext.Provider value={value}>\n      {banners.map(banner => (\n        <HvBanner\n          classes={{\n            anchorOriginTopCenter: styles\n          }}\n          id={banner.id}\n          key={banner.id}\n          open\n          onClose={() => dismiss(banner.id)}\n          variant={banner.variant}\n          label={banner.message}\n          showIcon\n          actions={banner.actions}\n          actionsCallback={banner.actionsCallback}\n          bannerContentProps={{\n            actionProps: { \"aria-label\": closeBannerLabel }\n          }}\n        />\n      ))}\n      {children}\n    </BannerContext.Provider>\n  );\n};\n\nexport default BannerProvider;\n"],"names":["BannerContext","createContext","show","dismiss","BannerProvider","children","t","useTranslation","showHeaderSubMenu","isCompactMode","useNavigationContext","verticalNavigationWidth","setBannerMaxHeight","useLayoutContext","banners","setBanners","useState","notification","newBanner","id","uuid","variant","prevBanners","filter","banner","value","useMemo","useEffect","length","bannerHeights","map","item","bannerElement","document","getElementById","clientHeight","maxBannerHeight","Math","max","styles","css","marginTop","SUB_HEADER_HEIGHT","theme","space","sm","left","width","transform","minWidth","zIndex","zIndices","process","env","NODE_ENV","closeBannerLabel","jsxs","jsx","HvBanner","anchorOriginTopCenter","message","actions","actionsCallback","actionProps","BannerProvider$1"],"mappings":";;;;;;;;;AAwBO,MAAMA,IAAgBC,EAAkC;AAAA,EAC7DC,MAAMA,MAAM;AAAA,EACV;AAAA,EAEFC,SAASA,MAAM;AAAA,EACb;AAEJ,CAAC,GAEKC,IAAiBA,CAAC;AAAA,EAAEC,UAAAA;AAA8B,MAAM;AACtD,QAAA;AAAA,IAAEC,GAAAA;AAAAA,MAAMC,EAAe,GACvB;AAAA,IAAEC,mBAAAA;AAAAA,IAAmBC,eAAAA;AAAAA,MAAkBC,EAAqB,GAC5D;AAAA,IAAEC,yBAAAA;AAAAA,IAAyBC,oBAAAA;AAAAA,MAAuBC,EAAiB,GACnE,CAACC,GAASC,CAAU,IAAIC,EAAmB,CAAE,CAAA,GAE7Cd,IAAOA,CAACe,MAAqC;AAGjD,UAAMC,IAAoB;AAAA,MACxBC,IAHSC;MAIT,GAAGH;AAAAA,MACHI,SAASJ,EAAaI,WAAW;AAAA,IAAA;AAEnCN,IAAAA,EAAWO,CAAeA,MAAA,CAAC,GAAGA,GAAaJ,CAAS,CAAC;AAAA,EAAA,GAGjDf,IAAUA,CAACgB,MAAe;AAC9BJ,IAAAA,EAAWO,OAAeA,EAAYC,OAAOC,OAAUA,EAAOL,OAAOA,CAAE,CAAC;AAAA,EAAA,GAGpEM,IAAQC,EACZ,OAAO;AAAA,IACLxB,MAAAA;AAAAA,IACAC,SAAAA;AAAAA,EAAAA,IAEF,CACF,CAAA;AAEAwB,EAAAA,EAAU,MAAM;AACVb,QAAAA,EAAQc,SAAS,GAAG;AAEhBC,YAAAA,IAAgBf,EAAQgB,IAAIC,CAAQA,MAAA;AACxC,cAAMC,IAAgBC,SAASC,eAAeH,EAAKZ,EAAE;AAC9Ca,eAAAA,IAAgBA,EAAcG,eAAe;AAAA,MAAA,CACrD,GAGKC,IAAkBC,KAAKC,IAAI,GAAGT,CAAa;AAGjDjB,MAAAA,EAAmBwB,CAAe;AAAA,IAAA;AAElCxB,MAAAA,EAAmB,CAAC;AAAA,EACtB,GACC,CAACE,GAASF,CAAkB,CAAC;AAE1B2B,QAAAA,IAASb,EACb,MACM,gBAAAc,EAAA;AAAA,IACFC,WACEjC,KAAqB,CAACC,IACjB,QAAOiC,CAAkB,QAAOC,EAAMC,MAAMC,EAAG,MAChDF,EAAMC,MAAMC;AAAAA,IAClBC,MAAO,QAAOnC,CAAwB,QAAOgC,EAAMC,MAAMC,EAAG;AAAA,IAC5DE,OAAQ,gBAAepC,CAAwB,QAAOgC,EAAMC,MAAMC,EAAG,OAAMF,EAAMC,MAAMC,EAAG;AAAA,IAC1FG,WAAW;AAAA,IACXC,UAAU;AAAA,IACVC,QAAQP,EAAMQ,SAAS3B;AAAAA,EAAAA,GACxB4B,QAAAC,IAAAC,aAAA,eAAA,KAAA,kBAAAF,QAAAC,IAAAC,aAAA,eAAA,KAAA,ywKAAA,GACH,CAAC7C,GAAeD,GAAmBG,CAAuB,CAC5D,GAEM4C,IAAmBjD,EAAE,4BAA4B;AAEvD,SACG,gBAAAkD,EAAAxD,EAAc,UAAd,EAAuB,OAAAyB,GACrBX,UAAAA;AAAAA,IAAAA,EAAQgB,IAAIN,CAAAA,MACV,gBAAAiC,EAAAC,GAAA,EACC,SAAS;AAAA,MACPC,uBAAuBpB;AAAAA,IACzB,GACA,IAAIf,EAAOL,IAEX,MAAI,IACJ,SAAS,MAAMhB,EAAQqB,EAAOL,EAAE,GAChC,SAASK,EAAOH,SAChB,OAAOG,EAAOoC,SACd,UAAQ,IACR,SAASpC,EAAOqC,SAChB,iBAAiBrC,EAAOsC,iBACxB,oBAAoB;AAAA,MAClBC,aAAa;AAAA,QAAE,cAAcR;AAAAA,MAAiB;AAAA,IAAA,KAT3C/B,EAAOL,GAYf;AAAA,IACAd;AAAAA,EACH,EAAA,CAAA;AAEJ,GAEA2D,IAAe5D;"}