import { jsx as r, jsxs as m } from "@emotion/react/jsx-runtime";
import { useTranslation as b } from "react-i18next";
import { HvVerticalNavigationHeader as h, HvVerticalNavigationTree as C, HvVerticalNavigationActions as L } from "@hitachivantara/uikit-react-core";
import { useRef as V, useEffect as x } from "react";
import B from "../../../lib/hooks/useNavigation.js";
import H from "../../../providers/hooks/useNavigationContext.js";
import { StyledHvVerticalNavigation as I, navigationPopupStyles as P } from "./styles.js";
import w from "../../hoc/withClickAwayListener.js";
import A from "../../../providers/hooks/useLayoutContext.js";
const E = () => {
  const {
    t: a
  } = b(), {
    selectedMenuItemId: v,
    rootMenuItemId: d,
    verticalNavigationItems: g,
    isCompactMode: t,
    verticalNavigationMode: l,
    switchVerticalNavigationMode: s
  } = H(), {
    setVerticalNavigationWidth: o
  } = A(), {
    navigate: p
  } = B(), c = V(null), n = l === "EXPANDED", u = (e, i) => {
    e.preventDefault(), i.href && (p(i.href, {
      state: {
        selectedItemId: i.id
      }
    }), t && s());
  }, f = () => {
    s();
  };
  x(() => {
    const {
      current: e
    } = c, i = e == null ? void 0 : e.childNodes[0];
    return o(i && !t ? i.offsetWidth : 0), () => o(0);
  }, [l, t, o]);
  const N = a(n ? "verticalNavigation.ariaLabelCollapse" : "verticalNavigation.ariaLabelExpand");
  return /* @__PURE__ */ r("div", { ref: c, children: /* @__PURE__ */ m(I, { isCompactMode: t, open: n, useIcons: !0, slider: t, children: [
    /* @__PURE__ */ r(h, { title: a("verticalNavigation.title") ?? "", onCollapseButtonClick: t ? void 0 : f, collapseButtonProps: {
      "aria-label": N,
      "aria-expanded": n
    }, backButtonProps: {
      "aria-label": a("verticalNavigation.ariaLabelHeaderBackButton") ?? ""
    } }),
    /* @__PURE__ */ r(C, { mode: "navigation", collapsible: !0, "aria-label": a("verticalNavigation.ariaLabelNavigationTree") ?? "", selected: v ?? "", onChange: u, data: g, classes: {
      navigationPopup: P
    }, sliderForwardButtonAriaLabel: a("verticalNavigation.ariaLabelSliderForwardButton") ?? "" }, d),
    /* @__PURE__ */ r(L, {})
  ] }) });
}, W = w(E);
export {
  W as default
};
//# sourceMappingURL=VerticalNavigation.js.map
