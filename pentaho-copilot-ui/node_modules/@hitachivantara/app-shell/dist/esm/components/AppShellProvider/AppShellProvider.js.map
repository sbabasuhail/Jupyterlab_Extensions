{"version":3,"file":"AppShellProvider.js","sources":["../../../../src/components/AppShellProvider/AppShellProvider.tsx"],"sourcesContent":["import { useContext, useEffect, useMemo, useState } from \"react\";\nimport {\n  HvAppShellConfig,\n  HvAppShellContext,\n  HvAppShellContextValue,\n  HvAppShellRuntimeContext\n} from \"@hitachivantara/app-shell-shared\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { I18nContext } from \"react-i18next\";\n\nimport {\n  HvProvider,\n  HvTheme,\n  themes as baseThemes\n} from \"@hitachivantara/uikit-react-core\";\n\nimport useAppShellConfig from \"../../lib/hooks/useAppShellConfig\";\nimport getBasePath from \"../../lib/utils/basePathUtils\";\nimport {\n  addResourceBundles,\n  CONFIG_TRANSLATIONS_NAMESPACE\n} from \"../../lib/i18n\";\nimport useLocalStorage, {\n  LOCAL_STORAGE_KEYS\n} from \"../../lib/hooks/useLocalStorage\";\n\nexport type AppShellProviderProps = {\n  children: React.ReactNode;\n  config?: Partial<HvAppShellConfig>;\n  configUrl?: string;\n};\n\nfunction mergeConfigs(\n  baseConfig: HvAppShellConfig,\n  ...patchConfigs: Partial<HvAppShellConfig>[]\n): HvAppShellConfig {\n  return patchConfigs.reduce((acc, patchConfig) => {\n    if (patchConfig === undefined) {\n      return acc;\n    }\n\n    if (acc === undefined) {\n      return patchConfig;\n    }\n\n    return {\n      ...acc,\n      ...patchConfig\n    };\n  }, baseConfig) as HvAppShellConfig;\n}\n\nconst AppShellProvider = ({\n  children,\n  config: localConfig,\n  configUrl\n}: AppShellProviderProps) => {\n  const outerConfig = useAppShellConfig();\n  const { i18n } = useContext(I18nContext);\n  const { value: storedColorModeValue } = useLocalStorage(\n    LOCAL_STORAGE_KEYS.COLOR_MODE\n  );\n  const [loadedConfig, setValue] = useState<HvAppShellConfig | undefined>(\n    undefined\n  );\n\n  const [hasError, setHasError] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (configUrl) {\n      fetch(new URL(configUrl))\n        .then(result => {\n          return result.json();\n        })\n        .then(data => setValue(data))\n        .catch(e => {\n          console.error(\n            `It was not possible to obtain the context from: ${configUrl}`,\n            e\n          );\n          setValue(undefined);\n          setHasError(true);\n        });\n    }\n  }, [configUrl]);\n\n  const tmpConfig: HvAppShellContextValue = useMemo(\n    () =>\n      mergeConfigs(\n        loadedConfig as HvAppShellConfig,\n        localConfig as HvAppShellConfig,\n        outerConfig\n      ),\n    [loadedConfig, localConfig, outerConfig]\n  );\n\n  if (hasError) {\n    throw Error(\"It was not possible to obtain the configuration\");\n  }\n\n  const emptyConfig: HvAppShellConfig = {\n    apps: [],\n    menu: [],\n    navigationMode: \"TOP_AND_LEFT\"\n  };\n\n  // as we are accepting localConfig as partial, some keys might be not passed and o merge with an empty config to guarantee that we have a complete config\n  const value: HvAppShellContextValue = mergeConfigs(emptyConfig, tmpConfig);\n\n  if (value.translations) {\n    addResourceBundles(i18n, value.translations, CONFIG_TRANSLATIONS_NAMESPACE);\n  }\n\n  const [themes, setThemes] = useState<HvTheme[] | undefined>(undefined);\n\n  useEffect(() => {\n    if (value.theming?.themes) {\n      Promise.all(\n        value.theming.themes?.map(bundle => {\n          return (\n            ((bundle === \"ds3\" || bundle === \"ds5\") && baseThemes[bundle]) ||\n            import(/* @vite-ignore */ bundle)\n              .then(module => module.default)\n              .catch(e => {\n                console.error(`Import of theme bundle ${bundle} failed! ${e}`);\n              })\n          );\n        })\n      )\n        .then(loadedThemes => {\n          setThemes(loadedThemes.filter(theme => !!theme));\n        })\n        .catch(e => {\n          console.error(`Import of themes failed! ${e}`);\n        });\n    }\n  }, [value.theming?.themes]);\n\n  const runtimeContext = useMemo(\n    () => ({\n      i18n\n    }),\n    [i18n]\n  );\n  if (!tmpConfig?.apps || (value.theming?.themes && !themes)) {\n    return null;\n  }\n\n  return (\n    <HvAppShellContext.Provider value={value}>\n      <HvAppShellRuntimeContext.Provider value={runtimeContext}>\n        <HvProvider\n          themes={themes}\n          theme={value.theming?.theme}\n          colorMode={storedColorModeValue ?? value.theming?.colorMode}>\n          <BrowserRouter basename={getBasePath(value)}>\n            {children}\n          </BrowserRouter>\n        </HvProvider>\n      </HvAppShellRuntimeContext.Provider>\n    </HvAppShellContext.Provider>\n  );\n};\n\nexport default AppShellProvider;\n"],"names":["mergeConfigs","baseConfig","patchConfigs","reduce","acc","patchConfig","undefined","AppShellProvider","children","config","localConfig","configUrl","outerConfig","useAppShellConfig","i18n","useContext","I18nContext","value","storedColorModeValue","useLocalStorage","LOCAL_STORAGE_KEYS","COLOR_MODE","loadedConfig","setValue","useState","hasError","setHasError","useEffect","fetch","URL","then","result","json","data","catch","e","console","error","tmpConfig","useMemo","Error","apps","menu","navigationMode","translations","CONFIG_TRANSLATIONS_NAMESPACE","themes","setThemes","theming","Promise","all","map","bundle","baseThemes","module","default","loadedThemes","filter","theme","runtimeContext","jsx","HvAppShellContext","HvAppShellRuntimeContext","HvProvider","colorMode","BrowserRouter","getBasePath","AppShellProvider$1"],"mappings":";;;;;;;;;;AAgCA,SAASA,EACPC,MACGC,GACe;AAClB,SAAOA,EAAaC,OAAO,CAACC,GAAKC,MAC3BA,MAAgBC,SACXF,IAGLA,MAAQE,SACHD,IAGF;AAAA,IACL,GAAGD;AAAAA,IACH,GAAGC;AAAAA,EAAAA,GAEJJ,CAAU;AACf;AAEA,MAAMM,IAAmBA,CAAC;AAAA,EACxBC,UAAAA;AAAAA,EACAC,QAAQC;AAAAA,EACRC,WAAAA;AACqB,MAAM;;AAC3B,QAAMC,IAAcC,KACd;AAAA,IAAEC,MAAAA;AAAAA,EAAAA,IAASC,EAAWC,CAAW,GACjC;AAAA,IAAEC,OAAOC;AAAAA,EAAAA,IAAyBC,EACtCC,EAAmBC,UACrB,GACM,CAACC,GAAcC,CAAQ,IAAIC,EAC/BlB,MACF,GAEM,CAACmB,GAAUC,CAAW,IAAIF,EAAkB,EAAK;AAEvDG,EAAAA,EAAU,MAAM;AACd,IAAIhB,KACFiB,MAAM,IAAIC,IAAIlB,CAAS,CAAC,EACrBmB,KAAKC,CAAUA,MACPA,EAAOC,MACf,EACAF,KAAKG,CAAAA,MAAQV,EAASU,CAAI,CAAC,EAC3BC,MAAMC,CAAKA,MAAA;AACVC,cAAQC,MACL,mDAAkD1B,CAAU,IAC7DwB,CACF,GACAZ,EAASjB,MAAS,GAClBoB,EAAY,EAAI;AAAA,IAAA,CACjB;AAAA,EACL,GACC,CAACf,CAAS,CAAC;AAEd,QAAM2B,IAAoCC,EACxC,MACEvC,EACEsB,GACAZ,GACAE,CACF,GACF,CAACU,GAAcZ,GAAaE,CAAW,CACzC;AAEA,MAAIa;AACF,UAAMe,MAAM,iDAAiD;AAUzDvB,QAAAA,IAAgCjB,EAPA;AAAA,IACpCyC,MAAM,CAAE;AAAA,IACRC,MAAM,CAAE;AAAA,IACRC,gBAAgB;AAAA,EAAA,GAI8CL,CAAS;AAEzE,EAAIrB,EAAM2B,gBACW9B,EAAAA,GAAMG,EAAM2B,cAAcC,CAA6B;AAG5E,QAAM,CAACC,GAAQC,CAAS,IAAIvB,EAAgClB,MAAS;AAErEqB,EAAAA,EAAU,MAAM;;AACVV,KAAAA,IAAAA,EAAM+B,YAAN/B,QAAAA,EAAe6B,UACjBG,QAAQC,KACNjC,IAAAA,EAAM+B,QAAQF,WAAd7B,gBAAAA,EAAsBkC,IAAIC,CAAUA,OAE9BA,MAAW,SAASA,MAAW,UAAUC,EAAWD,CAAM,KAC5D;AAAA;AAAA,MAA0BA;AAAAA,MACvBtB,KAAKwB,CAAUA,MAAAA,EAAOC,OAAO,EAC7BrB,MAAMC,CAAKA,MAAA;AACVC,cAAQC,MAAO,0BAAyBe,CAAO,YAAWjB,CAAE,EAAC;AAAA,IAAA,CAC9D,EAGT,EACGL,KAAK0B,CAAgBA,MAAA;AACpBT,MAAAA,EAAUS,EAAaC,OAAOC,CAAAA,MAAS,CAAC,CAACA,CAAK,CAAC;AAAA,IAAA,CAChD,EACAxB,MAAMC,CAAKA,MAAA;AACFE,cAAAA,MAAO,4BAA2BF,CAAE,EAAC;AAAA,IAAA,CAC9C;AAAA,EAEJ,GAAA,EAAClB,IAAAA,EAAM+B,YAAN/B,gBAAAA,EAAe6B,MAAM,CAAC;AAEpBa,QAAAA,IAAiBpB,EACrB,OAAO;AAAA,IACLzB,MAAAA;AAAAA,EAAAA,IAEF,CAACA,CAAI,CACP;AACA,SAAI,EAACwB,KAAAA,QAAAA,EAAWG,UAASxB,IAAAA,EAAM+B,YAAN/B,QAAAA,EAAe6B,UAAU,CAACA,IAC1C,OAIN,gBAAAc,EAAAC,EAAkB,UAAlB,EAA2B,OAAA5C,GAC1B,UAAC,gBAAA2C,EAAAE,EAAyB,UAAzB,EAAkC,OAAOH,GACxC,UAAC,gBAAAC,EAAAG,GAAA,EACCjB,QAAAA,GACA,QAAO7B,IAAAA,EAAM+B,YAAN/B,gBAAAA,EAAeyC,OACtB,WAAWxC,OAAwBD,IAAAA,EAAM+B,YAAN/B,gBAAAA,EAAe+C,YAClD,UAAC,gBAAAJ,EAAAK,GAAA,EAAc,UAAUC,EAAYjD,CAAK,GACvCT,UAAAA,EACH,CAAA,GACF,GACF,EACF,CAAA;AAEJ,GAEA2D,IAAe5D;"}