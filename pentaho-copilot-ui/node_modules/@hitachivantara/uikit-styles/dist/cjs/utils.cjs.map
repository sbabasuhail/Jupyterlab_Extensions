{"version":3,"file":"utils.cjs","sources":["../../src/utils.ts"],"sourcesContent":["import type { DeepString, HvThemeStructure, SpacingValue } from \"./types\";\nimport { space } from \"./tokens/space\";\n\nexport const spacingUtil = (value: SpacingValue): string => {\n  switch (typeof value) {\n    case \"number\":\n      return `calc(${space.base} * ${value}px)`;\n    case \"string\":\n      return space[value] || value;\n    default:\n      return value;\n  }\n};\n\n// TODO: remove in favour or `spacingUtil` in v6\nexport const spacingUtilOld = (value: SpacingValue): string => {\n  switch (typeof value) {\n    case \"number\":\n      return `${value}px`;\n    case \"string\":\n      return space[value] || value;\n    default:\n      return \"0px\";\n  }\n};\n\nconst toCSSVars = (obj: object, prefix = \"--uikit\") => {\n  const vars = {};\n\n  for (const [key, value] of Object.entries(obj)) {\n    if (typeof value === \"object\") {\n      const nestedVars = toCSSVars(value, `${prefix}-${key}`);\n\n      for (const [nestedKey, nestedValue] of Object.entries(nestedVars)) {\n        vars[nestedKey] = nestedValue;\n      }\n    } else {\n      vars[`${prefix}-${key}`] = value;\n    }\n  }\n\n  return vars;\n};\n\nexport const hasMultipleArgs = <T extends any>(\n  args: T[] | [T[]]\n): args is T[] => {\n  return args.length > 1;\n};\n\nexport const mapCSSVars = <T extends object>(\n  obj: T,\n  prefix: string = \"--uikit\"\n): DeepString<T> => {\n  const vars = {} as DeepString<T>;\n\n  for (const [key, value] of Object.entries(obj)) {\n    if (typeof value === \"object\") {\n      vars[key] = mapCSSVars(value, `${prefix}-${key}`);\n    } else {\n      vars[key] = `var(${prefix}-${key})`;\n    }\n  }\n\n  return vars;\n};\n\nexport const mergeTheme = (...objects) => {\n  const isObject = (obj) => obj && typeof obj === \"object\";\n\n  return objects.reduce((prev, obj) => {\n    Object.keys(obj).forEach((key) => {\n      const pVal = prev[key];\n      const oVal = obj[key];\n\n      if (isObject(pVal) && isObject(oVal)) {\n        prev[key] = pVal ? oVal : mergeTheme(pVal, oVal);\n      } else {\n        prev[key] = oVal;\n      }\n    });\n\n    return prev;\n  }, {});\n};\n\nexport const parseTheme = (\n  themes: HvThemeStructure[],\n  theme: string = \"\",\n  colorMode: string = \"\"\n): {\n  theme: HvThemeStructure;\n  selectedTheme: string;\n  selectedMode: string;\n  colorModes: string[];\n  colorScheme: string;\n} => {\n  const names: string[] = themes.map((t) => t.name);\n  const selectedTheme: string = names.includes(theme) ? theme : names[0];\n  const themeStructure: HvThemeStructure =\n    themes.find((t) => t.name === selectedTheme) || themes[0];\n  const colorModes: string[] = Object.keys(themeStructure.colors.modes);\n  const selectedMode: string = colorModes.includes(colorMode)\n    ? colorMode\n    : colorModes[0];\n  const colorScheme = themeStructure.colors.modes[selectedMode].type;\n\n  return {\n    theme: themeStructure,\n    selectedTheme,\n    selectedMode,\n    colorModes,\n    colorScheme,\n  };\n};\n\nexport const getThemesList = (themes: object) => {\n  const list = {};\n\n  Object.keys(themes).forEach((themeName) => {\n    const theme = themes[themeName];\n    const colorModes = Object.keys(theme.colors.modes);\n\n    list[themeName] = {\n      colorModes: {},\n    };\n\n    colorModes.forEach((colorMode) => {\n      list[themeName].colorModes[colorMode] = toCSSVars({\n        ...theme,\n        colors: {\n          ...theme.colors.modes[colorMode],\n        },\n      });\n    });\n  });\n\n  return list;\n};\n\nexport const getThemesVars = (themes: HvThemeStructure[]) => {\n  const vars = {};\n\n  themes.forEach((theme) => {\n    const colorModes = Object.keys(theme.colors.modes);\n\n    colorModes.forEach((colorMode) => {\n      const styleName = `[data-theme=\"${theme.name}\"][data-color-mode=\"${colorMode}\"]`;\n\n      const { name, ...rest } = theme;\n\n      vars[styleName] = toCSSVars({\n        ...rest,\n        colors: {\n          ...rest.colors.modes[colorMode],\n        },\n      });\n    });\n  });\n\n  return vars;\n};\n"],"names":["spacingUtil","value","space","base","spacingUtilOld","toCSSVars","obj","prefix","vars","key","Object","entries","nestedVars","nestedKey","nestedValue","hasMultipleArgs","args","length","mapCSSVars","mergeTheme","objects","isObject","reduce","prev","keys","forEach","pVal","oVal","parseTheme","themes","theme","colorMode","names","map","t","name","selectedTheme","includes","themeStructure","find","colorModes","colors","modes","selectedMode","colorScheme","type","getThemesList","list","themeName","getThemesVars","styleName","rest"],"mappings":"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"}