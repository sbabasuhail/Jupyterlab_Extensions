import type { Context } from 'react';
import type { i18n } from 'i18next';

export declare type HvAppShellAppsConfig = {
    id: string;
    baseUrl: string;
    views?: HvAppShellViewsConfig[];
    modules?: HvAppShellModulesConfig[];
};

export declare type HvAppShellAppSwitcherConfig = {
    title?: string;
    apps: HvAppShellAppSwitcherItemConfig[];
};

export declare type HvAppShellAppSwitcherItemConfig = {
    label: string;
    description?: string;
    url: string;
    target: "NEW" | "SELF";
    icon?: HvAppShellIcon;
};

export declare type HvAppShellConfig = {
    name?: string;
    logo?: HvAppShellLogo;
    apps?: HvAppShellAppsConfig[];
    menu?: HvAppShellMenuConfig[];
    translations?: Record<string, object>;
    navigationMode?: "TOP_AND_LEFT" | "ONLY_TOP" | "ONLY_LEFT";
    mainPanel?: HvAppShellMainPanelConfig;
    theming?: HvAppShellThemingConfig;
    header?: HvAppShellHeader;
};

export declare const HvAppShellContext: Context<HvAppShellConfig | undefined>;

export declare type HvAppShellContextValue = HvAppShellConfig;

export declare type HvAppShellHeader = {
    actions: HvAppShellHeaderAction[];
};

export declare type HvAppShellHeaderAction = {
    bundle: string;
    config?: HvAppShellHelp | HvAppShellAppSwitcherConfig | Record<string, unknown>;
};

export declare type HvAppShellHelp = {
    url: string;
    description?: string;
};

export declare type HvAppShellIcon = {
    iconType: "uikit";
    name: string;
};

export declare type HvAppShellLogo = {
    name?: "LUMADA" | "HITACHI";
    description?: string;
};

export declare type HvAppShellMainPanelConfig = {
    maxWidth?: "xs" | "sm" | "md" | "lg" | "xl" | false;
};

export declare type HvAppShellMenuConfig = {
    label: string;
    icon?: HvAppShellIcon;
    target?: string;
    submenus?: HvAppShellMenuConfig[];
};

export declare type HvAppShellModulesConfig = {
    bundle: string;
};

export declare const HvAppShellRuntimeContext: Context<HvAppShellRuntimeContextValue | undefined>;

export declare interface HvAppShellRuntimeContextValue {
    i18n: i18n;
}

export declare type HvAppShellThemingConfig = {
    themes?: string[];
    theme?: string;
    colorMode?: string;
};

export declare const HvAppShellViewContext: Context<HvAppShellViewContextValue | undefined>;

export declare interface HvAppShellViewContextValue {
    id: string;
}

export declare type HvAppShellViewsConfig = HvAppShellModulesConfig & {
    route: string;
};

export { }
