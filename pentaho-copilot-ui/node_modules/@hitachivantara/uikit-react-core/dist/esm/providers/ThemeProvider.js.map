{"version":3,"file":"ThemeProvider.js","sources":["../../../src/providers/ThemeProvider.tsx"],"sourcesContent":["import { useCallback, useEffect, useMemo, useState } from \"react\";\n\nimport { parseTheme, HvThemeStructure } from \"@hitachivantara/uikit-styles\";\nimport {\n  HvThemeContext,\n  defaultCacheKey,\n  defaultEmotionCache,\n  EmotionContext,\n} from \"@hitachivantara/uikit-react-shared\";\nimport type { HvThemeContextValue } from \"@hitachivantara/uikit-react-shared\";\n\nimport {\n  createTheme,\n  ThemeProvider as MuiThemeProvider,\n} from \"@mui/material/styles\";\n\nimport { EmotionCache } from \"@emotion/cache\";\n\nimport { setElementAttrs } from \"@core/utils/theme\";\nimport { HvTheme } from \"@core/types/theme\";\n\nexport { HvThemeContext };\nexport type { HvThemeContextValue };\n\nexport { defaultCacheKey, defaultEmotionCache, EmotionContext };\n\ninterface HvThemeProviderProps {\n  children: React.ReactNode;\n  themes: (HvTheme | HvThemeStructure)[];\n  theme: string;\n  emotionCache: EmotionCache;\n  colorMode: string;\n  themeRootId?: string;\n}\n\nexport const HvThemeProvider = ({\n  children,\n  themes: themesList,\n  theme,\n  emotionCache,\n  colorMode,\n  themeRootId: rootId,\n}: HvThemeProviderProps) => {\n  const initTheme = parseTheme(themesList, theme, colorMode);\n\n  const [parsedTheme, setParsedTheme] = useState(initTheme);\n  const [activeTheme, setActiveTheme] = useState(parsedTheme.theme);\n  const [selectedTheme, setSelectedTheme] = useState(parsedTheme.selectedTheme);\n  const [selectedMode, setThemeMode] = useState(parsedTheme.selectedMode);\n  const [colorModes, setColorModes] = useState(parsedTheme.colorModes);\n  const [themes, setThemes] = useState(themesList.map((t) => t.name));\n\n  useEffect(() => {\n    const pTheme = parseTheme(themesList, theme, colorMode);\n    setThemes(themesList.map((t) => t.name));\n    setParsedTheme(pTheme);\n  }, [themesList, theme, colorMode]);\n\n  useEffect(() => {\n    setActiveTheme(parsedTheme.theme);\n    setSelectedTheme(parsedTheme.selectedTheme);\n    setThemeMode(parsedTheme.selectedMode);\n    setColorModes(parsedTheme.colorModes);\n\n    setElementAttrs(\n      parsedTheme.selectedTheme,\n      parsedTheme.selectedMode,\n      parsedTheme.colorScheme,\n      rootId\n    );\n  }, [parsedTheme, rootId]);\n\n  const changeTheme = useCallback(\n    (newTheme = selectedTheme, newMode = selectedMode) => {\n      const pTheme = parseTheme(themesList, newTheme, newMode);\n      setParsedTheme(pTheme);\n    },\n    [selectedMode, selectedTheme, themesList]\n  );\n\n  const value = useMemo<HvThemeContextValue>(\n    () => ({\n      themes,\n      colorModes,\n      activeTheme: activeTheme as HvTheme,\n      selectedTheme,\n      selectedMode,\n      changeTheme,\n      rootId,\n    }),\n    [\n      themes,\n      colorModes,\n      activeTheme,\n      selectedTheme,\n      selectedMode,\n      changeTheme,\n      rootId,\n    ]\n  );\n\n  const MuiTheme = createTheme({\n    breakpoints: {\n      values: {\n        ...activeTheme.breakpoints.values,\n      },\n    },\n  });\n\n  const emotionCacheValue = useMemo(\n    () => ({ cache: emotionCache }),\n    [emotionCache]\n  );\n\n  return (\n    <MuiThemeProvider theme={MuiTheme}>\n      <HvThemeContext.Provider value={value}>\n        <EmotionContext.Provider value={emotionCacheValue}>\n          {children}\n        </EmotionContext.Provider>\n      </HvThemeContext.Provider>\n    </MuiThemeProvider>\n  );\n};\n"],"names":["HvThemeProvider","children","themes","themesList","theme","emotionCache","colorMode","themeRootId","rootId","initTheme","parseTheme","parsedTheme","setParsedTheme","useState","activeTheme","setActiveTheme","selectedTheme","setSelectedTheme","selectedMode","setThemeMode","colorModes","setColorModes","setThemes","map","t","name","useEffect","pTheme","setElementAttrs","colorScheme","changeTheme","useCallback","newTheme","newMode","value","useMemo","MuiTheme","createTheme","breakpoints","values","emotionCacheValue","cache","MuiThemeProvider"],"mappings":";;;;;;;AAmCO,MAAMA,kBAAkBA,CAAC;AAAA,EAC9BC;AAAAA,EACAC,QAAQC;AAAAA,EACRC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC,aAAaC;AACO,MAAM;AAC1B,QAAMC,YAAYC,WAAWP,YAAYC,OAAOE,SAAS;AAEzD,QAAM,CAACK,aAAaC,cAAc,IAAIC,SAASJ,SAAS;AACxD,QAAM,CAACK,aAAaC,cAAc,IAAIF,SAASF,YAAYP,KAAK;AAChE,QAAM,CAACY,eAAeC,gBAAgB,IAAIJ,SAASF,YAAYK,aAAa;AAC5E,QAAM,CAACE,cAAcC,YAAY,IAAIN,SAASF,YAAYO,YAAY;AACtE,QAAM,CAACE,YAAYC,aAAa,IAAIR,SAASF,YAAYS,UAAU;AAC7D,QAAA,CAAClB,QAAQoB,SAAS,IAAIT,SAASV,WAAWoB,IAAKC,CAAAA,MAAMA,EAAEC,IAAI,CAAC;AAElEC,YAAU,MAAM;AACd,UAAMC,SAASjB,WAAWP,YAAYC,OAAOE,SAAS;AACtDgB,cAAUnB,WAAWoB,IAAKC,CAAMA,MAAAA,EAAEC,IAAI,CAAC;AACvCb,mBAAee,MAAM;AAAA,EACpB,GAAA,CAACxB,YAAYC,OAAOE,SAAS,CAAC;AAEjCoB,YAAU,MAAM;AACdX,mBAAeJ,YAAYP,KAAK;AAChCa,qBAAiBN,YAAYK,aAAa;AAC1CG,iBAAaR,YAAYO,YAAY;AACrCG,kBAAcV,YAAYS,UAAU;AAEpCQ,oBACEjB,YAAYK,eACZL,YAAYO,cACZP,YAAYkB,aACZrB,MACF;AAAA,EAAA,GACC,CAACG,aAAaH,MAAM,CAAC;AAExB,QAAMsB,cAAcC,YAClB,CAACC,WAAWhB,eAAeiB,UAAUf,iBAAiB;AACpD,UAAMS,SAASjB,WAAWP,YAAY6B,UAAUC,OAAO;AACvDrB,mBAAee,MAAM;AAAA,EAEvB,GAAA,CAACT,cAAcF,eAAeb,UAAU,CAC1C;AAEM+B,QAAAA,QAAQC,QACZ,OAAO;AAAA,IACLjC;AAAAA,IACAkB;AAAAA,IACAN;AAAAA,IACAE;AAAAA,IACAE;AAAAA,IACAY;AAAAA,IACAtB;AAAAA,EAAAA,IAEF,CACEN,QACAkB,YACAN,aACAE,eACAE,cACAY,aACAtB,MAAM,CAEV;AAEA,QAAM4B,WAAWC,YAAY;AAAA,IAC3BC,aAAa;AAAA,MACXC,QAAQ;AAAA,QACN,GAAGzB,YAAYwB,YAAYC;AAAAA,MAC7B;AAAA,IACF;AAAA,EAAA,CACD;AAEKC,QAAAA,oBAAoBL,QACxB,OAAO;AAAA,IAAEM,OAAOpC;AAAAA,EAAAA,IAChB,CAACA,YAAY,CACf;AAEA,6BACGqC,eAAiB,EAAA,OAAON,UACvB,UAAA,oBAAC,eAAe,UAAf,EAAwB,OACvB,UAAA,oBAAC,eAAe,UAAf,EAAwB,OAAOI,mBAC7BvC,SACH,CAAA,GACF,EACF,CAAA;AAEJ;"}