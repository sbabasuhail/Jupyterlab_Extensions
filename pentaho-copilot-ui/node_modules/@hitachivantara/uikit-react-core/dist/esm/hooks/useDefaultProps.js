import { useMemo } from "react";
import { useCss } from "./useCss.js";
import { useTheme } from "./useTheme.js";
function filterProps(props) {
  return Object.keys(props).reduce((acc, key) => {
    if (props[key] !== void 0) {
      acc[key] = props[key];
    }
    return acc;
  }, {});
}
function useDefaultProps(componentName, props) {
  var _a;
  const {
    activeTheme
  } = useTheme();
  const {
    css,
    cx
  } = useCss();
  const themeDefaultProps = (_a = activeTheme == null ? void 0 : activeTheme.components) == null ? void 0 : _a[componentName];
  const classes = useMemo(() => {
    const themeClasses = (themeDefaultProps == null ? void 0 : themeDefaultProps.classes) || {};
    const propsClasses = (props == null ? void 0 : props.classes) || {};
    const classKeys = [...Object.keys(themeClasses), ...Object.keys(propsClasses)];
    return classKeys.reduce((acc, key) => {
      acc[key] = cx(themeClasses[key] && css(themeClasses[key]), propsClasses[key]);
      return acc;
    }, {});
  }, [css, cx, props == null ? void 0 : props.classes, themeDefaultProps == null ? void 0 : themeDefaultProps.classes]);
  return {
    ...themeDefaultProps,
    ...filterProps(props),
    classes
  };
}
export {
  filterProps,
  useDefaultProps
};
//# sourceMappingURL=useDefaultProps.js.map
