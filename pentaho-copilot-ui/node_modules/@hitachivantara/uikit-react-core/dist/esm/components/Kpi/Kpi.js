import { jsxs, jsx } from "@emotion/react/jsx-runtime";
import { useDefaultProps } from "../../hooks/useDefaultProps.js";
import { useLabels } from "../../hooks/useLabels.js";
import { useClasses } from "./Kpi.styles.js";
import { staticClasses } from "./Kpi.styles.js";
import { HvTypography } from "../Typography/Typography.js";
const DEFAULT_LABELS = {
  title: "",
  indicator: void 0,
  unit: void 0,
  comparisonIndicatorInfo: void 0
};
const HvKpi = (props) => {
  const {
    trendIndicator = null,
    visualIndicator = null,
    visualComparison = null,
    indicatorUnitTextVariant = "title2",
    indicatorTextVariant = "title1",
    labels,
    classes: classesProp,
    className,
    ...others
  } = useDefaultProps("HvKpi", props);
  const {
    classes,
    cx
  } = useClasses(classesProp);
  const mergedLabels = useLabels(DEFAULT_LABELS, labels);
  const InternalVisualComparison = typeof visualComparison === "string" ? HvTypography : "div";
  return /* @__PURE__ */ jsxs("div", { className: cx(classes.root, className), ...others, children: [
    /* @__PURE__ */ jsx("div", { children: /* @__PURE__ */ jsx(HvTypography, { variant: "label", children: mergedLabels == null ? void 0 : mergedLabels.title }) }),
    /* @__PURE__ */ jsxs("div", { className: classes.indicatorsContainer, children: [
      visualIndicator && /* @__PURE__ */ jsx("div", { className: cx(classes.visualIndicatorContainer, classes.spacingToTheRight), children: visualIndicator }),
      (mergedLabels == null ? void 0 : mergedLabels.indicator) && /* @__PURE__ */ jsx(HvTypography, { className: cx(classes.spacingToTheRight, classes.indicatorText), variant: indicatorTextVariant, children: mergedLabels.indicator }),
      (mergedLabels == null ? void 0 : mergedLabels.unit) && /* @__PURE__ */ jsx(HvTypography, { className: classes.indicatorUnit, variant: indicatorUnitTextVariant, children: mergedLabels.unit })
    ] }),
    visualComparison && /* @__PURE__ */ jsxs("div", { className: classes.comparisonComposition, children: [
      trendIndicator && /* @__PURE__ */ jsx("div", { className: cx(classes.trendLine, classes.spacingToTheRight), children: trendIndicator }),
      /* @__PURE__ */ jsxs("div", { children: [
        /* @__PURE__ */ jsx("div", { className: classes.comparisonContainer, children: /* @__PURE__ */ jsx(InternalVisualComparison, { className: cx(classes.comparisons, classes.spacingToTheRight), variant: "label", children: visualComparison }) }),
        /* @__PURE__ */ jsx("div", { className: classes.comparisonContainer, children: /* @__PURE__ */ jsx(HvTypography, { className: classes.comparisons, variant: "caption2", children: mergedLabels == null ? void 0 : mergedLabels.comparisonIndicatorInfo }) })
      ] })
    ] })
  ] });
};
export {
  HvKpi,
  staticClasses as kpiClasses
};
//# sourceMappingURL=Kpi.js.map
