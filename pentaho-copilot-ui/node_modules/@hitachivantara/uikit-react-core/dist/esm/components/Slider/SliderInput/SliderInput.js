import { jsx, jsxs } from "@emotion/react/jsx-runtime";
import { useState, useEffect } from "react";
import { Remove } from "@hitachivantara/uikit-react-icons";
import { setId } from "../../../utils/setId.js";
import { knobsValuesToString, stringValuesToKnobs } from "../utils.js";
import { useClasses } from "./SliderInput.styles.js";
import { staticClasses } from "./SliderInput.styles.js";
import { HvInput } from "../../Input/Input.js";
const HvSliderInput = ({
  classes: classesProp,
  className,
  id,
  label,
  status,
  values: valuesProp = [],
  inputProps = [],
  readOnly = false,
  disabled = false,
  markDigits = 0,
  onChange,
  ...others
}) => {
  const {
    classes,
    cx
  } = useClasses(classesProp);
  const [inputValues, setInputValues] = useState(knobsValuesToString(valuesProp, markDigits));
  const handleChange = (index) => {
    if (disabled)
      return;
    onChange == null ? void 0 : onChange(stringValuesToKnobs(inputValues), index);
  };
  useEffect(() => {
    setInputValues(knobsValuesToString(valuesProp, markDigits));
  }, [markDigits, valuesProp]);
  return /* @__PURE__ */ jsx("div", { className: cx(classes.inputRoot, className), ...others, children: inputValues.map((value, index) => /* @__PURE__ */ jsxs("div", { className: classes.inputContainer, children: [
    index !== 0 && /* @__PURE__ */ jsx(Remove, { color: disabled ? ["atmo4"] : void 0 }),
    /* @__PURE__ */ jsx(HvInput, { id: setId(id, index), "aria-label": `${label}-${index}`, className: classes.input, disabled, type: "number", value: Number.isNaN(value) || value == null ? "" : value.toString(), onEnter: () => handleChange(index), onBlur: () => handleChange(index), onChange: (_, inputValue) => {
      const newValues = [...inputValues];
      newValues[index] = inputValue;
      setInputValues(newValues);
    }, status: (status == null ? void 0 : status[index]) || "standBy", readOnly, disableClear: true, ...inputProps[index] })
  ] }, setId(id, index))) });
};
export {
  HvSliderInput,
  staticClasses as sliderInputClasses
};
//# sourceMappingURL=SliderInput.js.map
