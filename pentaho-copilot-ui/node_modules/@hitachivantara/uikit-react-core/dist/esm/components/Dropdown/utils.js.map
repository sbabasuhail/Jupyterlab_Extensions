{"version":3,"file":"utils.js","sources":["../../../../src/components/Dropdown/utils.tsx"],"sourcesContent":["import { HvListValue } from \"@core/components/List\";\n\nimport { HvDropdownLabelsProps } from \"./types\";\n\n/** Filter selected elements. */\nconst getSelected = (list: HvListValue[] = []) =>\n  list.filter((elem) => elem.selected);\n\n/** Checks if any element of the list is selected. */\nconst hasSelected = (list: HvListValue[]) => getSelected(list).length > 0;\n\n/** Gets the selection label according to selection. */\nconst getSelectionLabel = (\n  labels: HvDropdownLabelsProps | undefined,\n  placeholder: string,\n  multiSelect: boolean,\n  list: HvListValue[] = []\n) => {\n  const { select } = labels || {};\n  const selected = getSelected(list);\n\n  if (select) return { selected: select };\n\n  if (multiSelect) {\n    return {\n      selected: selected.length,\n      total: list.length,\n    };\n  }\n  return { selected: selected.length > 0 ? selected[0].label : placeholder };\n};\n\nexport { getSelectionLabel, getSelected, hasSelected };\n"],"names":["getSelected","list","filter","elem","selected","getSelectionLabel","labels","placeholder","multiSelect","select","length","total","label"],"mappings":"AAKMA,MAAAA,cAAcA,CAACC,OAAsB,OACzCA,KAAKC,OAAQC,CAASA,SAAAA,KAAKC,QAAQ;AAMrC,MAAMC,oBAAoBA,CACxBC,QACAC,aACAC,aACAP,OAAsB,CAAA,MACnB;AACG,QAAA;AAAA,IAAEQ;AAAAA,EAAAA,IAAWH,UAAU,CAAA;AACvBF,QAAAA,WAAWJ,YAAYC,IAAI;AAE7BQ,MAAAA;AAAe,WAAA;AAAA,MAAEL,UAAUK;AAAAA,IAAAA;AAE/B,MAAID,aAAa;AACR,WAAA;AAAA,MACLJ,UAAUA,SAASM;AAAAA,MACnBC,OAAOV,KAAKS;AAAAA,IAAAA;AAAAA,EAEhB;AACO,SAAA;AAAA,IAAEN,UAAUA,SAASM,SAAS,IAAIN,SAAS,CAAC,EAAEQ,QAAQL;AAAAA,EAAAA;AAC/D;"}