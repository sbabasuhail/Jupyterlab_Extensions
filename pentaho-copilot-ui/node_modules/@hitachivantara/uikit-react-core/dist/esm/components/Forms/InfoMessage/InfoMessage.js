import { jsx } from "@emotion/react/jsx-runtime";
import { useContext } from "react";
import { useDefaultProps } from "../../../hooks/useDefaultProps.js";
import { setId } from "../../../utils/setId.js";
import { useClasses } from "./InfoMessage.styles.js";
import { staticClasses } from "./InfoMessage.styles.js";
import { HvFormElementContext } from "../FormElement/context/FormElementContext.js";
import { HvTypography } from "../../Typography/Typography.js";
const HvInfoMessage = (props) => {
  const {
    id,
    classes: classesProp,
    className,
    children,
    disabled,
    disableGutter = false,
    ...others
  } = useDefaultProps("HvInfoMessage", props);
  const {
    classes,
    cx
  } = useClasses(classesProp);
  const {
    elementId,
    elementDisabled
  } = useContext(HvFormElementContext);
  const localDisabled = disabled || elementDisabled;
  const localId = id ?? setId(elementId, "description");
  return /* @__PURE__ */ jsx(HvTypography, { id: localId, className: cx(classes.root, {
    [classes.infoDisabled]: !!localDisabled,
    [classes.gutter]: !disableGutter
  }, className), variant: "body", component: "label", ...others, children });
};
export {
  HvInfoMessage,
  staticClasses as infoMessageClasses
};
//# sourceMappingURL=InfoMessage.js.map
