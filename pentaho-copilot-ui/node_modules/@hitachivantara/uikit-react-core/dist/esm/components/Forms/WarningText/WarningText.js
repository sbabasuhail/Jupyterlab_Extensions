import { jsx, jsxs } from "@emotion/react/jsx-runtime";
import { useContext } from "react";
import isNil from "lodash/isNil";
import { Fail } from "@hitachivantara/uikit-react-icons";
import { useDefaultProps } from "../../../hooks/useDefaultProps.js";
import { setId } from "../../../utils/setId.js";
import { useClasses } from "./WarningText.styles.js";
import { staticClasses } from "./WarningText.styles.js";
import { HvFormElementContext } from "../FormElement/context/FormElementContext.js";
import { HvTypography } from "../../Typography/Typography.js";
const HvWarningText = (props) => {
  const {
    children,
    adornment,
    isVisible,
    classes: classesProp,
    className,
    id,
    disabled,
    disableGutter = false,
    disableBorder = false,
    disableAdornment = false,
    hideText = false,
    ...others
  } = useDefaultProps("HvWarningText", props);
  const {
    classes,
    cx
  } = useClasses(classesProp);
  const {
    elementId,
    elementStatus,
    elementDisabled
  } = useContext(HvFormElementContext);
  const localDisabled = disabled || elementDisabled;
  const localVisible = !isNil(isVisible) ? isVisible : elementStatus === "invalid";
  const localId = id ?? setId(elementId, "error");
  const showWarning = localVisible && !localDisabled;
  const content = showWarning ? children : "";
  const localAdornment = adornment || /* @__PURE__ */ jsx(Fail, { className: classes.defaultIcon, color: "negative" });
  return /* @__PURE__ */ jsxs("div", { className: cx(classes.root, {
    [classes.show]: showWarning,
    [classes.topBorder]: !disableBorder
  }, className), children: [
    !disableAdornment && localAdornment,
    /* @__PURE__ */ jsx(HvTypography, { id: localId, className: cx(classes.warningText, {
      [classes.topGutter]: !disableGutter,
      [classes.hideText]: hideText
    }), role: "status", "aria-live": "polite", "aria-relevant": "additions text", ...others, children: showWarning && content })
  ] });
};
export {
  HvWarningText,
  staticClasses as warningTextClasses
};
//# sourceMappingURL=WarningText.js.map
