import { jsxs, jsx, Fragment } from "@emotion/react/jsx-runtime";
import { useDefaultProps } from "../../hooks/useDefaultProps.js";
import { Backwards, Forwards } from "@hitachivantara/uikit-react-icons";
import { useClasses } from "./Carousel.styles.js";
import { HvButton } from "../Button/Button.js";
const HvCarouselControls = (props) => {
  const {
    classes: classesProp,
    className,
    showDots,
    page,
    pages,
    canPrevious,
    canNext,
    actions,
    onPreviousClick,
    onNextClick
  } = useDefaultProps("HvCarouselControls", props);
  const {
    classes,
    cx
  } = useClasses(classesProp, false);
  const selectedIndex = page || 0;
  const numSlides = pages;
  return /* @__PURE__ */ jsxs("div", { className: cx(classes.controls, className), children: [
    showDots ? /* @__PURE__ */ jsx("div", { className: classes.dots, children: Array.from(Array(numSlides)).map((el, index) => /* @__PURE__ */ jsx("span", { className: cx(classes.dot, {
      [classes.dotSelected]: index === selectedIndex
    }) }, `circle-${index}`)) }) : /* @__PURE__ */ jsxs(Fragment, { children: [
      /* @__PURE__ */ jsx(HvButton, { icon: true, disabled: !canPrevious, "aria-label": "Backwards", onClick: onPreviousClick, children: /* @__PURE__ */ jsx(Backwards, { iconSize: "XS" }) }),
      /* @__PURE__ */ jsx("div", { className: classes.pageCounter, children: `${selectedIndex + 1} / ${numSlides}` }),
      /* @__PURE__ */ jsx(HvButton, { icon: true, disabled: !canNext, "aria-label": "Forwards", onClick: onNextClick, children: /* @__PURE__ */ jsx(Forwards, { iconSize: "XS" }) })
    ] }),
    actions
  ] });
};
export {
  HvCarouselControls
};
//# sourceMappingURL=CarouselControls.js.map
