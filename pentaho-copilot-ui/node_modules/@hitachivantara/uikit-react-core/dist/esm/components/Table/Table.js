import { jsx } from "@emotion/react/jsx-runtime";
import { forwardRef, useRef, useMemo } from "react";
import { useDefaultProps } from "../../hooks/useDefaultProps.js";
import TableContext from "./TableContext.js";
import { useClasses } from "./Table.styles.js";
import { staticClasses } from "./Table.styles.js";
const defaultComponent = "table";
const computeTablePartComponents = (rootComponent) => {
  if (rootComponent === "table") {
    return {
      Table: "table",
      THead: "thead",
      TBody: "tbody",
      Tr: "tr",
      Th: "th",
      Td: "td"
    };
  }
  return {
    Table: rootComponent,
    THead: rootComponent,
    TBody: rootComponent,
    Tr: rootComponent,
    Th: rootComponent,
    Td: rootComponent
  };
};
const HvTable = forwardRef((props, ref) => {
  const {
    classes: classesProp,
    className,
    component = defaultComponent,
    stickyHeader = false,
    stickyColumns = false,
    variant = "default",
    ...others
  } = useDefaultProps("HvTable", props);
  const {
    classes,
    cx
  } = useClasses(classesProp);
  const containerRef = useRef(ref);
  const components = useMemo(() => computeTablePartComponents(component), [component]);
  const tableContext = useMemo(() => ({
    components,
    variant,
    containerRef
  }), [components, variant, containerRef]);
  const Table = useMemo(() => components.Table, [components]);
  return /* @__PURE__ */ jsx(TableContext.Provider, { value: tableContext, children: /* @__PURE__ */ jsx(Table, { ref, role: component === defaultComponent ? null : "table", className: cx(classes.root, {
    [classes.stickyHeader]: stickyHeader,
    [classes.stickyColumns]: stickyColumns,
    [classes.listRow]: variant === "listrow"
  }, className), ...others }) });
});
export {
  HvTable,
  staticClasses as tableClasses
};
//# sourceMappingURL=Table.js.map
