import { jsx } from "@emotion/react/jsx-runtime";
import MuiLinearProgress from "@mui/material/LinearProgress";
import { useClasses } from "./ProgressColumnCell.styles.js";
const normalizeProgressBar = (value, max) => {
  return max > 0 ? Math.floor(value * 100 / max) : 0;
};
const HvProgressColumnCell = ({
  partial,
  total,
  color = "primary",
  "aria-labelledby": ariaLabelledBy
}) => {
  const {
    classes
  } = useClasses();
  const percentage = normalizeProgressBar(partial, total);
  return /* @__PURE__ */ jsx("div", { className: classes.root, children: /* @__PURE__ */ jsx("div", { className: classes.linearProgressContainer, children: /* @__PURE__ */ jsx(MuiLinearProgress, { className: classes.linearProgress, classes: {
    root: classes.linearProgressRoot,
    colorPrimary: classes.linearProgressColorPrimary,
    barColorPrimary: classes.linearProgressBarColorPrimary,
    barColorSecondary: classes.linearProgressBarColorSecondary
  }, color, variant: "determinate", value: percentage, "aria-labelledby": ariaLabelledBy }) }) });
};
export {
  HvProgressColumnCell,
  normalizeProgressBar
};
//# sourceMappingURL=ProgressColumnCell.js.map
