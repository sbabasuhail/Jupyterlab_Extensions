{"version":3,"file":"useResizeColumns.js","sources":["../../../../../src/components/Table/hooks/useResizeColumns.ts"],"sourcesContent":["import { ensurePluginOrder, Hooks } from \"react-table\";\n\n// #region ##### TYPES #####\n\n// getHeaderProps:\nexport interface UseHvResizeColumnProps {\n  resizable?: boolean;\n  resizing?: boolean;\n}\n\n// getCellProps:\nexport interface UseHvResizeTableCellProps {\n  resizable?: boolean;\n  resizing?: boolean;\n}\n\nexport type UseHvResizeColumnsProps = (<\n  D extends object = Record<string, unknown>\n>(\n  hooks: Hooks<D>\n) => void) & { pluginName: string };\n\n// #endregion ##### TYPES #####\n\n// props target: <table><thead><tr><th>\nconst getHeaderPropsHook = (props, { column }) => {\n  const resizerProps: UseHvResizeColumnProps = column.getResizerProps?.() || {};\n\n  const nextProps = {\n    resizable: column.canResize,\n    resizing: column.isResizing,\n    resizerProps,\n  };\n\n  return [props, nextProps];\n};\n\n// props target: <table><tbody><tr><td>\nconst getCellPropsHook = (props, { cell }) => {\n  const nextProps: UseHvResizeTableCellProps = {\n    resizable: cell.column.canResize,\n    resizing: cell.column.isResizing,\n  };\n\n  return [props, nextProps];\n};\n\nconst useInstanceHook = (instance) => {\n  ensurePluginOrder(\n    instance.plugins,\n    [\"useResizeColumns\"],\n    \"useHvResizeColumns\"\n  );\n};\n\nconst useResizeColumns: UseHvResizeColumnsProps = (hooks) => {\n  // props target: <table><thead><tr><th>\n  hooks.getHeaderProps.push(getHeaderPropsHook);\n  // props target: <table><tbody><tr><td>\n  hooks.getCellProps.push(getCellPropsHook);\n\n  hooks.useInstance.push(useInstanceHook);\n};\n\nuseResizeColumns.pluginName = \"useHvResizeColumns\";\n\nexport default useResizeColumns;\n"],"names":["getHeaderPropsHook","props","column","resizerProps","getResizerProps","nextProps","resizable","canResize","resizing","isResizing","getCellPropsHook","cell","useInstanceHook","instance","ensurePluginOrder","plugins","useResizeColumns","hooks","getHeaderProps","push","getCellProps","useInstance","pluginName"],"mappings":";AAyBA,MAAMA,qBAAqBA,CAACC,OAAO;AAAA,EAAEC;AAAO,MAAM;;AAChD,QAAMC,iBAAuCD,YAAOE,oBAAPF,oCAA8B,CAAA;AAE3E,QAAMG,YAAY;AAAA,IAChBC,WAAWJ,OAAOK;AAAAA,IAClBC,UAAUN,OAAOO;AAAAA,IACjBN;AAAAA,EAAAA;AAGK,SAAA,CAACF,OAAOI,SAAS;AAC1B;AAGA,MAAMK,mBAAmBA,CAACT,OAAO;AAAA,EAAEU;AAAK,MAAM;AAC5C,QAAMN,YAAuC;AAAA,IAC3CC,WAAWK,KAAKT,OAAOK;AAAAA,IACvBC,UAAUG,KAAKT,OAAOO;AAAAA,EAAAA;AAGjB,SAAA,CAACR,OAAOI,SAAS;AAC1B;AAEA,MAAMO,kBAAmBC,CAAa,aAAA;AACpCC,oBACED,SAASE,SACT,CAAC,kBAAkB,GACnB,oBACF;AACF;AAEA,MAAMC,mBAA6CC,CAAU,UAAA;AAErDC,QAAAA,eAAeC,KAAKnB,kBAAkB;AAEtCoB,QAAAA,aAAaD,KAAKT,gBAAgB;AAElCW,QAAAA,YAAYF,KAAKP,eAAe;AACxC;AAEAI,iBAAiBM,aAAa;AAE9B,MAAA,qBAAeN;"}