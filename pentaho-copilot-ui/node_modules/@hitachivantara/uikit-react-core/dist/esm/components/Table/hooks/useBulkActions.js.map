{"version":3,"file":"useBulkActions.js","sources":["../../../../../src/components/Table/hooks/useBulkActions.ts"],"sourcesContent":["import { useCallback } from \"react\";\nimport {\n  Hooks,\n  PropGetter,\n  TableCommonProps,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n} from \"react-table\";\n\n// #region ##### TYPES #####\n\nexport interface HvTAbleBulkActionsProps extends TableCommonProps {\n  numTotal: number;\n  numSelected: number;\n  showSelectAllPages: boolean;\n  onSelectAll: () => void;\n  onSelectAllPages: () => void;\n  labels?: Record<string, string>;\n}\n\nexport type HvBulkActionsPropGetter<D extends object> = PropGetter<\n  D,\n  HvTAbleBulkActionsProps\n>;\n\nexport interface UseHvBulkActionsHooks<D extends object> {\n  getHvBulkActionsProps: Array<HvBulkActionsPropGetter<D>>;\n}\n\nexport type UseHvBulkActionsTableOptions = {\n  aditivePageBulkSelection?: boolean;\n  subtractivePageBulkDeselection?: boolean;\n  showSelectAllPages?: boolean;\n};\n\nexport interface UseHvBulkActionsTableInstanceProps<D extends object> {\n  getHvBulkActionsProps: (\n    propGetter?: HvBulkActionsPropGetter<D>\n  ) => HvTAbleBulkActionsProps;\n  invertedToggleAllRowsSelected: () => void;\n}\n\nexport type UseBulkActionsProps = (<D extends object = Record<string, unknown>>(\n  hooks: Hooks<D>\n) => void) & { pluginName: string };\n\n// #endregion ##### TYPES #####\n\nconst useInstanceHook = (instance) => {\n  const { plugins, page, toggleAllPageRowsSelected, toggleAllRowsSelected } =\n    instance;\n\n  ensurePluginOrder(plugins, [\"useHvRowSelection\"], \"useHvBulkActions\");\n\n  const getInstance = useGetLatest(instance);\n\n  const getHvBulkActionsProps = makePropGetter(\n    instance.getHooks().getHvBulkActionsProps,\n    {\n      instance: getInstance(),\n    }\n  );\n\n  const isPaginated = !!page;\n\n  const invertedToggleAllRowsSelected = useCallback(() => {\n    if (!isPaginated) return toggleAllRowsSelected();\n\n    const {\n      aditivePageBulkSelection,\n      subtractivePageBulkDeselection,\n      isNoRowsSelected,\n      isNoPageRowsSelected,\n      isAllSelectablePageRowsSelected,\n      isAllSelectablePageRowsUnselected,\n    } = getInstance();\n\n    if (aditivePageBulkSelection && subtractivePageBulkDeselection) {\n      return toggleAllPageRowsSelected(!isAllSelectablePageRowsSelected);\n    }\n\n    if (aditivePageBulkSelection && !subtractivePageBulkDeselection) {\n      if (!isAllSelectablePageRowsSelected) {\n        return toggleAllPageRowsSelected();\n      }\n\n      return toggleAllRowsSelected(false);\n    }\n\n    if (!aditivePageBulkSelection && !subtractivePageBulkDeselection) {\n      if (isNoRowsSelected) {\n        return toggleAllPageRowsSelected();\n      }\n\n      return toggleAllRowsSelected(false);\n    }\n\n    if (!aditivePageBulkSelection && subtractivePageBulkDeselection) {\n      if (isNoRowsSelected) {\n        return toggleAllPageRowsSelected();\n      }\n      if (!isAllSelectablePageRowsUnselected) {\n        return toggleAllPageRowsSelected(false);\n      }\n      if (!isNoPageRowsSelected) {\n        return toggleAllPageRowsSelected(false);\n      }\n\n      return toggleAllRowsSelected(false);\n    }\n\n    return toggleAllPageRowsSelected();\n  }, [\n    getInstance,\n    isPaginated,\n    toggleAllPageRowsSelected,\n    toggleAllRowsSelected,\n  ]);\n\n  const aditive = instance.aditivePageBulkSelection === true;\n  const subtractive = instance.subtractivePageBulkDeselection === true;\n\n  Object.assign(instance, {\n    getHvBulkActionsProps,\n    invertedToggleAllRowsSelected,\n    aditivePageBulkSelection: aditive,\n    subtractivePageBulkDeselection: subtractive,\n  });\n};\n\nexport const defaultgetHvBulkActionsProps = (props, { instance }) => {\n  const {\n    rows,\n    initialRows,\n    selectedFlatRows,\n    state: { selectedRowIds = {} } = {},\n    page,\n    toggleAllRowsSelected,\n    invertedToggleAllRowsSelected,\n    showSelectAllPages = true,\n    applyToggleAllRowsSelectedToPrefilteredRows,\n  } = instance;\n\n  const isPaginated = !!page;\n\n  const nextProps: HvTAbleBulkActionsProps = {\n    numTotal:\n      applyToggleAllRowsSelectedToPrefilteredRows === true\n        ? initialRows.length\n        : rows.length,\n    numSelected:\n      applyToggleAllRowsSelectedToPrefilteredRows === true\n        ? Object.keys(selectedRowIds).length\n        : selectedFlatRows.length,\n    showSelectAllPages: showSelectAllPages && isPaginated,\n    onSelectAll: invertedToggleAllRowsSelected,\n    onSelectAllPages: toggleAllRowsSelected,\n  };\n\n  return [props, nextProps];\n};\n\nconst useBulkActions: UseBulkActionsProps = (hooks) => {\n  hooks.getHvBulkActionsProps = [defaultgetHvBulkActionsProps];\n\n  hooks.useInstance.push(useInstanceHook);\n};\n\nuseBulkActions.pluginName = \"useHvBulkActions\";\n\nexport default useBulkActions;\n"],"names":["useInstanceHook","instance","plugins","page","toggleAllPageRowsSelected","toggleAllRowsSelected","ensurePluginOrder","getInstance","useGetLatest","getHvBulkActionsProps","makePropGetter","getHooks","isPaginated","invertedToggleAllRowsSelected","useCallback","aditivePageBulkSelection","subtractivePageBulkDeselection","isNoRowsSelected","isNoPageRowsSelected","isAllSelectablePageRowsSelected","isAllSelectablePageRowsUnselected","aditive","subtractive","Object","assign","defaultgetHvBulkActionsProps","props","rows","initialRows","selectedFlatRows","state","selectedRowIds","showSelectAllPages","applyToggleAllRowsSelectedToPrefilteredRows","nextProps","numTotal","length","numSelected","keys","onSelectAll","onSelectAllPages","useBulkActions","hooks","useInstance","push","pluginName"],"mappings":";;AAiDA,MAAMA,kBAAmBC,CAAa,aAAA;AAC9B,QAAA;AAAA,IAAEC;AAAAA,IAASC;AAAAA,IAAMC;AAAAA,IAA2BC;AAAAA,EAChDJ,IAAAA;AAEFK,oBAAkBJ,SAAS,CAAC,mBAAmB,GAAG,kBAAkB;AAE9DK,QAAAA,cAAcC,aAAaP,QAAQ;AAEzC,QAAMQ,wBAAwBC,eAC5BT,SAASU,SAAAA,EAAWF,uBACpB;AAAA,IACER,UAAUM,YAAY;AAAA,EAAA,CAE1B;AAEMK,QAAAA,cAAc,CAAC,CAACT;AAEhBU,QAAAA,gCAAgCC,YAAY,MAAM;AACtD,QAAI,CAACF;AAAa,aAAOP,sBAAsB;AAEzC,UAAA;AAAA,MACJU;AAAAA,MACAC;AAAAA,MACAC;AAAAA,MACAC;AAAAA,MACAC;AAAAA,MACAC;AAAAA,QACEb,YAAY;AAEhB,QAAIQ,4BAA4BC,gCAAgC;AACvDZ,aAAAA,0BAA0B,CAACe,+BAA+B;AAAA,IACnE;AAEIJ,QAAAA,4BAA4B,CAACC,gCAAgC;AAC/D,UAAI,CAACG,iCAAiC;AACpC,eAAOf,0BAA0B;AAAA,MACnC;AAEA,aAAOC,sBAAsB,KAAK;AAAA,IACpC;AAEI,QAAA,CAACU,4BAA4B,CAACC,gCAAgC;AAChE,UAAIC,kBAAkB;AACpB,eAAOb,0BAA0B;AAAA,MACnC;AAEA,aAAOC,sBAAsB,KAAK;AAAA,IACpC;AAEI,QAAA,CAACU,4BAA4BC,gCAAgC;AAC/D,UAAIC,kBAAkB;AACpB,eAAOb,0BAA0B;AAAA,MACnC;AACA,UAAI,CAACgB,mCAAmC;AACtC,eAAOhB,0BAA0B,KAAK;AAAA,MACxC;AACA,UAAI,CAACc,sBAAsB;AACzB,eAAOd,0BAA0B,KAAK;AAAA,MACxC;AAEA,aAAOC,sBAAsB,KAAK;AAAA,IACpC;AAEA,WAAOD,0BAA0B;AAAA,KAChC,CACDG,aACAK,aACAR,2BACAC,qBAAqB,CACtB;AAEKgB,QAAAA,UAAUpB,SAASc,6BAA6B;AAChDO,QAAAA,cAAcrB,SAASe,mCAAmC;AAEhEO,SAAOC,OAAOvB,UAAU;AAAA,IACtBQ;AAAAA,IACAI;AAAAA,IACAE,0BAA0BM;AAAAA,IAC1BL,gCAAgCM;AAAAA,EAAAA,CACjC;AACH;AAEaG,MAAAA,+BAA+BA,CAACC,OAAO;AAAA,EAAEzB;AAAS,MAAM;AAC7D,QAAA;AAAA,IACJ0B;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC,OAAO;AAAA,MAAEC,iBAAiB,CAAC;AAAA,IAAA,IAAM,CAAC;AAAA,IAClC5B;AAAAA,IACAE;AAAAA,IACAQ;AAAAA,IACAmB,qBAAqB;AAAA,IACrBC;AAAAA,EACEhC,IAAAA;AAEEW,QAAAA,cAAc,CAAC,CAACT;AAEtB,QAAM+B,YAAqC;AAAA,IACzCC,UACEF,gDAAgD,OAC5CL,YAAYQ,SACZT,KAAKS;AAAAA,IACXC,aACEJ,gDAAgD,OAC5CV,OAAOe,KAAKP,cAAc,EAAEK,SAC5BP,iBAAiBO;AAAAA,IACvBJ,oBAAoBA,sBAAsBpB;AAAAA,IAC1C2B,aAAa1B;AAAAA,IACb2B,kBAAkBnC;AAAAA,EAAAA;AAGb,SAAA,CAACqB,OAAOQ,SAAS;AAC1B;AAEA,MAAMO,iBAAuCC,CAAU,UAAA;AAC/CjC,QAAAA,wBAAwB,CAACgB,4BAA4B;AAErDkB,QAAAA,YAAYC,KAAK5C,eAAe;AACxC;AAEAyC,eAAeI,aAAa;AAE5B,MAAA,mBAAeJ;"}