{"version":3,"file":"TableContainer.js","sources":["../../../../../src/components/Table/TableContainer/TableContainer.tsx"],"sourcesContent":["import { forwardRef } from \"react\";\n\nimport { HvBaseProps } from \"@core/types/generic\";\nimport { ExtractNames } from \"@core/utils/classes\";\n\nimport { staticClasses, useClasses } from \"./TableContainer.styles\";\n\nexport { staticClasses as tableContainerClasses };\n\nexport type HvTableContainerClasses = ExtractNames<typeof useClasses>;\n\nexport interface HvTableContainerProps\n  extends HvBaseProps<HTMLDivElement, \"children\"> {\n  /**\n   * Content to be rendered\n   */\n  children: React.ReactNode;\n  /**\n   * The component used for the root node. Either a string to use a HTML element or a component.\n   * Defaults to tbody.\n   */\n  component?: React.ElementType;\n  /** A Jss Object used to override or extend the styles applied to the component. */\n  classes?: HvTableContainerClasses;\n}\n\n/**\n * HvTableContainer is a container for the HvTable\n */\nexport const HvTableContainer = forwardRef<HTMLElement, HvTableContainerProps>(\n  ({ classes: classesProp, className, component, ...others }, externalRef) => {\n    const { classes, cx } = useClasses(classesProp);\n\n    const Component = component || \"div\";\n\n    return (\n      <Component\n        ref={externalRef}\n        className={cx(classes.root, className)}\n        {...others}\n      />\n    );\n  }\n);\n"],"names":["HvTableContainer","forwardRef","classes","classesProp","className","component","others","externalRef","cx","useClasses","Component","root"],"mappings":";;;;AA6BaA,MAAAA,mBAAmBC,WAC9B,CAAC;AAAA,EAAEC,SAASC;AAAAA,EAAaC;AAAAA,EAAWC;AAAAA,EAAW,GAAGC;AAAO,GAAGC,gBAAgB;AACpE,QAAA;AAAA,IAAEL;AAAAA,IAASM;AAAAA,EAAAA,IAAOC,WAAWN,WAAW;AAE9C,QAAMO,YAAYL,aAAa;AAG7B,SAAA,oBAAC,WACC,EAAA,KAAKE,aACL,WAAWC,GAAGN,QAAQS,MAAMP,SAAS,GACrC,GAAIE,OACJ,CAAA;AAEN,CACF;"}