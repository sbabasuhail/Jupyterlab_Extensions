import { jsx } from "@emotion/react/jsx-runtime";
import { createContext, useReducer, useMemo } from "react";
const reducer = (state, action) => {
  switch (action.type) {
    case "setItemFocused":
      return {
        itemFocused: action.itemFocused
      };
    default:
      return state;
  }
};
const initialState = {
  itemFocused: void 0,
  dispatch: void 0
};
const FocusContext = createContext(initialState);
const FocusProvider = (props) => {
  const [state, dispatch] = useReducer(reducer, initialState);
  const contextValue = useMemo(() => ({
    ...state,
    dispatch
  }), [state, dispatch]);
  const {
    children
  } = props;
  return /* @__PURE__ */ jsx(FocusContext.Provider, { value: contextValue, children });
};
export {
  FocusContext,
  FocusProvider
};
//# sourceMappingURL=FocusContext.js.map
