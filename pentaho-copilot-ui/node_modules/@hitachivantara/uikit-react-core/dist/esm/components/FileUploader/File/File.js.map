{"version":3,"file":"File.js","sources":["../../../../../src/components/FileUploader/File/File.tsx"],"sourcesContent":["import { Close, Fail, Success } from \"@hitachivantara/uikit-react-icons\";\n\nimport { setId } from \"@core/utils/setId\";\nimport { HvButton } from \"@core/components/Button\";\nimport { HvTypography } from \"@core/components/Typography\";\nimport { ExtractNames } from \"@core/utils/classes\";\nimport { HvProgressBar } from \"@core/components/ProgressBar\";\nimport { cx } from \"@emotion/css\";\nimport { convertUnits } from \"../utils\";\nimport { staticClasses, useClasses } from \"./File.styles\";\n\nexport { staticClasses as fileClasses };\n\nexport type HvFileClasses = ExtractNames<typeof useClasses>;\n\nexport interface HvFileData extends Omit<File, \"name\" | \"size\"> {\n  /**\n   * The file id.\n   */\n  id?: string;\n  /**\n   * The file name.\n   */\n  name?: string;\n  /**\n   * The upload status.\n   */\n  status?: \"progress\" | \"success\" | \"fail\";\n  /**\n   * The file size in bytes.\n   */\n  size?: number;\n  /**\n   * Upload progress in bytes.\n   */\n  progress?: number;\n  /**\n   * Optional node representing a preview of the uploaded file.\n   */\n  preview?: React.ReactNode;\n  /**\n   * Error message when the upload failed.\n   */\n  errorMessage?: string;\n}\n\nexport type HvFilesAddedEvent = (files: HvFileData[]) => void;\n\nexport type HvFileRemovedEvent = (file: HvFileData) => void;\n\nexport type HvFileProps = {\n  /**\n   * Id to be applied to the root node.\n   */\n  id?: string;\n  /**\n   * File information to be displayed.\n   */\n  data: HvFileData;\n  /**\n   * Callback fired when file is removed from list.\n   */\n  onFileRemoved?: HvFileRemovedEvent;\n  /**\n   * Value of aria-label to apply to remove file button in file list.\n   * */\n  removeFileButtonLabel?: string;\n  /**\n   * A Jss Object used to override or extend the styles applied to the component.\n   */\n  classes?: HvFileClasses;\n};\n\nconst getStatusIcon = (\n  classes?: HvFileClasses,\n  status?: HvFileData[\"status\"]\n) => {\n  switch (status) {\n    case \"success\":\n      return <Success className={classes?.icon} color=\"positive\" />;\n    case \"fail\":\n      return <Fail className={classes?.icon} color=\"negative\" />;\n    default:\n      return <div className={classes?.icon} />;\n  }\n};\n\nconst getProgressText = (data: HvFileData, classes?: HvFileClasses) => {\n  const hasFailed = data.status === \"fail\";\n  const inProgress = data.status === \"progress\";\n\n  return (\n    <>\n      {data.progress || data.size || data.errorMessage ? `\\xa0|\\xa0` : null}\n\n      {inProgress && data.progress != null && (\n        <HvTypography variant=\"label\">\n          {`${convertUnits(data.progress)}\\xa0/\\xa0`}\n        </HvTypography>\n      )}\n\n      {!hasFailed && data.size && (\n        <HvTypography>{`${convertUnits(data.size)}`}</HvTypography>\n      )}\n\n      {hasFailed && data.errorMessage && (\n        <HvTypography className={classes?.fail}>\n          {data.errorMessage}\n        </HvTypography>\n      )}\n    </>\n  );\n};\n\nconst getProgressBarWith = ({ size, progress }: HvFileData) => {\n  const width =\n    progress != null && size != null ? Math.round((progress * 100) / size) : 0;\n\n  return width;\n};\n\nexport const HvFile = ({\n  id,\n  classes: classesProp,\n  data,\n  onFileRemoved,\n  removeFileButtonLabel,\n}: HvFileProps) => {\n  const { classes } = useClasses(classesProp);\n\n  const hasError = data.status === \"fail\";\n\n  const inProgress = data.status === \"progress\";\n\n  const progressText = getProgressText(data, classes);\n\n  const statusIcon = getStatusIcon(classes, data.status);\n\n  const currentProgress = getProgressBarWith(data);\n\n  return (\n    <li className={classes.root}>\n      {!hasError && inProgress && (\n        <HvProgressBar\n          classes={{\n            root: classes.progressbar,\n            progressBarContainer: cx(\n              classes.progressbarContainer,\n              classes.progressbarBack\n            ),\n          }}\n          value={currentProgress}\n          hideLabel\n        />\n      )}\n\n      {statusIcon}\n\n      <HvTypography className={classes.nameText} variant=\"label\">\n        {data.name}\n      </HvTypography>\n\n      <span className={classes.progressTextContainer}>{progressText}</span>\n\n      {data.preview && (\n        <div className={classes.previewContainer}>{data.preview}</div>\n      )}\n\n      <HvButton\n        id={setId(id, \"remove-button\")}\n        aria-label={removeFileButtonLabel}\n        className={classes.removeButton}\n        onClick={() => onFileRemoved?.(data)}\n        icon\n      >\n        <Close iconSize=\"XS\" />\n      </HvButton>\n    </li>\n  );\n};\n"],"names":["getStatusIcon","classes","status","icon","getProgressText","data","hasFailed","inProgress","progress","size","errorMessage","convertUnits","fail","getProgressBarWith","width","Math","round","HvFile","id","classesProp","onFileRemoved","removeFileButtonLabel","useClasses","hasError","progressText","statusIcon","currentProgress","root","progressbar","progressBarContainer","cx","progressbarContainer","progressbarBack","nameText","name","progressTextContainer","preview","previewContainer","setId","removeButton"],"mappings":";;;;;;;;;;AAyEA,MAAMA,gBAAgBA,CACpBC,SACAC,WACG;AACH,UAAQA,QAAM;AAAA,IACZ,KAAK;AACH,iCAAQ,SAAQ,EAAA,WAAWD,mCAASE,MAAM,OAAM,WAAa,CAAA;AAAA,IAC/D,KAAK;AACH,iCAAQ,MAAK,EAAA,WAAWF,mCAASE,MAAM,OAAM,WAAa,CAAA;AAAA,IAC5D;AACE,aAAQ,oBAAA,OAAA,EAAI,WAAWF,mCAASE,KAAQ,CAAA;AAAA,EAC5C;AACF;AAEA,MAAMC,kBAAkBA,CAACC,MAAkBJ,YAA4B;AAC/DK,QAAAA,YAAYD,KAAKH,WAAW;AAC5BK,QAAAA,aAAaF,KAAKH,WAAW;AAEnC,SAEKG,qBAAAA,UAAAA,EAAAA,UAAAA;AAAAA,IAAAA,KAAKG,YAAYH,KAAKI,QAAQJ,KAAKK,eAAgB,QAAa;AAAA,IAEhEH,cAAcF,KAAKG,YAAY,QAC7B,oBAAA,cAAA,EAAa,SAAQ,SAClB,UAAEG,GAAAA,aAAaN,KAAKG,QAAQ,CAAE,OAClC;AAAA,IAGD,CAACF,aAAaD,KAAKI,QAClB,oBAAC,cAAe,EAAA,UAAA,GAAEE,aAAaN,KAAKI,IAAI,CAAE,GAAE,CAAA;AAAA,IAG7CH,aAAaD,KAAKK,gBACjB,oBAAC,gBAAa,WAAWT,mCAASW,MAC/BP,UAAAA,KAAKK,aACR,CAAA;AAAA,EAEJ,EAAA,CAAA;AAEJ;AAEA,MAAMG,qBAAqBA,CAAC;AAAA,EAAEJ;AAAAA,EAAMD;AAAqB,MAAM;AACvDM,QAAAA,QACJN,YAAY,QAAQC,QAAQ,OAAOM,KAAKC,MAAOR,WAAW,MAAOC,IAAI,IAAI;AAEpEK,SAAAA;AACT;AAEO,MAAMG,SAASA,CAAC;AAAA,EACrBC;AAAAA,EACAjB,SAASkB;AAAAA,EACTd;AAAAA,EACAe;AAAAA,EACAC;AACW,MAAM;AACX,QAAA;AAAA,IAAEpB;AAAAA,EAAAA,IAAYqB,WAAWH,WAAW;AAEpCI,QAAAA,WAAWlB,KAAKH,WAAW;AAE3BK,QAAAA,aAAaF,KAAKH,WAAW;AAE7BsB,QAAAA,eAAepB,gBAAgBC,MAAMJ,OAAO;AAElD,QAAMwB,aAAazB,cAAcC,SAASI,KAAKH,MAAM;AAE/CwB,QAAAA,kBAAkBb,mBAAmBR,IAAI;AAE/C,SACG,qBAAA,MAAA,EAAG,WAAWJ,QAAQ0B,MACpB,UAAA;AAAA,IAAA,CAACJ,YAAYhB,cACX,oBAAA,eAAA,EACC,SAAS;AAAA,MACPoB,MAAM1B,QAAQ2B;AAAAA,MACdC,sBAAsBC,GACpB7B,QAAQ8B,sBACR9B,QAAQ+B,eACV;AAAA,IAEF,GAAA,OAAON,iBACP,WAAS,KAEZ,CAAA;AAAA,IAEAD;AAAAA,IAED,oBAAC,gBAAa,WAAWxB,QAAQgC,UAAU,SAAQ,SAChD5B,eAAK6B,KACR,CAAA;AAAA,IAEC,oBAAA,QAAA,EAAK,WAAWjC,QAAQkC,uBAAwBX,UAAa,cAAA;AAAA,IAE7DnB,KAAK+B,WACH,oBAAA,OAAA,EAAI,WAAWnC,QAAQoC,kBAAmBhC,eAAK+B,QAAQ,CAAA;AAAA,IAG1D,oBAAC,YACC,IAAIE,MAAMpB,IAAI,eAAe,GAC7B,cAAYG,uBACZ,WAAWpB,QAAQsC,cACnB,SAAS,MAAMnB,+CAAgBf,OAC/B,MAAI,MAEJ,UAAC,oBAAA,OAAA,EAAM,UAAS,KAAA,CAAI,EACtB,CAAA;AAAA,EACF,EAAA,CAAA;AAEJ;"}