import { jsxs, jsx } from "@emotion/react/jsx-runtime";
import { useLabels } from "../../hooks/useLabels.js";
import { setId } from "../../utils/setId.js";
import { useDefaultProps } from "../../hooks/useDefaultProps.js";
import { HvDropZone } from "./DropZone/DropZone.js";
import { HvFileList } from "./FileList/FileList.js";
const DEFAULT_LABELS = {
  dropzone: "Label",
  sizeWarning: "Max. file size:",
  drag: "Drop files here or",
  selectFiles: "click to upload",
  dropFiles: "Drop files here",
  fileSizeError: "The file exceeds the maximum upload size",
  fileTypeError: "File type not allowed for upload",
  removeFileButtonLabel: "Remove File"
};
const HvFileUploader = (props) => {
  const {
    id,
    className,
    labels: labelsProp,
    fileList,
    multiple = true,
    disabled = false,
    hideLabels = false,
    maxFileSize = Infinity,
    inputProps = {},
    acceptedFiles = [],
    onFilesAdded,
    onFileRemoved,
    ...others
  } = useDefaultProps("HvFileUploader", props);
  const labels = useLabels(DEFAULT_LABELS, labelsProp);
  return /* @__PURE__ */ jsxs("div", { id, className, ...others, children: [
    /* @__PURE__ */ jsx(HvDropZone, { id: setId(id, "dropzone"), labels, multiple, disabled, acceptedFiles, maxFileSize, onFilesAdded, inputProps, hideLabels }),
    /* @__PURE__ */ jsx(HvFileList, { id: setId(id, "filelist"), list: fileList, onFileRemoved, removeFileButtonLabel: labels == null ? void 0 : labels.removeFileButtonLabel })
  ] });
};
export {
  HvFileUploader
};
//# sourceMappingURL=FileUploader.js.map
