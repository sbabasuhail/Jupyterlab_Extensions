{"version":3,"file":"Button.styles.js","sources":["../../../../src/components/Button/Button.styles.ts"],"sourcesContent":["import { CSSInterpolation } from \"@emotion/serialize\";\n\nimport { theme } from \"@hitachivantara/uikit-styles\";\n\nimport { outlineStyles } from \"@core/utils/focusUtils\";\nimport { createClasses } from \"@core/utils/classes\";\n\nimport { HvButtonRadius, HvButtonSize, HvButtonVariant } from \"./types\";\n\nexport const { staticClasses, useClasses } = createClasses(\"HvButton\", {\n  root: {\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textTransform: \"none\",\n    cursor: \"pointer\",\n    minWidth: \"70px\",\n\n    whiteSpace: \"nowrap\",\n\n    \"&:hover\": {},\n    \"&:focus\": {},\n    \"&:focus-visible\": { ...outlineStyles },\n    \"&:active\": {},\n\n    // default button - no size specified\n    fontFamily: theme.fontFamily.body,\n    fontSize: theme.fontSizes.base,\n    fontWeight: theme.fontWeights.semibold,\n    lineHeight: \"11px\",\n    letterSpacing: 0,\n    height: \"32px\",\n    borderRadius: theme.button.borderRadius,\n    padding: theme.button.padding,\n  },\n  startIcon: {\n    marginLeft: `calc(-1 * ${theme.space.xs})`,\n  },\n  endIcon: {\n    marginRight: `calc(-1 * ${theme.space.xs})`,\n  },\n  focusVisible: {},\n\n  disabled: {\n    color: theme.colors.secondary_60,\n    borderColor: theme.colors.atmo4,\n    backgroundColor: theme.colors.atmo3,\n    cursor: \"not-allowed\",\n    pointerEvents: \"none\",\n  },\n\n  icon: {\n    margin: 0,\n    padding: 0,\n    height: \"fit-content\",\n    minWidth: \"unset\",\n  },\n});\n\nexport const getVariantStyles = (variant: HvButtonVariant) => {\n  const variantStyles: Record<HvButtonVariant, CSSInterpolation> = {\n    primary: {\n      color: theme.colors.atmo1,\n      backgroundColor: theme.colors.primary,\n      \"&:hover, &:focus-visible\": {\n        backgroundColor: theme.colors.primary_80,\n      },\n    },\n    primarySubtle: {\n      color: theme.colors.primary,\n      backgroundColor: \"transparent\",\n      border: `1px solid ${theme.colors.primary}`,\n      \"&:hover, &:focus-visible\": {\n        backgroundColor: theme.button.hoverColor,\n      },\n    },\n    primaryGhost: {\n      color: theme.colors.primary,\n      backgroundColor: \"transparent\",\n      \"&:hover, &:focus-visible\": {\n        backgroundColor: theme.button.hoverColor,\n      },\n      \"&:disabled\": {\n        backgroundColor: \"transparent\",\n      },\n    },\n    secondarySubtle: {\n      color: theme.colors.secondary,\n      backgroundColor: theme.button.secondaryBackgroundColor,\n      border: `1px solid ${theme.button.secondarySubtleBorderColor}`,\n      \"&:hover, &:focus-visible\": {\n        backgroundColor: theme.button.hoverColor,\n      },\n    },\n    secondaryGhost: {\n      color: theme.colors.secondary,\n      backgroundColor: \"transparent\",\n      \"&:hover, &:focus-visible\": {\n        backgroundColor: theme.button.hoverColor,\n      },\n      \"&:disabled\": {\n        backgroundColor: \"transparent\",\n      },\n    },\n    semantic: {\n      color: theme.colors.base_dark,\n      backgroundColor: \"transparent\",\n      \"&:hover, &:focus-visible\": {\n        backgroundColor: theme.button.semanticColor,\n      },\n      \"&:disabled\": {\n        backgroundColor: theme.button.semanticColorDisabled,\n      },\n    },\n    secondary: undefined,\n    ghost: undefined,\n  };\n\n  return variantStyles[variant];\n};\n\nexport const getRadiusStyles = (radius: HvButtonRadius): CSSInterpolation => ({\n  borderRadius: theme.radii[radius],\n});\n\nexport const getSizeStyles = (size: HvButtonSize): CSSInterpolation => ({\n  height: theme.sizes[size],\n  paddingLeft: theme.space[size],\n  paddingRight: theme.space[size],\n  fontSize: theme.fontSizes[size],\n});\n\nexport const getOverrideColors = (): CSSInterpolation => ({\n  \"& svg .color0\": {\n    fill: \"currentcolor\",\n  },\n});\n"],"names":["staticClasses","useClasses","createClasses","root","display","alignItems","justifyContent","textTransform","cursor","minWidth","whiteSpace","outlineStyles","fontFamily","theme","body","fontSize","fontSizes","base","fontWeight","fontWeights","semibold","lineHeight","letterSpacing","height","borderRadius","button","padding","startIcon","marginLeft","space","xs","endIcon","marginRight","focusVisible","disabled","color","colors","secondary_60","borderColor","atmo4","backgroundColor","atmo3","pointerEvents","icon","margin","getVariantStyles","variant","variantStyles","primary","atmo1","primary_80","primarySubtle","border","hoverColor","primaryGhost","secondarySubtle","secondary","secondaryBackgroundColor","secondarySubtleBorderColor","secondaryGhost","semantic","base_dark","semanticColor","semanticColorDisabled","undefined","ghost","getRadiusStyles","radius","radii","getSizeStyles","size","sizes","paddingLeft","paddingRight","getOverrideColors","fill"],"mappings":"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"}