import { jsxs, jsx } from "@emotion/react/jsx-runtime";
import { forwardRef } from "react";
import { useTheme } from "../../hooks/useTheme.js";
import { useDefaultProps } from "../../hooks/useDefaultProps.js";
import { useClasses, getVariantStyles, getSizeStyles, getRadiusStyles, getOverrideColors } from "./Button.styles.js";
import { staticClasses } from "./Button.styles.js";
const mapVariant = (variant, theme) => {
  if (theme === "ds3")
    return variant;
  const deprecatedVariantMap = {
    secondary: "secondarySubtle",
    ghost: "primaryGhost"
  };
  const mappedVariant = deprecatedVariantMap[variant];
  if (mappedVariant) {
    console.warn(`Button variant '${variant}' is deprecated. Please use '${mappedVariant}'.`);
  }
  return mappedVariant || variant;
};
const HvButton = forwardRef((props, ref) => {
  const {
    id,
    classes: classesProp,
    children,
    variant: variantProp,
    disabled = false,
    className,
    startIcon,
    endIcon,
    icon = false,
    size,
    radius,
    overrideIconColors = true,
    component: Component = "button",
    ...others
  } = useDefaultProps("HvButton", props);
  const {
    classes,
    css,
    cx
  } = useClasses(classesProp);
  const {
    activeTheme
  } = useTheme();
  const variant = mapVariant(variantProp ?? (icon ? "secondaryGhost" : "primary"), activeTheme == null ? void 0 : activeTheme.name);
  return /* @__PURE__ */ jsxs(Component, { ref, className: cx(classes.root, css(getVariantStyles(variant)), size && css(getSizeStyles(size)), radius && css(getRadiusStyles(radius)), overrideIconColors && css(getOverrideColors()), {
    [classes.icon]: icon,
    [classes.disabled]: disabled
  }, className), ...Component === "button" && {
    type: "button"
  }, ...disabled && {
    disabled: true,
    tabIndex: -1,
    "aria-disabled": true
  }, ...others, children: [
    startIcon && /* @__PURE__ */ jsx("span", { className: classes.startIcon, children: startIcon }),
    children,
    endIcon && /* @__PURE__ */ jsx("span", { className: classes.endIcon, children: endIcon })
  ] });
});
export {
  HvButton,
  staticClasses as buttonClasses
};
//# sourceMappingURL=Button.js.map
