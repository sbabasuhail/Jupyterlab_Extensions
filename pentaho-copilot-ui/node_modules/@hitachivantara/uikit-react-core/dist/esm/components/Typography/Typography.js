import { jsx } from "@emotion/react/jsx-runtime";
import { forwardRef } from "react";
import { useTheme } from "../../hooks/useTheme.js";
import { useDefaultProps } from "../../hooks/useDefaultProps.js";
import { mapVariant } from "./utils.js";
import { useClasses } from "./Typography.styles.js";
import { staticClasses } from "./Typography.styles.js";
const HvTypographyMap = {
  display: "h1",
  title1: "h1",
  title2: "h2",
  title3: "h3",
  title4: "h4",
  body: "p",
  label: "span",
  caption1: "p",
  caption2: "p",
  // LEGACY
  "5xlTitle": "h1",
  "4xlTitle": "h1",
  xxlTitle: "h1",
  lTitle: "h2",
  sTitle: "h4",
  xxsTitle: "h6",
  sectionTitle: "p",
  placeholderText: "p",
  link: "p",
  disabledText: "p",
  selectedNavText: "p",
  vizTextDisabled: "p",
  xsInlineLink: "p"
};
const HvTypography = forwardRef((props, ref) => {
  const {
    className,
    component: ComponentProp,
    classes: classesProp,
    variant: variantProp = "body",
    link = false,
    disabled = false,
    noWrap = false,
    paragraph = false,
    ...others
  } = useDefaultProps("HvTypography", props);
  const {
    classes,
    cx
  } = useClasses(classesProp);
  const {
    activeTheme
  } = useTheme();
  const variant = mapVariant(variantProp, activeTheme == null ? void 0 : activeTheme.name);
  const Component = ComponentProp || paragraph && "p" || HvTypographyMap[variant] || "span";
  return /* @__PURE__ */ jsx(Component, { ref, className: cx(classes.root, classes[variant], {
    [classes.isLink]: link,
    [classes.noWrap]: noWrap,
    [classes.disabled]: disabled
  }, className), ...others });
});
export {
  HvTypography,
  staticClasses as typographyClasses
};
//# sourceMappingURL=Typography.js.map
