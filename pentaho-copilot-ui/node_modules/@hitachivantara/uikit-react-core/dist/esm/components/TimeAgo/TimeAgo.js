import { jsx, Fragment } from "@emotion/react/jsx-runtime";
import { forwardRef } from "react";
import isEmpty from "lodash/isEmpty";
import { useDefaultProps } from "../../hooks/useDefaultProps.js";
import { useClasses } from "./TimeAgo.styles.js";
import { staticClasses } from "./TimeAgo.styles.js";
import useTimeAgo from "./useTimeAgo.js";
import { HvTypography } from "../Typography/Typography.js";
const HvTimeAgo = forwardRef((props, ref) => {
  const {
    classes: classesProp,
    className,
    timestamp,
    locale: localeProp = "en",
    component: Component = HvTypography,
    emptyElement = "â€”",
    disableRefresh = false,
    showSeconds = false,
    justText = false,
    ...others
  } = useDefaultProps("HvTimeAgo", props);
  const {
    classes,
    cx
  } = useClasses(classesProp);
  const locale = isEmpty(localeProp) ? "en" : localeProp;
  const timeAgo = useTimeAgo(timestamp, {
    locale,
    disableRefresh,
    showSeconds
  });
  if (justText && timestamp)
    return /* @__PURE__ */ jsx(Fragment, { children: timeAgo });
  return /* @__PURE__ */ jsx(Component, { ref, className: cx(classes.root, className), ...others, children: !timestamp ? emptyElement : timeAgo });
});
export {
  HvTimeAgo,
  staticClasses as timeAgoClasses
};
//# sourceMappingURL=TimeAgo.js.map
