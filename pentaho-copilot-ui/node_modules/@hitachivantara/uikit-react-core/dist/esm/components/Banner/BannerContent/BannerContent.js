import { jsx } from "@emotion/react/jsx-runtime";
import { forwardRef } from "react";
import SnackbarContent from "@mui/material/SnackbarContent";
import { iconVariant } from "../../../utils/iconVariant.js";
import { useClasses } from "./BannerContent.styles.js";
import { staticClasses } from "./BannerContent.styles.js";
import { HvMessageContainer } from "./MessageContainer/MessageContainer.js";
import { HvActionContainer } from "./ActionContainer/ActionContainer.js";
const HvBannerContent = forwardRef((props, ref) => {
  const {
    id,
    classes: classesProp,
    showIcon = false,
    customIcon,
    variant = "default",
    onClose,
    actions,
    actionsCallback,
    actionsPosition = "auto",
    content,
    actionProps,
    ...others
  } = props;
  const {
    classes,
    cx
  } = useClasses(classesProp);
  const icon = customIcon || showIcon && iconVariant(variant, "base_dark");
  const effectiveActionsPosition = actionsPosition === "auto" ? "inline" : actionsPosition;
  return /* @__PURE__ */ jsx("div", { className: classes.outContainer, children: /* @__PURE__ */ jsx(SnackbarContent, { ref, id, classes: {
    root: classes.root,
    message: classes.message,
    action: classes.action
  }, className: cx(classes == null ? void 0 : classes.baseVariant, classes == null ? void 0 : classes[variant]), message: /* @__PURE__ */ jsx(HvMessageContainer, { id, icon, ...effectiveActionsPosition === "inline" && {
    actionsOnMessage: actions,
    actionsOnMessageCallback: actionsCallback
  }, message: content }), action: /* @__PURE__ */ jsx(HvActionContainer, { id, onClose, ...effectiveActionsPosition === "bottom-right" && {
    action: actions,
    actionCallback: actionsCallback
  }, ...actionProps }), ...others }) });
});
export {
  HvBannerContent,
  staticClasses as bannerContentClasses
};
//# sourceMappingURL=BannerContent.js.map
