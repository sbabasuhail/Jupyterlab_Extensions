import { jsxs, Fragment, jsx } from "@emotion/react/jsx-runtime";
import { setId } from "../../../../utils/setId.js";
import { useClasses } from "./MessageContainer.styles.js";
import { staticClasses } from "./MessageContainer.styles.js";
import { HvTypography } from "../../../Typography/Typography.js";
import { HvActionsGeneric } from "../../../ActionsGeneric/ActionsGeneric.js";
const HvMessageContainer = ({
  id,
  classes: classesProp,
  icon,
  actionsOnMessage,
  actionsOnMessageCallback,
  message
}) => {
  const {
    classes
  } = useClasses(classesProp);
  return /* @__PURE__ */ jsxs(Fragment, { children: [
    icon && /* @__PURE__ */ jsx("div", { className: classes.iconContainer, children: icon }),
    /* @__PURE__ */ jsx(HvTypography, { id: setId(id, "message-text"), className: classes.message, children: message }),
    actionsOnMessage && /* @__PURE__ */ jsx("div", { id: setId(id, "message-actions"), className: classes.actionMessageContainer, children: /* @__PURE__ */ jsx(HvActionsGeneric, { id, category: "semantic", actions: actionsOnMessage, actionsCallback: actionsOnMessageCallback }) })
  ] });
};
export {
  HvMessageContainer,
  staticClasses as messageContainerClasses
};
//# sourceMappingURL=MessageContainer.js.map
