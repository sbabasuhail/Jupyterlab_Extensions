import { jsx } from "@emotion/react/jsx-runtime";
import { Grid } from "@mui/material";
import isString from "lodash/isString";
import { forwardRef } from "react";
import { useDefaultProps } from "../../hooks/useDefaultProps.js";
import { useClasses } from "./Grid.styles.js";
import { staticClasses } from "./Grid.styles.js";
const BREAKPOINT_GUTTERS = {
  xs: 2,
  sm: 2,
  md: 4,
  lg: 4,
  xl: 4
};
const BREAKPOINT_COLUMNS = {
  xs: 4,
  sm: 8,
  md: 12,
  lg: 12,
  xl: 12
};
function getGridSpacing(spacing) {
  let gridSpacing;
  if (isString(spacing)) {
    if (spacing === "auto") {
      gridSpacing = BREAKPOINT_GUTTERS;
    } else {
      gridSpacing = BREAKPOINT_GUTTERS[spacing];
    }
  } else if (typeof spacing === "object") {
    gridSpacing = Object.keys(spacing).reduce((acc, breakpoint) => ({
      ...acc,
      [breakpoint]: BREAKPOINT_GUTTERS[spacing[breakpoint]] ?? spacing[breakpoint]
    }), {});
  } else if (spacing === 0) {
    gridSpacing = {
      xs: 0
    };
  } else {
    gridSpacing = spacing;
  }
  return gridSpacing;
}
function getNumberOfColumns(columns) {
  let numberOfColumns;
  if (columns === "auto") {
    numberOfColumns = BREAKPOINT_COLUMNS;
  } else {
    numberOfColumns = columns;
  }
  return numberOfColumns;
}
const HvGrid = forwardRef((props, ref) => {
  const {
    container,
    spacing = "auto",
    rowSpacing,
    columnSpacing,
    columns,
    classes: classesProp,
    ...others
  } = useDefaultProps("HvGrid", props);
  const {
    classes
  } = useClasses(classesProp);
  const containerProps = {};
  if (container) {
    containerProps.container = true;
    if (spacing != null) {
      containerProps.spacing = getGridSpacing(spacing);
    }
    if (rowSpacing != null) {
      containerProps.rowSpacing = getGridSpacing(rowSpacing);
    }
    if (columnSpacing != null) {
      containerProps.columnSpacing = getGridSpacing(columnSpacing);
    }
    if (columns != null) {
      containerProps.columns = getNumberOfColumns(columns);
    }
  }
  return /* @__PURE__ */ jsx(Grid, { ref, classes, ...containerProps, ...others });
});
export {
  HvGrid,
  staticClasses as gridClasses
};
//# sourceMappingURL=Grid.js.map
