import { jsx } from "@emotion/react/jsx-runtime";
import React__default, { forwardRef, useRef, useContext, useMemo } from "react";
import { useForkRef } from "../../hooks/useForkRef.js";
import { useDefaultProps } from "../../hooks/useDefaultProps.js";
import { useClasses } from "./ListContainer.styles.js";
import { staticClasses } from "./ListContainer.styles.js";
import HvListContext from "./ListContext/ListContext.js";
const HvListContainer = forwardRef((props, externalRef) => {
  const {
    id,
    classes: classesProp,
    className,
    interactive = false,
    condensed,
    disableGutters,
    children,
    ...others
  } = useDefaultProps("HvListContainer", props);
  const {
    classes,
    cx
  } = useClasses(classesProp);
  const containerRef = useRef(null);
  const {
    topContainerRef,
    nesting = -1
  } = useContext(HvListContext);
  const listContext = useMemo(() => ({
    topContainerRef: topContainerRef || containerRef,
    condensed,
    disableGutters,
    interactive,
    nesting: nesting + 1
  }), [condensed, disableGutters, interactive, nesting, topContainerRef]);
  const renderChildren = () => {
    if (!interactive) {
      return children;
    }
    const anySelected = React__default.Children.toArray(children).map((child) => child.props.selected && !child.props.disabled).reduce((result, selected) => result || selected, false);
    return React__default.Children.map(children, (child, i) => {
      const tabIndex = child.props.tabIndex || !anySelected && i === 0 || child.props.selected && !child.props.disabled ? 0 : -1;
      return React__default.cloneElement(child, {
        tabIndex,
        interactive
      });
    });
  };
  const handleRef = useForkRef(externalRef, containerRef);
  return /* @__PURE__ */ jsx(HvListContext.Provider, { value: listContext, children: /* @__PURE__ */ jsx("ul", { ref: handleRef, id, className: cx(classes.root, className), ...others, children: renderChildren() }) });
});
export {
  HvListContainer,
  staticClasses as listContainerClasses
};
//# sourceMappingURL=ListContainer.js.map
