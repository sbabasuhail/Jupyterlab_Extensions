{"version":3,"file":"Calendar.js","sources":["../../../../src/components/Calendar/Calendar.tsx"],"sourcesContent":["import { useDefaultProps } from \"@core/hooks/useDefaultProps\";\n\nimport React, { useContext } from \"react\";\n\nimport { setId } from \"@core/utils/setId\";\nimport {\n  HvFormElementContext,\n  HvFormElementValueContext,\n} from \"@core/components/Forms\";\n\nimport { ExtractNames } from \"@core/utils/classes\";\nimport { isRange } from \"./utils\";\nimport { HvSingleCalendar } from \"./SingleCalendar\";\nimport { DateRangeProp, VisibilitySelectorActions } from \"./types\";\n\nimport { staticClasses, useClasses } from \"./Calendar.styles\";\n\nexport { staticClasses as calendarClasses };\n\nexport type HvCalendarClasses = ExtractNames<typeof useClasses>;\n\nexport interface HvCalendarProps {\n  /**\n   * Styles applied from the theme.\n   */\n  classes?: HvCalendarClasses;\n  /**\n   * Identifier.\n   */\n  id?: string;\n  /**\n   * The calendar locale. If undefined, it defaults to en-US\n   *\n   */\n  locale?: string;\n  /**\n   * Date that the calendar would show.\n   * if using the object format the calendar enter in range mode showing two calendars\n   */\n  value?: DateRangeProp | Date;\n  /**\n   * Controls the visible month of the Calendar\n   */\n  visibleMonth?: number;\n  /**\n   * Controls the visible year of the Calendar\n   */\n  visibleYear?: number;\n  /**\n   * Controls the visible month of the Calendar on the right side of the datepicker\n   */\n  rightVisibleMonth?: number;\n  /**\n   * Controls the visible year of the Calendar on the right side of the datepicker\n   */\n  rightVisibleYear?: number;\n  /**\n   * Callback function to be triggered when the selected date has changed.\n   */\n  onChange?: (\n    event:\n      | React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n      | undefined,\n    value: Date | DateRangeProp\n  ) => void;\n  /**\n   * Callback function to be triggered when the selected date input has changed.\n   */\n  onInputChange?: (\n    event:\n      | React.ChangeEvent<\n          HTMLTextAreaElement | HTMLInputElement | HTMLButtonElement\n        >\n      | undefined,\n    value: Date | DateRangeProp,\n    position: \"left\" | \"right\"\n  ) => void;\n  /**\n   * Callback function to be triggered when the user clicks on the month or year selector.\n   * it receives the action that was pressed:\n   * previous_month, next_month, previous_year, next_year,month\n   */\n  onVisibleDateChange?: (\n    event:\n      | React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n      | undefined,\n    action: VisibilitySelectorActions,\n    value?: Date | DateRangeProp | number,\n    position?: \"left\" | \"right\"\n  ) => void;\n  /**\n   * The maximum selectable date after this all values are disabled.\n   */\n  maximumDate?: Date;\n  /**\n   * The minimum selectable date before this all values are disabled.\n   */\n  minimumDate?: Date;\n  /**\n   * An element placed before the Calendar\n   */\n  startAdornment?: React.ReactNode;\n  /**\n   * Indicates if header should display the day of week.\n   */\n  showDayOfWeek?: boolean;\n  /**\n   * Label shown when date is invalid.\n   */\n  invalidDateLabel?: string;\n}\n\nexport const HvCalendar = (props: HvCalendarProps) => {\n  const {\n    classes: classesProp,\n    id,\n    locale = \"en-US\",\n    value,\n    visibleMonth,\n    visibleYear,\n    rightVisibleMonth,\n    rightVisibleYear,\n    minimumDate,\n    maximumDate,\n    startAdornment,\n    onChange,\n    onInputChange,\n    onVisibleDateChange,\n    invalidDateLabel,\n    ...others\n  } = useDefaultProps(\"HvCalendar\", props);\n  const { classes } = useClasses(classesProp);\n\n  const { elementId } = useContext(HvFormElementContext);\n  const elementValue = useContext(HvFormElementValueContext);\n  const localValue = value ?? elementValue;\n  const localId = id ?? setId(elementId, \"single-calendar\");\n  const rangeMode = isRange(localValue);\n  const rightCalendarId = setId(localId, \"single-calendar-right\");\n  const clampedMonth =\n    visibleMonth && visibleMonth % 13 > 0 ? visibleMonth % 13 : 1;\n\n  const singleCalendar = (\n    <HvSingleCalendar\n      id={localId}\n      locale={locale}\n      value={localValue}\n      visibleMonth={clampedMonth}\n      visibleYear={visibleYear}\n      minimumDate={minimumDate}\n      maximumDate={maximumDate}\n      onChange={onChange}\n      onInputChange={(evt, date) =>\n        onInputChange && onInputChange(evt, date, \"left\")\n      }\n      onVisibleDateChange={onVisibleDateChange}\n      invalidDateLabel={invalidDateLabel}\n      {...others}\n    />\n  );\n\n  const rangeCalendar = (\n    <div className={classes.rangeCalendarContainer}>\n      <HvSingleCalendar\n        className={classes.singleCalendar}\n        id={localId}\n        locale={locale}\n        value={localValue}\n        visibleMonth={clampedMonth}\n        visibleYear={visibleYear}\n        minimumDate={minimumDate}\n        maximumDate={maximumDate}\n        onChange={onChange}\n        onInputChange={(evt, date) =>\n          onInputChange && onInputChange(evt, date, \"left\")\n        }\n        onVisibleDateChange={(event, action, index) =>\n          onVisibleDateChange?.(event, action, index, \"left\")\n        }\n        invalidDateLabel={invalidDateLabel}\n        {...others}\n      />\n\n      <HvSingleCalendar\n        className={classes.singleCalendar}\n        id={rightCalendarId}\n        locale={locale}\n        value={localValue}\n        visibleMonth={rightVisibleMonth}\n        visibleYear={rightVisibleYear}\n        minimumDate={minimumDate}\n        maximumDate={maximumDate}\n        onChange={onChange}\n        onInputChange={(evt, date) =>\n          onInputChange && onInputChange(evt, date, \"right\")\n        }\n        onVisibleDateChange={(event, action, index) => {\n          onVisibleDateChange?.(event, action, index, \"right\");\n        }}\n        showEndDate\n        invalidDateLabel={invalidDateLabel}\n        {...others}\n      />\n    </div>\n  );\n\n  return (\n    <div className={classes.root}>\n      {startAdornment}\n      {rangeMode ? rangeCalendar : singleCalendar}\n    </div>\n  );\n};\n"],"names":["HvCalendar","props","classes","classesProp","id","locale","value","visibleMonth","visibleYear","rightVisibleMonth","rightVisibleYear","minimumDate","maximumDate","startAdornment","onChange","onInputChange","onVisibleDateChange","invalidDateLabel","others","useDefaultProps","useClasses","elementId","useContext","HvFormElementContext","elementValue","HvFormElementValueContext","localValue","localId","setId","rangeMode","isRange","rightCalendarId","clampedMonth","singleCalendar","evt","date","rangeCalendar","rangeCalendarContainer","event","action","index","root"],"mappings":";;;;;;;;;;AAgHaA,MAAAA,aAAaA,CAACC,UAA2B;AAC9C,QAAA;AAAA,IACJC,SAASC;AAAAA,IACTC;AAAAA,IACAC,SAAS;AAAA,IACTC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACA,GAAGC;AAAAA,EAAAA,IACDC,gBAAgB,cAAclB,KAAK;AACjC,QAAA;AAAA,IAAEC;AAAAA,EAAAA,IAAYkB,WAAWjB,WAAW;AAEpC,QAAA;AAAA,IAAEkB;AAAAA,EAAAA,IAAcC,WAAWC,oBAAoB;AAC/CC,QAAAA,eAAeF,WAAWG,yBAAyB;AACzD,QAAMC,aAAapB,SAASkB;AAC5B,QAAMG,UAAUvB,MAAMwB,MAAMP,WAAW,iBAAiB;AAClDQ,QAAAA,YAAYC,QAAQJ,UAAU;AAC9BK,QAAAA,kBAAkBH,MAAMD,SAAS,uBAAuB;AAC9D,QAAMK,eACJzB,gBAAgBA,eAAe,KAAK,IAAIA,eAAe,KAAK;AAExD0B,QAAAA,iBACH,oBAAA,kBAAA,EACC,IAAIN,SACJ,QACA,OAAOD,YACP,cAAcM,cACd,aACA,aACA,aACA,UACA,eAAe,CAACE,KAAKC,SACnBpB,iBAAiBA,cAAcmB,KAAKC,MAAM,MAAM,GAElD,qBACA,kBACIjB,GAAAA,OAEP,CAAA;AAED,QAAMkB,gBACJ,qBAAC,OAAI,EAAA,WAAWlC,QAAQmC,wBACtB,UAAA;AAAA,IAAA,oBAAC,oBACC,WAAWnC,QAAQ+B,gBACnB,IAAIN,SACJ,QACA,OAAOD,YACP,cAAcM,cACd,aACA,aACA,aACA,UACA,eAAe,CAACE,KAAKC,SACnBpB,iBAAiBA,cAAcmB,KAAKC,MAAM,MAAM,GAElD,qBAAqB,CAACG,OAAOC,QAAQC,UACnCxB,2DAAsBsB,OAAOC,QAAQC,OAAO,SAE9C,kBACItB,GAAAA,QAAO;AAAA,IAGZ,oBAAA,kBAAA,EACC,WAAWhB,QAAQ+B,gBACnB,IAAIF,iBACJ,QACA,OAAOL,YACP,cAAcjB,mBACd,aAAaC,kBACb,aACA,aACA,UACA,eAAe,CAACwB,KAAKC,SACnBpB,iBAAiBA,cAAcmB,KAAKC,MAAM,OAAO,GAEnD,qBAAqB,CAACG,OAAOC,QAAQC,UAAU;AACvBF,iEAAAA,OAAOC,QAAQC,OAAO;AAAA,IAE9C,GAAA,aAAW,MACX,kBACItB,GAAAA,OAAO,CAAA;AAAA,EAEf,EAAA,CAAA;AAGF,SACG,qBAAA,OAAA,EAAI,WAAWhB,QAAQuC,MACrB5B,UAAAA;AAAAA,IAAAA;AAAAA,IACAgB,YAAYO,gBAAgBH;AAAAA,EAC/B,EAAA,CAAA;AAEJ;"}