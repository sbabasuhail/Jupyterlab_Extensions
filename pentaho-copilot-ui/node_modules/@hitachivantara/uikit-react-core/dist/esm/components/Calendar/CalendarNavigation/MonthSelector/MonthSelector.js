import { jsx } from "@emotion/react/jsx-runtime";
import { isKey } from "../../../../utils/keyboardUtils.js";
import { getMonthNamesList } from "../../utils.js";
import { useClasses } from "./MonthSelector.styles.js";
import { staticClasses } from "./MonthSelector.styles.js";
import { HvTypography } from "../../../Typography/Typography.js";
const HvMonthSelector = ({
  classes: classesProp,
  id,
  locale,
  onChange,
  onViewModeChange,
  rangeMode,
  visibleMonth,
  ...others
}) => {
  const {
    classes,
    cx
  } = useClasses(classesProp);
  const listMonthNamesShort = getMonthNamesList(locale, "short");
  const onKeyDownHandler = (event, index) => {
    if (isKey(event, "Enter")) {
      onChange == null ? void 0 : onChange(event, "month", index + 1);
      onViewModeChange("calendar");
    }
  };
  return /* @__PURE__ */ jsx("div", { className: cx(classes.calendarMonthlyGrid, {
    [classes.rangeModeWidth]: rangeMode,
    [classes.normalWidth]: !rangeMode
  }), children: listMonthNamesShort.map((monthName, index) => /* @__PURE__ */ jsx("div", { className: classes.focusSelection, role: "button", onClick: (event) => {
    onChange == null ? void 0 : onChange(event, "month", index + 1);
    onViewModeChange("calendar");
  }, onKeyDown: (event) => onKeyDownHandler(event, index), tabIndex: 0, ...others, children: /* @__PURE__ */ jsx(HvTypography, { className: cx(classes.calendarMonthlyCell, {
    [classes.calendarMonthlyCellSelected]: index + 1 === visibleMonth
  }), children: monthName }) }, monthName)) });
};
export {
  HvMonthSelector,
  staticClasses as monthSelectorClasses
};
//# sourceMappingURL=MonthSelector.js.map
