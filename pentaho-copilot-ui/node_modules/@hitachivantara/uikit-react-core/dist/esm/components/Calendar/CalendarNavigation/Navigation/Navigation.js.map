{"version":3,"file":"Navigation.js","sources":["../../../../../../src/components/Calendar/CalendarNavigation/Navigation/Navigation.tsx"],"sourcesContent":["import {\n  DropLeftXS as DropLeftIcon,\n  DropRightXS as DropRightIcon,\n} from \"@hitachivantara/uikit-react-icons\";\n\nimport { isKey } from \"@core/utils/keyboardUtils\";\nimport { setId } from \"@core/utils/setId\";\nimport { HvTypography } from \"@core/components/Typography\";\nimport { HvBaseProps } from \"@core/types/generic\";\n\nimport { ExtractNames } from \"@core/utils/classes\";\n\nimport { staticClasses, useClasses } from \"./Navigation.styles\";\n\nexport { staticClasses as navigationClasses };\n\nexport type HvNavigationClasses = ExtractNames<typeof useClasses>;\n\nexport const Navigation = ({\n  id,\n  classes: classesProp,\n  onNavigatePrevious,\n  onNavigateNext,\n  onTextClick,\n  navigationText = \"n/a\",\n  isPreviousEnabled = true,\n  isNextEnabled = true,\n}: NavigationProps) => {\n  const { classes, cx } = useClasses(classesProp);\n\n  const onkeyDownHandler = (event, funcAction) => {\n    if (isKey(event, \"Enter\") || isKey(event, \"Space\")) {\n      event.preventDefault();\n      funcAction(event);\n    }\n  };\n\n  const onTextClickIsFunction = typeof onTextClick === \"function\";\n\n  return (\n    <div className={classes.root}>\n      <DropLeftIcon\n        id={setId(id, \"left\")}\n        className={cx(classes.icon, {\n          [classes.disabled]: !isPreviousEnabled,\n        })}\n        onClick={\n          isPreviousEnabled ? (event) => onNavigatePrevious(event) : undefined\n        }\n        onKeyDown={(event) =>\n          isNextEnabled\n            ? onkeyDownHandler(event, onNavigatePrevious)\n            : undefined\n        }\n        tabIndex={0}\n      />\n\n      <div\n        id={id}\n        className={cx({\n          [classes.text]: onTextClickIsFunction,\n          [classes.textWithoutHover]: !onTextClickIsFunction,\n        })}\n        role=\"presentation\"\n        onClick={onTextClick}\n        onKeyDown={\n          onTextClick && ((event) => onkeyDownHandler(event, onTextClick))\n        }\n        // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n        tabIndex={onTextClick ? 0 : -1}\n      >\n        <HvTypography variant=\"body\">{navigationText}</HvTypography>\n      </div>\n\n      <DropRightIcon\n        id={setId(id, \"right\")}\n        className={cx(classes.icon, {\n          [classes.disabled]: !isNextEnabled,\n        })}\n        onClick={isNextEnabled ? (event) => onNavigateNext(event) : undefined}\n        onKeyDown={(event) =>\n          isNextEnabled ? onkeyDownHandler(event, onNavigateNext) : undefined\n        }\n        tabIndex={0}\n      />\n    </div>\n  );\n};\n\nexport interface NavigationProps extends HvBaseProps {\n  /**\n   * Identifier.\n   */\n  id?: string;\n  /**\n   * A Jss Object used to override or extend the component styles.\n   */\n  classes?: HvNavigationClasses;\n  /**\n   * A function to be executed whenever the navigate previous action is triggered.\n   */\n  onNavigatePrevious: (event: React.MouseEvent<HTMLDivElement>) => void;\n  /**\n   * A function to be executed whenever the navigate next action is triggered.\n   */\n  onNavigateNext: (event: React.MouseEvent<HTMLDivElement>) => void;\n  /**\n   * A function to be executed whenever the text is clicked.\n   */\n  onTextClick?: () => void;\n  /**\n   * The text that will be shown between the navigation buttons.\n   */\n  navigationText?: string;\n  /**\n   * Flag stating if the previous button should be enabled or disabled.\n   */\n  isPreviousEnabled?: boolean;\n  /**\n   * Flag stating if the next button should be enabled or disabled.\n   */\n  isNextEnabled?: boolean;\n}\n"],"names":["Navigation","id","classes","classesProp","onNavigatePrevious","onNavigateNext","onTextClick","navigationText","isPreviousEnabled","isNextEnabled","cx","useClasses","onkeyDownHandler","event","funcAction","isKey","preventDefault","onTextClickIsFunction","root","DropLeftIcon","setId","icon","disabled","undefined","text","textWithoutHover","DropRightIcon"],"mappings":";;;;;;;AAkBO,MAAMA,aAAaA,CAAC;AAAA,EACzBC;AAAAA,EACAC,SAASC;AAAAA,EACTC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC,iBAAiB;AAAA,EACjBC,oBAAoB;AAAA,EACpBC,gBAAgB;AACD,MAAM;AACf,QAAA;AAAA,IAAEP;AAAAA,IAASQ;AAAAA,EAAAA,IAAOC,WAAWR,WAAW;AAExCS,QAAAA,mBAAmBA,CAACC,OAAOC,eAAe;AAC9C,QAAIC,MAAMF,OAAO,OAAO,KAAKE,MAAMF,OAAO,OAAO,GAAG;AAClDA,YAAMG,eAAe;AACrBF,iBAAWD,KAAK;AAAA,IAClB;AAAA,EAAA;AAGII,QAAAA,wBAAwB,OAAOX,gBAAgB;AAErD,SACG,qBAAA,OAAA,EAAI,WAAWJ,QAAQgB,MACtB,UAAA;AAAA,IAAC,oBAAAC,YAAA,EACC,IAAIC,MAAMnB,IAAI,MAAM,GACpB,WAAWS,GAAGR,QAAQmB,MAAM;AAAA,MAC1B,CAACnB,QAAQoB,QAAQ,GAAG,CAACd;AAAAA,IAAAA,CACtB,GACD,SACEA,oBAAqBK,CAAUT,UAAAA,mBAAmBS,KAAK,IAAIU,QAE7D,WAAYV,CAAAA,UACVJ,gBACIG,iBAAiBC,OAAOT,kBAAkB,IAC1CmB,QAEN,UAAU,GAAE;AAAA,IAGd;AAAA,MAAC;AAAA,MAAA;AAAA,QACC;AAAA,QACA,WAAWb,GAAG;AAAA,UACZ,CAACR,QAAQsB,IAAI,GAAGP;AAAAA,UAChB,CAACf,QAAQuB,gBAAgB,GAAG,CAACR;AAAAA,QAAAA,CAC9B;AAAA,QACD,MAAK;AAAA,QACL,SAASX;AAAAA,QACT,WACEA,gBAAiBO,CAAUD,UAAAA,iBAAiBC,OAAOP,WAAW;AAAA,QAGhE,UAAUA,cAAc,IAAI;AAAA,QAE5B,UAAC,oBAAA,cAAA,EAAa,SAAQ,QAAQC,UAAe,gBAAA;AAAA,MAAA;AAAA,IAC/C;AAAA,IAEA,oBAACmB,aACC,EAAA,IAAIN,MAAMnB,IAAI,OAAO,GACrB,WAAWS,GAAGR,QAAQmB,MAAM;AAAA,MAC1B,CAACnB,QAAQoB,QAAQ,GAAG,CAACb;AAAAA,IAAAA,CACtB,GACD,SAASA,gBAAiBI,CAAUR,UAAAA,eAAeQ,KAAK,IAAIU,QAC5D,WAAYV,CAAAA,UACVJ,gBAAgBG,iBAAiBC,OAAOR,cAAc,IAAIkB,QAE5D,UAAU,GAAE;AAAA,EAEhB,EAAA,CAAA;AAEJ;"}