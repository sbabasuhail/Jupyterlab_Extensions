import { jsx } from "@emotion/react/jsx-runtime";
import { useRef, useMemo } from "react";
import { HvTooltip } from "../Tooltip/Tooltip.js";
import { HvTypography } from "../Typography/Typography.js";
const TitleWithTooltip = ({
  className,
  title
}) => {
  const textRef = useRef(null);
  const isOverflowed = useMemo(() => {
    const el = textRef.current;
    if (!el)
      return false;
    return el.scrollWidth > el.clientWidth || el.scrollHeight > el.clientHeight;
  }, []);
  return /* @__PURE__ */ jsx(HvTooltip, { disableHoverListener: !isOverflowed, placement: "top-start", title: /* @__PURE__ */ jsx(HvTypography, { children: title }), children: /* @__PURE__ */ jsx(HvTypography, { className, variant: "label", component: "span", ref: textRef, children: title }) });
};
const TitleWithTooltip$1 = TitleWithTooltip;
export {
  TitleWithTooltip$1 as default
};
//# sourceMappingURL=TitleWithTooltip.js.map
