{"version":3,"file":"TitleWithTooltip.js","sources":["../../../../src/components/AppSwitcher/TitleWithTooltip.tsx"],"sourcesContent":["import { useMemo, useRef } from \"react\";\n\nimport { HvTooltip } from \"@core/components/Tooltip\";\nimport { HvTypography } from \"@core/components/Typography\";\n\nconst TitleWithTooltip = ({ className, title }) => {\n  const textRef = useRef<HTMLDivElement>(null);\n\n  const isOverflowed = useMemo(() => {\n    const el = textRef.current;\n    if (!el) return false;\n\n    return el.scrollWidth > el.clientWidth || el.scrollHeight > el.clientHeight;\n  }, []);\n\n  return (\n    <HvTooltip\n      disableHoverListener={!isOverflowed}\n      placement=\"top-start\"\n      title={<HvTypography>{title}</HvTypography>}\n    >\n      <HvTypography\n        className={className}\n        variant=\"label\"\n        component=\"span\"\n        ref={textRef}\n      >\n        {title}\n      </HvTypography>\n    </HvTooltip>\n  );\n};\n\nexport default TitleWithTooltip;\n"],"names":["TitleWithTooltip","className","title","textRef","useRef","isOverflowed","useMemo","el","current","scrollWidth","clientWidth","scrollHeight","clientHeight"],"mappings":";;;;AAKA,MAAMA,mBAAmBA,CAAC;AAAA,EAAEC;AAAAA,EAAWC;AAAM,MAAM;AAC3CC,QAAAA,UAAUC,OAAuB,IAAI;AAErCC,QAAAA,eAAeC,QAAQ,MAAM;AACjC,UAAMC,KAAKJ,QAAQK;AACnB,QAAI,CAACD;AAAW,aAAA;AAEhB,WAAOA,GAAGE,cAAcF,GAAGG,eAAeH,GAAGI,eAAeJ,GAAGK;AAAAA,EACjE,GAAG,CAAE,CAAA;AAGH,SAAA,oBAAC,aACC,sBAAsB,CAACP,cACvB,WAAU,aACV,OAAO,oBAAC,cAAcH,EAAAA,UAAAA,MAAAA,CAAM,GAE5B,UAAC,oBAAA,cAAA,EACC,WACA,SAAQ,SACR,WAAU,QACV,KAAKC,SAEJD,UAAAA,MACH,CAAA,EACF,CAAA;AAEJ;AAEA,MAAA,qBAAeF;"}