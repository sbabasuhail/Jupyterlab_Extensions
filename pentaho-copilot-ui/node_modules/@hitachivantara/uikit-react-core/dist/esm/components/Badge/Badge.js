import { jsxs, jsx } from "@emotion/react/jsx-runtime";
import { useDefaultProps } from "../../hooks/useDefaultProps.js";
import { useClasses } from "./Badge.styles.js";
import { staticClasses } from "./Badge.styles.js";
import { HvTypography } from "../Typography/Typography.js";
const HvBadge = (props) => {
  const {
    classes: classesProp,
    className,
    showCount = false,
    count = 0,
    maxCount = 99,
    label = null,
    icon = null,
    text = null,
    textVariant = void 0,
    ...others
  } = useDefaultProps("HvBadge", props);
  const {
    classes,
    cx
  } = useClasses(classesProp);
  const renderedCount = count > maxCount ? `${maxCount}+` : count;
  const renderedCountOrLabel = label || showCount && count > 0 && renderedCount || null;
  const Component = icon || text && /* @__PURE__ */ jsx(HvTypography, { variant: textVariant, children: text });
  return /* @__PURE__ */ jsxs("div", { className: cx(classes.root, className), ...others, children: [
    Component,
    /* @__PURE__ */ jsx("div", { className: Component ? classes.badgeContainer : void 0, children: /* @__PURE__ */ jsx("div", { className: cx(classes.badgePosition, {
      [classes.badge]: !!(count > 0 || renderedCountOrLabel),
      [classes.showCount]: !!(!label && renderedCountOrLabel),
      [classes.showLabel]: !!label,
      [classes.badgeIcon]: !!icon,
      [classes.badgeOneDigit]: String(renderedCountOrLabel).length === 1
    }), children: renderedCountOrLabel }) })
  ] });
};
export {
  HvBadge,
  staticClasses as badgeClasses
};
//# sourceMappingURL=Badge.js.map
