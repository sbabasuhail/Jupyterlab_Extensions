import { jsx } from "@emotion/react/jsx-runtime";
import { useState } from "react";
import { useClasses } from "./Select.styles.js";
import { HvListItem } from "../ListContainer/ListItem/ListItem.js";
import { HvBaseDropdown } from "../BaseDropdown/BaseDropdown.js";
import { HvPanel } from "../Panel/Panel.js";
import { HvSelectionList } from "../SelectionList/SelectionList.js";
const Option = ({
  ...props
}) => /* @__PURE__ */ jsx(HvListItem, { ...props });
const HvSelect = ({
  className,
  classes: classesProp,
  onChange,
  disabled,
  value,
  children,
  ...others
}) => {
  const {
    classes
  } = useClasses(classesProp);
  const [open, setOpen] = useState(false);
  const handleSelect = (evt, val) => {
    onChange == null ? void 0 : onChange(evt, val);
    setOpen(false);
  };
  const handleToggle = (_evt, s) => {
    setOpen(s);
  };
  const setFocusToContent = (containerRef) => {
    const listItems = containerRef != null ? [...containerRef.getElementsByTagName("li")] : [];
    listItems.every((listItem) => {
      if (listItem.tabIndex >= 0) {
        listItem.focus();
        return false;
      }
      return true;
    });
  };
  return /* @__PURE__ */ jsx(HvBaseDropdown, { className, classes: {
    selection: classes.selection,
    header: classes.header,
    headerOpen: classes.headerOpen
  }, expanded: open, onToggle: handleToggle, onContainerCreation: setFocusToContent, placeholder: value, disabled, variableWidth: true, ...others, children: /* @__PURE__ */ jsx(HvPanel, { children: /* @__PURE__ */ jsx(HvSelectionList, { value, onChange: handleSelect, children }) }) });
};
const HvSelect$1 = HvSelect;
export {
  Option,
  HvSelect$1 as default
};
//# sourceMappingURL=Select.js.map
