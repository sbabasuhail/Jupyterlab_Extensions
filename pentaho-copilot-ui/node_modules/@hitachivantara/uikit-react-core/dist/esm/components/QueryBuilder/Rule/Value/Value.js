import { jsx } from "@emotion/react/jsx-runtime";
import { useContext, memo } from "react";
import { QueryBuilderContext } from "../../Context.js";
import { TextValue } from "./TextValue/TextValue.js";
import { DateTimeValue } from "./DateTimeValue/DateTimeValue.js";
import { NumericValue } from "./NumericValue/NumericValue.js";
import { BooleanValue } from "./BooleanValue/BooleanValue.js";
const Value = ({
  id,
  attribute,
  operator,
  value: valueProp
}) => {
  const context = useContext(QueryBuilderContext);
  const {
    attributes,
    initialTouched
  } = context;
  const value = attribute && attributes ? {
    ...attributes[attribute]
  } : {
    type: null
  };
  const {
    type
  } = value;
  switch (type) {
    case "boolean": {
      return /* @__PURE__ */ jsx(BooleanValue, { id, value: !!valueProp });
    }
    case "numeric": {
      return /* @__PURE__ */ jsx(NumericValue, { id, operator, value: valueProp, initialTouched });
    }
    case "dateandtime": {
      return /* @__PURE__ */ jsx(DateTimeValue, { id, operator, value: valueProp, initialTouched });
    }
    case "text":
    case "textarea":
    default: {
      return /* @__PURE__ */ jsx(TextValue, { id, value: valueProp, initialTouched });
    }
  }
};
memo(Value);
export {
  Value
};
//# sourceMappingURL=Value.js.map
