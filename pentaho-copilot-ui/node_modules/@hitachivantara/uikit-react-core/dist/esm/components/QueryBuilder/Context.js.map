{"version":3,"file":"Context.js","sources":["../../../../src/components/QueryBuilder/Context.tsx"],"sourcesContent":["import { createContext } from \"react\";\nimport {\n  AskAction,\n  Attribute,\n  QueryAction,\n  QueryBuilderLabels,\n  QueryCombinator,\n  QueryOperator,\n} from \"./types\";\n\nexport const defaultOperators = {\n  numeric: [\n    {\n      operator: \"greaterThan\",\n      label: \"Greater than (>)\",\n      combinators: [\"and\"],\n    },\n    {\n      operator: \"lessThan\",\n      label: \"Less than (<)\",\n      combinators: [\"and\"],\n    },\n    {\n      operator: \"equalsTo\",\n      label: \"Equal to (=)\",\n      combinators: [\"and\", \"or\"],\n    },\n    {\n      operator: \"greaterThanEq\",\n      label: \"Greater than or equal to (>=)\",\n      combinators: [\"and\"],\n    },\n    {\n      operator: \"lessThanEq\",\n      label: \"Less than or equal to (<=)\",\n      combinators: [\"and\"],\n    },\n    {\n      operator: \"notEqual\",\n      label: \"Not equal to (!=)\",\n      combinators: [\"and\"],\n    },\n    {\n      operator: \"range\",\n      label: \"Range\",\n      combinators: [\"and\"],\n    },\n  ],\n  text: [\n    {\n      operator: \"equals\",\n      label: \"Equals\",\n      combinators: [\"and\", \"or\"],\n    },\n    {\n      operator: \"equalsIgnoreCase\",\n      label: \"Equals Ignore Case\",\n      combinators: [\"and\", \"or\"],\n    },\n    {\n      operator: \"Contains\",\n      label: \"Contains\",\n      combinators: [\"and\", \"or\"],\n    },\n    {\n      operator: \"StartsWith\",\n      label: \"A string begins with\",\n      combinators: [\"and\", \"or\"],\n    },\n    {\n      operator: \"EndsWith\",\n      label: \"A string ends with\",\n      combinators: [\"and\", \"or\"],\n    },\n    {\n      operator: \"IsNotEmpty\",\n      label: \"Is Not empty\",\n      combinators: [\"and\"],\n    },\n    {\n      operator: \"IsNot\",\n      label: \"Is Not\",\n      combinators: [\"and\"],\n    },\n    {\n      operator: \"Empty\",\n      label: \"Empty\",\n      combinators: [\"and\"],\n    },\n  ],\n  textarea: [\n    {\n      operator: \"equals\",\n      label: \"Equals\",\n      combinators: [\"and\", \"or\"],\n    },\n    {\n      operator: \"equalsIgnoreCase\",\n      label: \"Equals Ignore Case\",\n      combinators: [\"and\", \"or\"],\n    },\n    {\n      operator: \"Contains\",\n      label: \"Contains\",\n      combinators: [\"and\", \"or\"],\n    },\n    {\n      operator: \"StartsWith\",\n      label: \"A string begins with\",\n      combinators: [\"and\", \"or\"],\n    },\n    {\n      operator: \"EndsWith\",\n      label: \"A string ends with\",\n      combinators: [\"and\", \"or\"],\n    },\n    {\n      operator: \"IsNotEmpty\",\n      label: \"Is Not empty\",\n      combinators: [\"and\"],\n    },\n    {\n      operator: \"IsNot\",\n      label: \"Is Not\",\n      combinators: [\"and\"],\n    },\n    {\n      operator: \"Empty\",\n      label: \"Empty\",\n      combinators: [\"and\"],\n    },\n  ],\n  boolean: [\n    {\n      operator: \"equalsTo\",\n      label: \"=\",\n      combinators: [\"and\", \"or\"],\n    },\n  ],\n  dateandtime: [\n    {\n      operator: \"greaterThan\",\n      label: \"Greater than\",\n      combinators: [\"and\"],\n    },\n    {\n      operator: \"lessThan\",\n      label: \"Less than\",\n      combinators: [\"and\"],\n    },\n    {\n      operator: \"equalsTo\",\n      label: \"Equal to\",\n      combinators: [\"and\", \"or\"],\n    },\n    {\n      operator: \"greaterThanEq\",\n      label: \"Greater than or equal to\",\n      combinators: [\"and\"],\n    },\n    {\n      operator: \"lessThanEq\",\n      label: \"Less than or equal to\",\n      combinators: [\"and\"],\n    },\n    {\n      operator: \"notEqual\",\n      label: \"Not equal to\",\n      combinators: [\"and\"],\n    },\n    {\n      operator: \"range\",\n      label: \"Range\",\n      combinators: [\"and\"],\n    },\n  ],\n};\n\nexport const defaultCombinators = [\n  { operand: \"and\", label: \"AND\" },\n  { operand: \"or\", label: \"OR\" },\n];\n\nexport const defaultLabels = {\n  query: {\n    delete: {\n      ariaLabel: \"Reset query\",\n      tooltip: \"Reset query\",\n      dialogTitle: \"Remove all conditions?\",\n      dialogMessage:\n        \"Are you sure you want to remove all the conditions? They will be removed permanently.\",\n      dialogConfirm: \"Yes\",\n      dialogCancel: \"No\",\n      dialogCloseTooltip: \"Close\",\n    },\n  },\n  rule: {\n    attribute: {\n      label: \"Attribute\",\n      placeholder: \"Select attribute...\",\n      exists: \"Attribute already exists.\",\n    },\n    operator: {\n      label: \"Operator\",\n      placeholder: \"Select operator...\",\n    },\n    value: {\n      distance: {\n        label: \"Value\",\n        connectorText: \"radius miles from\",\n        button: \"Select location\",\n        validation: {\n          required: \"The value is required.\",\n          invalid: \"Value must be a positive number.\",\n        },\n      },\n      text: {\n        label: \"Value\",\n        placeholder: \"Enter value...\",\n        validation: {\n          required: \"The value is required.\",\n        },\n      },\n      boolean: {\n        label: \"Value\",\n        placeholder: \"Enter value\",\n        options: {\n          true: \"True\",\n          false: \"False\",\n        },\n      },\n      numeric: {\n        label: \"Value\",\n        placeholder: \"Enter value\",\n        validation: {\n          required: \"The value is required.\",\n          invalid: \"Value must be a number.\",\n          equal: \"Cannot be equal.\",\n          greaterThan: \"Needs to be greater.\",\n        },\n        range: {\n          leftLabel: \"From\",\n          rightLabel: \"To\",\n        },\n      },\n      datetime: {\n        dateLabel: \"Date\",\n        datePlaceholder: \"Select Date\",\n        timeLabel: \"Time\",\n        timePlaceholder: \"Select Time\",\n        startDateLabel: \"Start Date\",\n        startDatePlaceholder: \"Select Start Date\",\n        startTimeLabel: \"Start Time\",\n        startTimePlaceholder: \"Select Start Time\",\n        endDateLabel: \"End Date\",\n        endDatePlaceholder: \"Select End Date\",\n        endTimeLabel: \"End Time\",\n        endTimePlaceholder: \"Select End Time\",\n        validation: {\n          required: \"The value is required.\",\n          invalidInterval:\n            \"End date and time must be after start date and time.\",\n        },\n      },\n    },\n    delete: {\n      ariaLabel: \"Remove condition\",\n      tooltip: \"Remove condition\",\n      dialogTitle: \"Remove condition?\",\n      dialogMessage:\n        \"Are you sure you want to remove the condition? It will be removed permanently.\",\n      dialogConfirm: \"Yes\",\n      dialogCancel: \"No\",\n      dialogCloseTooltip: \"Close\",\n    },\n  },\n  group: {\n    delete: {\n      ariaLabel: \"Remove group\",\n      tooltip: \"Remove group\",\n      dialogTitle: \"Remove group?\",\n      dialogMessage:\n        \"Are you sure you want to remove the group? It will be removed permanently.\",\n      dialogConfirm: \"Yes\",\n      dialogCancel: \"No\",\n      dialogCloseTooltip: \"Close\",\n    },\n    reset: {\n      ariaLabel: \"Change operator\",\n      tooltip: \"Change operator query\",\n      dialogTitle: \"Change conditional operator?\",\n      dialogMessage:\n        \"Do you want to change conditional operator? You won't be able to undo this operation. Conditions and/or groups will be removed.\",\n      dialogConfirm: \"Yes\",\n      dialogCancel: \"No\",\n      dialogCloseTooltip: \"Close\",\n    },\n    addRule: {\n      label: \"Add condition\",\n    },\n    addGroup: {\n      label: \"Add group\",\n    },\n  },\n  empty: {\n    title: \"No conditions created yet\",\n    createCondition: \"Create a condition\",\n    createGroup: \"condition group\",\n    spacer: \" or a \",\n  },\n};\n\ninterface QueryBuilderContextValue {\n  dispatchAction: React.Dispatch<QueryAction>;\n  askAction: React.Dispatch<React.SetStateAction<AskAction | undefined>>;\n  selectLocation?: React.Dispatch<unknown>;\n  attributes?: Record<string, Attribute>;\n  operators: Record<string, QueryOperator[]>;\n  combinators: QueryCombinator[];\n  maxDepth: number;\n  labels: QueryBuilderLabels;\n  initialTouched: boolean;\n  readOnly: boolean;\n}\n\nexport const QueryBuilderContext = createContext<QueryBuilderContextValue>({\n  dispatchAction: () => ({}),\n  askAction: () => ({}),\n  selectLocation: () => ({}),\n  attributes: {},\n  operators: defaultOperators,\n  combinators: defaultCombinators,\n  maxDepth: 1,\n  labels: defaultLabels,\n  initialTouched: false,\n  readOnly: false,\n});\n"],"names":["defaultOperators","numeric","operator","label","combinators","text","textarea","boolean","dateandtime","defaultCombinators","operand","defaultLabels","query","delete","ariaLabel","tooltip","dialogTitle","dialogMessage","dialogConfirm","dialogCancel","dialogCloseTooltip","rule","attribute","placeholder","exists","value","distance","connectorText","button","validation","required","invalid","options","true","false","equal","greaterThan","range","leftLabel","rightLabel","datetime","dateLabel","datePlaceholder","timeLabel","timePlaceholder","startDateLabel","startDatePlaceholder","startTimeLabel","startTimePlaceholder","endDateLabel","endDatePlaceholder","endTimeLabel","endTimePlaceholder","invalidInterval","group","reset","addRule","addGroup","empty","title","createCondition","createGroup","spacer","QueryBuilderContext","createContext","dispatchAction","askAction","selectLocation","attributes","operators","maxDepth","labels","initialTouched","readOnly"],"mappings":"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"}