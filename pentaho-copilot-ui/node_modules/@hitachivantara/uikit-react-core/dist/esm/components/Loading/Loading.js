import { jsxs, jsx } from "@emotion/react/jsx-runtime";
import { getColor } from "@hitachivantara/uikit-styles";
import range from "lodash/range";
import { useDefaultProps } from "../../hooks/useDefaultProps.js";
import { useClasses } from "./Loading.styles.js";
import { staticClasses } from "./Loading.styles.js";
import { HvTypography } from "../Typography/Typography.js";
const HvLoading = (props) => {
  const {
    color,
    hidden,
    small,
    label,
    classes: classesProp,
    className,
    ...others
  } = useDefaultProps("HvLoading", props);
  const {
    classes,
    cx
  } = useClasses(classesProp);
  const size = small ? "small" : "regular";
  const colorVariant = color ? "Color" : "";
  const variant = `${size}${colorVariant}`;
  const inline = {
    backgroundColor: getColor(color, small ? "secondary" : "brand")
  };
  return /* @__PURE__ */ jsxs("div", { hidden: !!hidden, className: cx(classes.root, {
    [classes.hidden]: hidden
  }, className), ...others, children: [
    /* @__PURE__ */ jsx("div", { className: classes.barContainer, children: range(0, 3).map((e) => /* @__PURE__ */ jsx("div", { style: inline, className: cx(classes.loadingBar, classes[variant]) }, e)) }),
    label && /* @__PURE__ */ jsx(HvTypography, { variant: "caption1", className: classes.label, children: label })
  ] });
};
export {
  HvLoading,
  staticClasses as loadingClasses
};
//# sourceMappingURL=Loading.js.map
