import { jsx } from "@emotion/react/jsx-runtime";
import { useContext } from "react";
import { setId } from "../../../utils/setId.js";
import { wrapperTooltip } from "../../../utils/wrapperTooltip.js";
import { HvFilterGroupContext } from "../FilterGroupContext.js";
import { useClasses } from "./LeftPanel.styles.js";
import { staticClasses } from "./LeftPanel.styles.js";
import { HvFilterGroupCounter } from "../Counter/Counter.js";
import { HvPanel } from "../../Panel/Panel.js";
import { HvListContainer } from "../../ListContainer/ListContainer.js";
import { HvListItem } from "../../ListContainer/ListItem/ListItem.js";
const HvFilterGroupLeftPanel = ({
  id,
  className,
  emptyElement,
  classes: classesProp
}) => {
  const {
    classes,
    cx
  } = useClasses(classesProp);
  const {
    filterOptions,
    activeGroup,
    setActiveGroup
  } = useContext(HvFilterGroupContext);
  return /* @__PURE__ */ jsx(HvPanel, { id: setId(id, "leftPanel"), className, children: filterOptions.length > 0 ? /* @__PURE__ */ jsx(HvListContainer, { id: setId(id, "leftPanel-list"), condensed: true, interactive: true, children: filterOptions.map((group, index) => {
    const ItemText = wrapperTooltip(true, group.name, group.name);
    return /* @__PURE__ */ jsx(HvListItem, { id: group.id, className: cx(classes.listItem), onClick: () => setActiveGroup(index), selected: filterOptions[activeGroup].id === group.id, endAdornment: /* @__PURE__ */ jsx(HvFilterGroupCounter, { id: group.id }), children: /* @__PURE__ */ jsx(ItemText, {}) }, group.name);
  }) }) : emptyElement });
};
export {
  HvFilterGroupLeftPanel,
  staticClasses as filterGroupLeftPanelClasses
};
//# sourceMappingURL=LeftPanel.js.map
