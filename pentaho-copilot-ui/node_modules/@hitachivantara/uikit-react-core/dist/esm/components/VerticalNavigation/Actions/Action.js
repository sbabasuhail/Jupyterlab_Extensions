import { jsxs } from "@emotion/react/jsx-runtime";
import { useContext, useCallback } from "react";
import { isKey } from "../../../utils/keyboardUtils.js";
import { setId } from "../../../utils/setId.js";
import { VerticalNavigationContext } from "../VerticalNavigationContext.js";
import { useClasses } from "./Action.styles.js";
import { staticClasses } from "./Action.styles.js";
import { HvTypography } from "../../Typography/Typography.js";
const HvVerticalNavigationAction = ({
  className,
  classes: classesProp,
  id,
  label = "",
  icon,
  onClick,
  ...others
}) => {
  const {
    isOpen
  } = useContext(VerticalNavigationContext);
  const {
    classes,
    cx
  } = useClasses(classesProp);
  const handleKeyDown = useCallback((event) => {
    if (onClick == null || !isKey(event, "Enter") && !isKey(event, "Space")) {
      return;
    }
    onClick(event);
  }, [onClick]);
  return /* @__PURE__ */ jsxs(HvTypography, { id: setId(id, "button"), component: "div", role: "button", className: cx(classes.action, {
    [classes.noIcon]: !icon,
    [classes.minimized]: !isOpen
  }, className), tabIndex: 0, ...!isOpen && {
    "aria-label": label
  }, onKeyDown: handleKeyDown, onClick, ...others, children: [
    icon,
    isOpen && label
  ] });
};
export {
  HvVerticalNavigationAction,
  staticClasses as actionClasses
};
//# sourceMappingURL=Action.js.map
