import { jsx, jsxs } from "@emotion/react/jsx-runtime";
import { Forwards } from "@hitachivantara/uikit-react-icons";
import { useContext } from "react";
import { VerticalNavigationContext } from "../../VerticalNavigationContext.js";
import { StyledIconsContainer, SpacerDiv } from "./IconWrapper.styles.js";
import { TooltipWrapper } from "../TooltipWrapper/TooltipWrapper.js";
import { HvAvatar } from "../../../Avatar/Avatar.js";
const IconWrapper = ({
  icon,
  label,
  hasChildren,
  showAvatar,
  isOpen,
  disableTooltip
}) => {
  const {
    hasAnyChildWithData
  } = useContext(VerticalNavigationContext);
  return /* @__PURE__ */ jsx(TooltipWrapper, { showTooltip: !hasChildren && !isOpen && !disableTooltip, label, children: /* @__PURE__ */ jsxs(StyledIconsContainer, { hasAnyChildWithData, children: [
    showAvatar ? /* @__PURE__ */ jsx(HvAvatar, { variant: "square", size: "xs", backgroundColor: "secondary_80", style: {
      fontSize: "15px"
    }, children: label.substring(0, 1) }) : icon,
    hasChildren && !isOpen ? /* @__PURE__ */ jsx(Forwards, { iconSize: "XS" }) : hasAnyChildWithData && !isOpen && /* @__PURE__ */ jsx(SpacerDiv, {})
  ] }) });
};
export {
  IconWrapper
};
//# sourceMappingURL=IconWrapper.js.map
