import { jsx } from "@emotion/react/jsx-runtime";
import { DropRightXS } from "@hitachivantara/uikit-react-icons";
import { useClasses } from "./NavigationSlider.styles.js";
import { staticClasses } from "./NavigationSlider.styles.js";
import { HvButton } from "../../Button/Button.js";
import { HvListContainer } from "../../ListContainer/ListContainer.js";
import { HvListItem } from "../../ListContainer/ListItem/ListItem.js";
import { HvOverflowTooltip } from "../../OverflowTooltip/OverflowTooltip.js";
const HvVerticalNavigationSlider = ({
  id,
  classes: classesProp,
  data,
  selected,
  onNavigateToTarget,
  onNavigateToChild,
  forwardButtonAriaLabel = "Navigate to submenu"
}) => {
  const {
    classes
  } = useClasses(classesProp);
  return /* @__PURE__ */ jsx(HvListContainer, { interactive: true, id, children: data && data.map((item) => /* @__PURE__ */ jsx(HvListItem, { classes: {
    root: classes.root,
    selected: classes.listItemSelected,
    focus: classes.listItemFocus
  }, onClick: (event) => {
    onNavigateToTarget == null ? void 0 : onNavigateToTarget(event, item);
  }, "aria-label": item.label, "aria-current": selected === item.id ? item.href ? "page" : true : void 0, selected: selected === item.id, startAdornment: item.icon ? /* @__PURE__ */ jsx("div", { children: item.icon }) : void 0, endAdornment: item.data && item.data.length > 0 ? /* @__PURE__ */ jsx(HvButton, { icon: true, onClick: (event) => {
    onNavigateToChild == null ? void 0 : onNavigateToChild(event, item);
  }, "aria-label": forwardButtonAriaLabel, children: /* @__PURE__ */ jsx(DropRightXS, {}) }) : void 0, children: /* @__PURE__ */ jsx(HvOverflowTooltip, { data: item.label }) }, item.id)) });
};
export {
  HvVerticalNavigationSlider,
  staticClasses as verticalNavigationSliderClasses
};
//# sourceMappingURL=NavigationSlider.js.map
