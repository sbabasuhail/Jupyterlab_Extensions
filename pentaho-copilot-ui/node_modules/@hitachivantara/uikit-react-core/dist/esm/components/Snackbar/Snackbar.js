import { jsx } from "@emotion/react/jsx-runtime";
import Slide from "@mui/material/Slide";
import { Snackbar } from "@mui/material";
import capitalize from "lodash/capitalize";
import { setId } from "../../utils/setId.js";
import { useClasses } from "./Snackbar.styles.js";
import { staticClasses } from "./Snackbar.styles.js";
import { HvSnackbarContent } from "./SnackbarContent/SnackbarContent.js";
const transLeft = (props) => /* @__PURE__ */ jsx(Slide, { ...props, direction: "left" });
const transRight = (props) => /* @__PURE__ */ jsx(Slide, { ...props, direction: "right" });
const transUp = (props) => /* @__PURE__ */ jsx(Slide, { ...props, direction: "up" });
const transDown = (props) => /* @__PURE__ */ jsx(Slide, { ...props, direction: "down" });
const snackBarDirComponent = (direction) => {
  switch (direction) {
    case "right":
      return transRight;
    case "up":
      return transUp;
    case "down":
      return transDown;
    case "left":
    default:
      return transLeft;
  }
};
const HvSnackbar = ({
  classes: classesProp,
  className,
  id,
  open = false,
  onClose,
  label = "",
  anchorOrigin = {
    vertical: "top",
    horizontal: "right"
  },
  autoHideDuration = 5e3,
  variant = "default",
  showIcon = false,
  customIcon = null,
  action = null,
  actionCallback,
  transitionDuration = 300,
  transitionDirection = "left",
  offset = 60,
  snackbarContentProps,
  ...others
}) => {
  const {
    classes
  } = useClasses(classesProp);
  const anchorOriginOffset = {
    anchorOriginTop: {
      top: `${offset}px`
    },
    anchorOriginBottom: {
      bottom: `${offset}px`
    }
  };
  return /* @__PURE__ */ jsx(Snackbar, { style: anchorOriginOffset[`anchorOrigin${capitalize(anchorOrigin.vertical)}`], classes, className, id, anchorOrigin, open, onClose, autoHideDuration, transitionDuration, TransitionComponent: snackBarDirComponent(transitionDirection), ...others, children: /* @__PURE__ */ jsx(HvSnackbarContent, { id: setId(id, "content"), label, variant, customIcon, showIcon, action, actionCallback, ...snackbarContentProps }) });
};
export {
  HvSnackbar,
  staticClasses as snackbarClasses
};
//# sourceMappingURL=Snackbar.js.map
