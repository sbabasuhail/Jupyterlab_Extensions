import { jsx } from "@emotion/react/jsx-runtime";
import { forwardRef, useCallback, useMemo } from "react";
import { SnackbarContent, useSnackbar, SnackbarProvider } from "notistack";
import { clsx } from "clsx";
import { css } from "@emotion/css";
import { useClasses } from "./SnackbarProvider.styles.js";
import { staticClasses } from "./SnackbarProvider.styles.js";
import { HvSnackbarContent } from "../SnackbarContent/SnackbarContent.js";
function _EMOTION_STRINGIFIED_CSS_ERROR__() {
  return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
}
const HvNotistackSnackMessage = forwardRef((props, ref) => {
  const {
    id,
    message,
    variant = "success",
    snackbarContentProps
  } = props;
  return /* @__PURE__ */ jsx(SnackbarContent, { ref, children: /* @__PURE__ */ jsx(HvSnackbarContent, { id, variant, showIcon: true, label: message, role: "none", ...snackbarContentProps }) });
});
const useHvSnackbar = () => {
  const {
    enqueueSnackbar: enqueueNotistackSnackbar,
    closeSnackbar
  } = useSnackbar();
  const enqueueSnackbar = useCallback((message, options = {}) => {
    const {
      id,
      variant = "success",
      snackbarContentProps,
      className,
      ...otherOptions
    } = options;
    return enqueueNotistackSnackbar(/* @__PURE__ */ jsx(HvNotistackSnackMessage, { id, message, variant, snackbarContentProps }), {
      ...otherOptions,
      className: clsx(className)
    });
  }, [enqueueNotistackSnackbar]);
  return useMemo(() => ({
    enqueueSnackbar,
    closeSnackbar
  }), [enqueueSnackbar, closeSnackbar]);
};
const HvSnackbarProvider = ({
  children,
  notistackClassesOverride,
  maxSnack = 5,
  autoHideDuration = 5e3,
  anchorOrigin = {
    vertical: "top",
    horizontal: "right"
  },
  classes: classesProp,
  className,
  ...others
}) => {
  const {
    classes,
    cx
  } = useClasses(classesProp);
  const notistackClasses = {
    containerRoot: /* @__PURE__ */ css(process.env.NODE_ENV === "production" ? {
      name: "146ko5x",
      styles: "pointer-events:all;& > div > div{padding:0 !important;transition:all 0s ease 0s !important;}"
    } : {
      name: "tg900f-containerRoot",
      styles: "pointer-events:all;& > div > div{padding:0 !important;transition:all 0s ease 0s !important;};label:containerRoot;",
      map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2h2LXVpa2l0LXJlYWN0L2h2LXVpa2l0LXJlYWN0L3BhY2thZ2VzL2NvcmUvc3JjL2NvbXBvbmVudHMvU25hY2tiYXIvU25hY2tiYXJQcm92aWRlci9TbmFja2JhclByb3ZpZGVyLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnSW1CIiwiZmlsZSI6Ii9ob21lL3J1bm5lci93b3JrL2h2LXVpa2l0LXJlYWN0L2h2LXVpa2l0LXJlYWN0L3BhY2thZ2VzL2NvcmUvc3JjL2NvbXBvbmVudHMvU25hY2tiYXIvU25hY2tiYXJQcm92aWRlci9TbmFja2JhclByb3ZpZGVyLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZvcndhcmRSZWYsIFJlYWN0Tm9kZSwgdXNlQ2FsbGJhY2ssIHVzZU1lbW8gfSBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IHtcbiAgQ29tYmluZWRDbGFzc0tleSxcbiAgT3B0aW9uc09iamVjdCxcbiAgU25hY2tiYXJDb250ZW50LFxuICBTbmFja2JhclByb3ZpZGVyLFxuICBTbmFja2JhclByb3ZpZGVyUHJvcHMsXG4gIHVzZVNuYWNrYmFyLFxufSBmcm9tIFwibm90aXN0YWNrXCI7XG5cbmltcG9ydCB7IGNsc3ggfSBmcm9tIFwiY2xzeFwiO1xuXG5pbXBvcnQgeyBTbmFja2Jhck9yaWdpbiB9IGZyb20gXCJAbXVpL21hdGVyaWFsL1NuYWNrYmFyXCI7XG5pbXBvcnQgeyBDbGFzc05hbWVNYXAgfSBmcm9tIFwiQG11aS9tYXRlcmlhbFwiO1xuXG5pbXBvcnQgeyBjc3MgfSBmcm9tIFwiQGVtb3Rpb24vY3NzXCI7XG5cbmltcG9ydCB7IEV4dHJhY3ROYW1lcyB9IGZyb20gXCJAY29yZS91dGlscy9jbGFzc2VzXCI7XG5cbmltcG9ydCB7IEh2U25hY2tiYXJDb250ZW50LCBIdlNuYWNrYmFyQ29udGVudFByb3BzIH0gZnJvbSBcIi4uL1NuYWNrYmFyQ29udGVudFwiO1xuaW1wb3J0IHsgc3RhdGljQ2xhc3NlcywgdXNlQ2xhc3NlcyB9IGZyb20gXCIuL1NuYWNrYmFyUHJvdmlkZXIuc3R5bGVzXCI7XG5pbXBvcnQgeyBIdlNuYWNrYmFyVmFyaWFudCB9IGZyb20gXCIuLi90eXBlc1wiO1xuXG5leHBvcnQgeyBzdGF0aWNDbGFzc2VzIGFzIHNuYWNrYmFyUHJvdmlkZXJDbGFzc2VzIH07XG5cbmV4cG9ydCB0eXBlIEh2U25hY2tiYXJQcm92aWRlckNsYXNzZXMgPSBFeHRyYWN0TmFtZXM8dHlwZW9mIHVzZUNsYXNzZXM+O1xuXG5leHBvcnQgaW50ZXJmYWNlIEh2U25hY2tiYXJQcm92aWRlclByb3BzIHtcbiAgLyoqIFlvdXIgY29tcG9uZW50IHRyZWUuICovXG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGU7XG4gIC8qKiBNYXggdmlzaWJsZSBzbmFja2JhcnMuICovXG4gIG1heFNuYWNrPzogbnVtYmVyO1xuICAvKiogSG93IG11Y2ggdGltZSB0aGUgc25hY2tiYXIgcmVtYWlucyB2aXNpYmxlIGluIG1pbGxpc2Vjb25kcy4gKi9cbiAgYXV0b0hpZGVEdXJhdGlvbj86IG51bWJlcjtcbiAgLyoqIFdoZXJlIGlzIHRoZSBzbmFja2JhciBwbGFjZWQuICovXG4gIGFuY2hvck9yaWdpbj86IFNuYWNrYmFyT3JpZ2luO1xuICAvKiogQ2xhc3Mgb2JqZWN0IHVzZWQgdG8gb3ZlcnJpZGUgbm90aXN0YWNrIGNsYXNzZXMuICovXG4gIG5vdGlzdGFja0NsYXNzZXNPdmVycmlkZT86IFBhcnRpYWw8Q2xhc3NOYW1lTWFwPENvbWJpbmVkQ2xhc3NLZXk+PjtcbiAgLyoqIEEgSnNzIE9iamVjdCB1c2VkIHRvIG92ZXJyaWRlIG9yIGV4dGVuZCB0aGUgc3R5bGVzIGFwcGxpZWQgdG8gdGhlIGNvbXBvbmVudC4gKi9cbiAgY2xhc3Nlcz86IEh2U25hY2tiYXJQcm92aWRlckNsYXNzZXM7XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBIdk5vdGlzdGFja1NuYWNrTWVzc2FnZVByb3BzIGV4dGVuZHMgT3B0aW9uc09iamVjdCB7XG4gIC8qKiBJZCB0byBiZSBhcHBsaWVkIHRvIHRoZSByb290IG5vZGUuICovXG4gIGlkPzogc3RyaW5nO1xuICAvKiogQ2xhc3NuYW1lIHRvIGFwcGx5IG9uIHRoZSByb290IG5vZGUgKi9cbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xuICAvKiogWW91ciBjb21wb25lbnQgdHJlZS4gKi9cbiAgbWVzc2FnZT86IFJlYWN0Tm9kZTtcbiAgLyoqIFZhcmlhbnQgb2YgdGhlIHNuYWNrYmFyLiAqL1xuICB2YXJpYW50PzogSHZTbmFja2JhclZhcmlhbnQ7XG4gIC8qKiBFeHRyYSB2YWx1ZXMgdG8gcGFzcyB0byB0aGUgc25hY2tiYXIuICovXG4gIHNuYWNrYmFyQ29udGVudFByb3BzPzogSHZTbmFja2JhckNvbnRlbnRQcm9wcztcbn1cblxuY29uc3QgSHZOb3Rpc3RhY2tTbmFja01lc3NhZ2UgPSBmb3J3YXJkUmVmPFxuICBIVE1MRGl2RWxlbWVudCxcbiAgSHZOb3Rpc3RhY2tTbmFja01lc3NhZ2VQcm9wc1xuPigocHJvcHMsIHJlZikgPT4ge1xuICBjb25zdCB7IGlkLCBtZXNzYWdlLCB2YXJpYW50ID0gXCJzdWNjZXNzXCIsIHNuYWNrYmFyQ29udGVudFByb3BzIH0gPSBwcm9wcztcbiAgcmV0dXJuIChcbiAgICA8U25hY2tiYXJDb250ZW50IHJlZj17cmVmfT5cbiAgICAgIDxIdlNuYWNrYmFyQ29udGVudFxuICAgICAgICBpZD17aWR9XG4gICAgICAgIHZhcmlhbnQ9e3ZhcmlhbnR9XG4gICAgICAgIHNob3dJY29uXG4gICAgICAgIGxhYmVsPXttZXNzYWdlfVxuICAgICAgICByb2xlPVwibm9uZVwiXG4gICAgICAgIHsuLi5zbmFja2JhckNvbnRlbnRQcm9wc31cbiAgICAgIC8+XG4gICAgPC9TbmFja2JhckNvbnRlbnQ+XG4gICk7XG59KTtcblxuLy8gV2Ugb3ZlcnJpZGUgbm90aXN0YWNrIGhvb2sgdG8gYmUgYWJsZSB0byBjdXN0b21pemUgdGhlIHNuYWNrYmFyIHRoYXQgc2hvdWxkIGJlIGNhbGxlZC5cbmV4cG9ydCBjb25zdCB1c2VIdlNuYWNrYmFyID0gKCkgPT4ge1xuICBjb25zdCB7IGVucXVldWVTbmFja2JhcjogZW5xdWV1ZU5vdGlzdGFja1NuYWNrYmFyLCBjbG9zZVNuYWNrYmFyIH0gPVxuICAgIHVzZVNuYWNrYmFyKCk7XG5cbiAgY29uc3QgZW5xdWV1ZVNuYWNrYmFyID0gdXNlQ2FsbGJhY2soXG4gICAgKG1lc3NhZ2U6IFJlYWN0Tm9kZSwgb3B0aW9uczogSHZOb3Rpc3RhY2tTbmFja01lc3NhZ2VQcm9wcyA9IHt9KSA9PiB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGlkLFxuICAgICAgICB2YXJpYW50ID0gXCJzdWNjZXNzXCIsXG4gICAgICAgIHNuYWNrYmFyQ29udGVudFByb3BzLFxuICAgICAgICBjbGFzc05hbWUsXG4gICAgICAgIC4uLm90aGVyT3B0aW9uc1xuICAgICAgfSA9IG9wdGlvbnM7XG5cbiAgICAgIHJldHVybiBlbnF1ZXVlTm90aXN0YWNrU25hY2tiYXIoXG4gICAgICAgIDxIdk5vdGlzdGFja1NuYWNrTWVzc2FnZVxuICAgICAgICAgIGlkPXtpZH1cbiAgICAgICAgICBtZXNzYWdlPXttZXNzYWdlfVxuICAgICAgICAgIHZhcmlhbnQ9e3ZhcmlhbnR9XG4gICAgICAgICAgc25hY2tiYXJDb250ZW50UHJvcHM9e3NuYWNrYmFyQ29udGVudFByb3BzfVxuICAgICAgICAvPixcbiAgICAgICAgeyAuLi5vdGhlck9wdGlvbnMsIGNsYXNzTmFtZTogY2xzeChjbGFzc05hbWUpIH1cbiAgICAgICk7XG4gICAgfSxcbiAgICBbZW5xdWV1ZU5vdGlzdGFja1NuYWNrYmFyXVxuICApO1xuICByZXR1cm4gdXNlTWVtbyhcbiAgICAoKSA9PiAoe1xuICAgICAgZW5xdWV1ZVNuYWNrYmFyLFxuICAgICAgY2xvc2VTbmFja2JhcixcbiAgICB9KSxcbiAgICBbZW5xdWV1ZVNuYWNrYmFyLCBjbG9zZVNuYWNrYmFyXVxuICApO1xufTtcblxuZXhwb3J0IGNvbnN0IEh2U25hY2tiYXJQcm92aWRlciA9ICh7XG4gIGNoaWxkcmVuLFxuICBub3Rpc3RhY2tDbGFzc2VzT3ZlcnJpZGUsXG4gIG1heFNuYWNrID0gNSxcbiAgYXV0b0hpZGVEdXJhdGlvbiA9IDUwMDAsXG4gIGFuY2hvck9yaWdpbiA9IHtcbiAgICB2ZXJ0aWNhbDogXCJ0b3BcIixcbiAgICBob3Jpem9udGFsOiBcInJpZ2h0XCIsXG4gIH0sXG4gIGNsYXNzZXM6IGNsYXNzZXNQcm9wLFxuICBjbGFzc05hbWUsXG4gIC4uLm90aGVyc1xufTogSHZTbmFja2JhclByb3ZpZGVyUHJvcHMpID0+IHtcbiAgY29uc3QgeyBjbGFzc2VzLCBjeCB9ID0gdXNlQ2xhc3NlcyhjbGFzc2VzUHJvcCk7XG5cbiAgY29uc3Qgbm90aXN0YWNrQ2xhc3NlczogU25hY2tiYXJQcm92aWRlclByb3BzW1wiY2xhc3Nlc1wiXSA9IHtcbiAgICBjb250YWluZXJSb290OiBjc3Moe1xuICAgICAgcG9pbnRlckV2ZW50czogXCJhbGxcIixcbiAgICAgIFwiJiA+IGRpdiA+IGRpdlwiOiB7XG4gICAgICAgIC8vIE92ZXJyaWRlcyBub3Rpc3RhY2sgZXh0cmEgcGFkZGluZ1xuICAgICAgICBwYWRkaW5nOiBcIjAgIWltcG9ydGFudFwiLFxuICAgICAgICB0cmFuc2l0aW9uOiBcImFsbCAwcyBlYXNlIDBzICFpbXBvcnRhbnRcIixcbiAgICAgIH0sXG4gICAgfSksXG4gICAgLi4ubm90aXN0YWNrQ2xhc3Nlc092ZXJyaWRlLFxuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPFNuYWNrYmFyUHJvdmlkZXJcbiAgICAgIGNsYXNzZXM9e25vdGlzdGFja0NsYXNzZXN9XG4gICAgICBtYXhTbmFjaz17bWF4U25hY2t9XG4gICAgICBhdXRvSGlkZUR1cmF0aW9uPXthdXRvSGlkZUR1cmF0aW9ufVxuICAgICAgYW5jaG9yT3JpZ2luPXthbmNob3JPcmlnaW4gYXMgU25hY2tiYXJPcmlnaW59XG4gICAgICBjbGFzc05hbWU9e2N4KGNsYXNzZXMuc25hY2tJdGVtUm9vdCwgY2xhc3NOYW1lKX1cbiAgICAgIHsuLi5vdGhlcnN9XG4gICAgPlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvU25hY2tiYXJQcm92aWRlcj5cbiAgKTtcbn07XG4iXX0= */",
      toString: _EMOTION_STRINGIFIED_CSS_ERROR__
    }),
    ...notistackClassesOverride
  };
  return /* @__PURE__ */ jsx(SnackbarProvider, { classes: notistackClasses, maxSnack, autoHideDuration, anchorOrigin, className: cx(classes.snackItemRoot, className), ...others, children });
};
export {
  HvSnackbarProvider,
  staticClasses as snackbarProviderClasses,
  useHvSnackbar
};
//# sourceMappingURL=SnackbarProvider.js.map
