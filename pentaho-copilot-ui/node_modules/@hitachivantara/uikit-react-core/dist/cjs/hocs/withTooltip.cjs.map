{"version":3,"file":"withTooltip.cjs","sources":["../../../src/hocs/withTooltip.tsx"],"sourcesContent":["import { useState } from \"react\";\n\nimport { HvTypography } from \"@core/components/Typography\";\nimport {\n  HvTooltip,\n  HvTooltipPlacementType,\n  HvTooltipProps,\n} from \"@core/components/Tooltip\";\nimport { HvBaseProps } from \"@core/types/generic\";\n\nconst styles: { truncate: React.CSSProperties } = {\n  truncate: {\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\",\n  },\n};\n\nexport const withTooltip =\n  (\n    Component: React.FunctionComponent,\n    // eslint-disable-next-line @typescript-eslint/default-param-last\n    label = \"\",\n    placement: HvTooltipPlacementType,\n    hideTooltip?: (event: React.MouseEvent<HTMLDivElement>) => boolean,\n    tooltipProps?: Partial<HvTooltipProps>,\n    tooltipContainerProps?: HvBaseProps\n  ) =>\n  (props) => {\n    const [isHoverDisabled, setIsHoverDisabled] = useState<boolean | undefined>(\n      false\n    );\n    const [open, setOpen] = useState<boolean>(false);\n\n    const title = <HvTypography>{label}</HvTypography>;\n\n    const handleMouseEnter = (event: React.MouseEvent<HTMLDivElement>) => {\n      const isHidden = hideTooltip?.(event);\n      setIsHoverDisabled(isHidden);\n      setOpen(!isHidden);\n    };\n\n    const handleMouseLeave = () => {\n      setIsHoverDisabled(false);\n      setOpen(false);\n    };\n\n    return (\n      <HvTooltip\n        style={{ ...styles.truncate }}\n        disableHoverListener={isHoverDisabled}\n        disableFocusListener\n        disableTouchListener\n        title={title}\n        open={open}\n        placement={placement}\n        {...tooltipProps}\n      >\n        <div\n          {...tooltipContainerProps}\n          onMouseEnter={handleMouseEnter}\n          onMouseLeave={handleMouseLeave}\n        >\n          <Component {...props} />\n        </div>\n      </HvTooltip>\n    );\n  };\n"],"names":["styles","truncate","overflow","textOverflow","whiteSpace","withTooltip","Component","label","placement","hideTooltip","tooltipProps","tooltipContainerProps","props","isHoverDisabled","setIsHoverDisabled","useState","open","setOpen","title","jsx","HvTypography","handleMouseEnter","event","isHidden","handleMouseLeave","HvTooltip"],"mappings":";;;;;;AAUA,MAAMA,SAA4C;AAAA,EAChDC,UAAU;AAAA,IACRC,UAAU;AAAA,IACVC,cAAc;AAAA,IACdC,YAAY;AAAA,EACd;AACF;AAEaC,MAAAA,cACXA,CACEC,WAEAC,QAAQ,IACRC,WACAC,aACAC,cACAC,0BAEDC,CAAU,UAAA;AACT,QAAM,CAACC,iBAAiBC,kBAAkB,IAAIC,eAC5C,KACF;AACA,QAAM,CAACC,MAAMC,OAAO,IAAIF,eAAkB,KAAK;AAEzCG,QAAAA,QAASC,2BAAAA,IAAAC,WAAAA,cAAA,EAAcb,UAAM,MAAA,CAAA;AAE7Bc,QAAAA,mBAAmBA,CAACC,UAA4C;AAC9DC,UAAAA,WAAWd,2CAAca;AAC/BR,uBAAmBS,QAAQ;AAC3BN,YAAQ,CAACM,QAAQ;AAAA,EAAA;AAGnB,QAAMC,mBAAmBA,MAAM;AAC7BV,uBAAmB,KAAK;AACxBG,YAAQ,KAAK;AAAA,EAAA;AAIb,SAAAE,2BAAA,IAACM,qBACC,OAAO;AAAA,IAAE,GAAGzB,OAAOC;AAAAA,EAAS,GAC5B,sBAAsBY,iBACtB,sBAAoB,MACpB,sBAAoB,MACpB,OACA,MACA,WACA,GAAIH,cAEJ,yCAAC,OACKC,EAAAA,GAAAA,uBACJ,cAAcU,kBACd,cAAcG,kBAEd,UAAAL,+BAAC,WAAU,EAAA,GAAIP,MAAM,CAAA,EACvB,CAAA,EACF,CAAA;AAEJ;;"}