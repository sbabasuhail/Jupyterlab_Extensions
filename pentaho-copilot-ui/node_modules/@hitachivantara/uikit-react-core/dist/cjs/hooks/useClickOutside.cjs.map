{"version":3,"file":"useClickOutside.cjs","sources":["../../../src/hooks/useClickOutside.ts"],"sourcesContent":["import { useEffect, RefObject } from \"react\";\n\nexport type HvClickOutsideEvent = MouseEvent | KeyboardEvent | TouchEvent;\n\nexport const useClickOutside = <T extends HTMLElement = HTMLElement>(\n  ref: RefObject<T>,\n  handler: (event: HvClickOutsideEvent) => void\n) => {\n  useEffect(() => {\n    const listener = (event: HvClickOutsideEvent) => {\n      const el = ref?.current;\n      const isKeyUp = event.type === \"keyup\";\n      const isEscape = (event as KeyboardEvent).key === \"Escape\";\n\n      if (!el || el.contains((event?.target as Node) || null)) {\n        return {};\n      }\n\n      return isKeyUp ? (isEscape ? handler(event) : null) : handler(event);\n    };\n\n    document.addEventListener(\"click\", listener);\n    document.addEventListener(\"touchstart\", listener);\n    document.addEventListener(\"keyup\", listener);\n\n    return () => {\n      document.removeEventListener(\"click\", listener);\n      document.removeEventListener(\"touchstart\", listener);\n      document.removeEventListener(\"keyup\", listener);\n    };\n  }, [ref, handler]);\n};\n"],"names":["useClickOutside","ref","handler","useEffect","listener","event","el","current","isKeyUp","type","isEscape","key","contains","target","addEventListener","removeEventListener"],"mappings":";;;AAIaA,MAAAA,kBAAkB,CAC7BC,KACAC,YACG;AACHC,QAAAA,UAAU,MAAM;AACRC,UAAAA,WAAWA,CAACC,UAA+B;AAC/C,YAAMC,KAAKL,2BAAKM;AACVC,YAAAA,UAAUH,MAAMI,SAAS;AACzBC,YAAAA,WAAYL,MAAwBM,QAAQ;AAElD,UAAI,CAACL,MAAMA,GAAGM,UAAUP,+BAAOQ,WAAmB,IAAI,GAAG;AACvD,eAAO;MACT;AAEA,aAAOL,UAAWE,WAAWR,QAAQG,KAAK,IAAI,OAAQH,QAAQG,KAAK;AAAA,IAAA;AAG5DS,aAAAA,iBAAiB,SAASV,QAAQ;AAClCU,aAAAA,iBAAiB,cAAcV,QAAQ;AACvCU,aAAAA,iBAAiB,SAASV,QAAQ;AAE3C,WAAO,MAAM;AACFW,eAAAA,oBAAoB,SAASX,QAAQ;AACrCW,eAAAA,oBAAoB,cAAcX,QAAQ;AAC1CW,eAAAA,oBAAoB,SAASX,QAAQ;AAAA,IAAA;AAAA,EAChD,GACC,CAACH,KAAKC,OAAO,CAAC;AACnB;;"}