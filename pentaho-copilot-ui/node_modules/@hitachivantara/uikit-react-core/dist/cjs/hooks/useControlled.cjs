"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const React = require("react");
const useControlled = (controlledProp, initialState) => {
  const {
    current: isControlled
  } = React.useRef(controlledProp !== void 0);
  const [valueState, setValue] = React.useState(initialState);
  const value = isControlled ? controlledProp : valueState;
  if (process.env.NODE_ENV !== "production" && isControlled !== (controlledProp !== void 0)) {
    console.error([`A component is changing the ${isControlled ? "" : "un"}controlled state to be ${isControlled ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", "Decide between using a controlled or uncontrolled element for the lifetime of the component.", "The nature of the state is determined during the first render, it's considered controlled if the value is not `undefined`."].join("\n"));
  }
  const setValueIfUncontrolled = React.useCallback((newValue) => {
    if (!isControlled) {
      setValue(newValue);
    }
  }, [isControlled]);
  return [value, setValueIfUncontrolled];
};
exports.useControlled = useControlled;
//# sourceMappingURL=useControlled.cjs.map
