"use strict";
Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
const SELECTORS = 'input, button, select, textarea, a[href], [tabindex]:not([tabindex="-1"])';
const getFocusableList = (node) => node && node.querySelectorAll(SELECTORS) || [];
const getPrevNextFocus = (nodeId) => {
  const nodes = getFocusableList(document);
  const nbNodes = nodes.length;
  let index = 0;
  for (; index < nbNodes; index += 1) {
    if (nodes[index].id === nodeId) {
      break;
    }
  }
  return {
    nextFocus: nodes[index + 1 > nbNodes - 1 ? 0 : index + 1],
    prevFocus: nodes[index - 1 < 0 ? nbNodes - 1 : index - 1]
  };
};
const getFirstAndLastFocus = (node) => {
  const focusableList = getFocusableList(node);
  return {
    first: focusableList[0] || null,
    last: focusableList[focusableList.length - 1] || null
  };
};
exports.default = getPrevNextFocus;
exports.getFirstAndLastFocus = getFirstAndLastFocus;
exports.getFocusableList = getFocusableList;
exports.getPrevNextFocus = getPrevNextFocus;
//# sourceMappingURL=focusableElementFinder.cjs.map
