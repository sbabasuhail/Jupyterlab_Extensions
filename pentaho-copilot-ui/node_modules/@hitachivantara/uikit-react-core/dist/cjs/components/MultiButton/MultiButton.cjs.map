{"version":3,"file":"MultiButton.cjs","sources":["../../../../src/components/MultiButton/MultiButton.tsx"],"sourcesContent":["import { useDefaultProps } from \"@core/hooks/useDefaultProps\";\nimport React, { cloneElement } from \"react\";\nimport { HvButtonVariant } from \"@core/components/Button\";\nimport { HvBaseProps } from \"@core/types/generic\";\nimport { ExtractNames } from \"@core/utils/classes\";\nimport { staticClasses, useClasses } from \"./MultiButton.styles\";\n\nexport { staticClasses as multiButtonClasses };\nexport type HvMultiButtonClasses = ExtractNames<typeof useClasses>;\n\nexport interface HvMultiButtonProps extends HvBaseProps {\n  /** If all the buttons are disabled. */\n  disabled?: boolean;\n  /** If the MultiButton is to be displayed vertically. */\n  vertical?: boolean;\n  /** Category of button to use */\n  variant?: HvButtonVariant;\n  /** A Jss Object used to override or extend the styles applied to the component. */\n  classes?: HvMultiButtonClasses;\n}\n\nexport const HvMultiButton = (props: HvMultiButtonProps) => {\n  const {\n    className,\n    children,\n    classes: classesProp,\n    disabled = false,\n    vertical = false,\n    variant = \"secondarySubtle\",\n    ...others\n  } = useDefaultProps(\"HvMultiButton\", props);\n  const { classes, cx } = useClasses(classesProp);\n\n  return (\n    <div\n      className={cx(\n        classes.root,\n        {\n          [classes.vertical]: vertical,\n        },\n        className\n      )}\n      {...others}\n    >\n      {React.Children.map(children, (child) => {\n        if (React.isValidElement(child)) {\n          const childIsSelected = !!child.props.selected;\n\n          return cloneElement(child as React.ReactElement, {\n            variant,\n            disabled: disabled || child.props.disabled,\n            className: cx(child.props.className, classes.button, {\n              [classes.selected]: childIsSelected,\n            }),\n            \"aria-pressed\": childIsSelected,\n          });\n        }\n      })}\n    </div>\n  );\n};\n"],"names":["HvMultiButton","props","className","children","classes","classesProp","disabled","vertical","variant","others","useDefaultProps","cx","useClasses","jsx","root","React","Children","map","child","isValidElement","childIsSelected","selected","cloneElement","button"],"mappings":";;;;;;;;AAqBaA,MAAAA,gBAAgBA,CAACC,UAA8B;AACpD,QAAA;AAAA,IACJC;AAAAA,IACAC;AAAAA,IACAC,SAASC;AAAAA,IACTC,WAAW;AAAA,IACXC,WAAW;AAAA,IACXC,UAAU;AAAA,IACV,GAAGC;AAAAA,EAAAA,IACDC,gBAAgB,gBAAA,iBAAiBT,KAAK;AACpC,QAAA;AAAA,IAAEG;AAAAA,IAASO;AAAAA,EAAAA,IAAOC,mBAAAA,WAAWP,WAAW;AAE9C,SACGQ,2BAAAA,IAAA,OAAA,EACC,WAAWF,GACTP,QAAQU,MACR;AAAA,IACE,CAACV,QAAQG,QAAQ,GAAGA;AAAAA,EAAAA,GAEtBL,SACF,GACA,GAAIO,QAEHM,UAAMC,uBAAAA,SAASC,IAAId,UAAWe,CAAU,UAAA;AACnCH,QAAAA,eAAAA,QAAMI,eAAeD,KAAK,GAAG;AAC/B,YAAME,kBAAkB,CAAC,CAACF,MAAMjB,MAAMoB;AAEtC,aAAOC,MAAAA,aAAaJ,OAA6B;AAAA,QAC/CV;AAAAA,QACAF,UAAUA,YAAYY,MAAMjB,MAAMK;AAAAA,QAClCJ,WAAWS,GAAGO,MAAMjB,MAAMC,WAAWE,QAAQmB,QAAQ;AAAA,UACnD,CAACnB,QAAQiB,QAAQ,GAAGD;AAAAA,QAAAA,CACrB;AAAA,QACD,gBAAgBA;AAAAA,MAAAA,CACjB;AAAA,IACH;AAAA,EACD,CAAA,EACH,CAAA;AAEJ;;;"}