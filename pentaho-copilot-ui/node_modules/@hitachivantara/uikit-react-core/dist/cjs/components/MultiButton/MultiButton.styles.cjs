"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const uikitStyles = require("@hitachivantara/uikit-styles");
const classes = require("../../utils/classes.cjs");
const {
  staticClasses,
  useClasses
} = classes.createClasses("HvMultiButton", {
  root: {
    display: "flex",
    height: 32,
    alignItems: "center",
    transition: "none",
    background: uikitStyles.theme.colors.atmo2,
    position: "relative",
    zIndex: 0,
    // prevent the focus ring to be hidden by sibling hover background
    "&>.HvIsFocusVisible": {
      zIndex: 5
    },
    "& button$button": {
      height: 32,
      width: "100%",
      minWidth: 32,
      maxWidth: 200,
      padding: 0,
      transition: "none",
      flex: "1 0 0px",
      borderTop: `solid 1px ${uikitStyles.theme.colors.atmo4}`,
      borderBottom: `solid 1px ${uikitStyles.theme.colors.atmo4}`,
      borderLeft: "solid 1px transparent",
      borderRight: "solid 1px transparent",
      borderRadius: 0,
      ...uikitStyles.theme.typography.body,
      "&:active": {
        backgroundColor: `${uikitStyles.theme.colors.atmo3}`
      },
      "&:disabled": {
        color: uikitStyles.theme.colors.secondary_60,
        borderTop: `solid 1px ${uikitStyles.theme.colors.atmo4}`,
        borderBottom: `solid 1px ${uikitStyles.theme.colors.atmo4}`,
        "&:hover": {
          borderTop: `solid 1px ${uikitStyles.theme.colors.atmo4}`,
          borderBottom: `solid 1px ${uikitStyles.theme.colors.atmo4}`,
          borderLeft: "solid 1px transparent",
          borderRight: "solid 1px transparent"
        }
      },
      "&:first-of-type": {
        borderLeft: `solid 1px ${uikitStyles.theme.colors.atmo4}`,
        borderTopLeftRadius: uikitStyles.theme.radii.base,
        borderBottomLeftRadius: uikitStyles.theme.radii.base
      },
      "&:last-of-type": {
        borderRight: `solid 1px ${uikitStyles.theme.colors.atmo4}`,
        borderTopRightRadius: uikitStyles.theme.radii.base,
        borderBottomRightRadius: uikitStyles.theme.radii.base,
        "&:disabled:hover": {
          borderRight: `solid 1px ${uikitStyles.theme.colors.atmo4} !important`
        }
      },
      "&:not(:first-of-type)": {
        marginLeft: "-1px"
      },
      "&$selected": {
        "&:hover": {
          "&:not(:disabled)": {
            border: `solid 1px ${uikitStyles.theme.colors.secondary}`
          },
          "&:disabled": {
            border: `solid 1px ${uikitStyles.theme.colors.atmo4}`
          }
        },
        "&:disabled": {
          zIndex: 1,
          color: uikitStyles.theme.colors.secondary_60,
          background: uikitStyles.theme.colors.atmo1,
          border: `solid 1px ${uikitStyles.theme.colors.atmo4}`
        }
      }
    },
    "& button$button$selected": {
      background: uikitStyles.theme.colors.atmo1,
      height: 34,
      ...uikitStyles.theme.typography.label,
      borderRadius: uikitStyles.theme.radii.base,
      border: `solid 1px ${uikitStyles.theme.colors.secondary}`,
      zIndex: 2,
      "&:hover": {
        background: uikitStyles.theme.colors.atmo3
      },
      "&:first-of-type, &:last-of-type": {
        border: `solid 1px ${uikitStyles.theme.colors.secondary}`
      },
      // prevent the focus ring to be hidden by sibling hover background
      // even when selected
      "&.HvIsFocusVisible": {
        zIndex: 5
      }
    }
  },
  button: {},
  selected: {},
  // vertical button display Styling
  vertical: {
    flexDirection: "column",
    height: "auto",
    btnSecondary: {
      flex: "1 1 20px"
    },
    "& button$button": {
      width: "100%",
      borderLeft: `solid 1px ${uikitStyles.theme.colors.atmo4}`,
      borderRight: `solid 1px ${uikitStyles.theme.colors.atmo4}`,
      borderTop: "solid 1px transparent",
      borderBottom: "solid 1px transparent",
      "&:disabled": {
        color: uikitStyles.theme.colors.secondary_60,
        borderLeft: `solid 1px ${uikitStyles.theme.colors.atmo4}`,
        borderRight: `solid 1px ${uikitStyles.theme.colors.atmo4}`,
        borderTop: "solid 1px transparent",
        borderBottom: "solid 1px transparent",
        "&:hover": {
          borderLeft: `solid 1px ${uikitStyles.theme.colors.atmo4}`,
          borderRight: `solid 1px ${uikitStyles.theme.colors.atmo4}`,
          borderTop: "solid 1px transparent",
          borderBottom: "solid 1px transparent"
        }
      },
      "&:first-of-type": {
        borderTop: `solid 1px ${uikitStyles.theme.colors.atmo4}`,
        borderTopLeftRadius: uikitStyles.theme.radii.base,
        borderTopRightRadius: uikitStyles.theme.radii.base
      },
      "&:last-of-type": {
        borderBottom: `solid 1px ${uikitStyles.theme.colors.atmo4}`,
        borderBottomLeftRadius: uikitStyles.theme.radii.base,
        borderBottomRightRadius: uikitStyles.theme.radii.base,
        "&:disabled:hover": {
          borderBottom: `solid 1px ${uikitStyles.theme.colors.atmo4} !important`
        }
      },
      "&:not(:first-of-type)": {
        marginLeft: 0,
        marginTop: -1
      },
      "&$selected": {
        height: 32,
        width: `calc(100% + 2px) !important`,
        background: uikitStyles.theme.colors.atmo1,
        ...uikitStyles.theme.typography.label,
        borderRadius: uikitStyles.theme.radii.base,
        border: `solid 1px ${uikitStyles.theme.colors.secondary}`,
        zIndex: 2,
        "&:hover, &:focus": {
          background: uikitStyles.theme.colors.atmo3
        },
        "&:disabled": {
          zIndex: 1,
          color: uikitStyles.theme.colors.secondary_60,
          background: uikitStyles.theme.colors.atmo1,
          border: `solid 1px ${uikitStyles.theme.colors.atmo4}`
        }
      }
    }
  }
});
exports.staticClasses = staticClasses;
exports.useClasses = useClasses;
//# sourceMappingURL=MultiButton.styles.cjs.map
