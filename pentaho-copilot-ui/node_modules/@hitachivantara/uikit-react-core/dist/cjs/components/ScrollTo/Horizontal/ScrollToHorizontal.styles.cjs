"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const uikitStyles = require("@hitachivantara/uikit-styles");
const classes = require("../../../utils/classes.cjs");
const name = "HvScrollToHorizontal";
const {
  staticClasses,
  useClasses
} = classes.createClasses(name, {
  root: {
    display: "flex",
    padding: "0 30px",
    listStyleType: "none",
    flexWrap: "wrap",
    backdropFilter: `blur(${uikitStyles.theme.scrollTo.backgroundColorBlur})`
  },
  positionSticky: {
    position: "sticky",
    zIndex: `calc(${uikitStyles.theme.zIndices.banner} - 2)`,
    top: 0,
    left: 0
  },
  positionFixed: {
    position: "fixed",
    zIndex: `calc(${uikitStyles.theme.zIndices.banner} - 2)`,
    top: 0,
    left: 0
  },
  notSelectedRoot: {
    display: uikitStyles.theme.scrollTo.horizontal.dotDisplay,
    justifyContent: "center",
    alignItems: "center",
    height: uikitStyles.theme.scrollTo.dotRootSize,
    width: uikitStyles.theme.scrollTo.dotRootSize,
    borderRadius: uikitStyles.theme.scrollTo.dotRootRadius
  },
  notSelected: {
    height: uikitStyles.theme.scrollTo.dotNotSelectedSize,
    width: uikitStyles.theme.scrollTo.dotNotSelectedSize,
    borderRadius: "50%",
    display: "inline-block",
    backgroundColor: uikitStyles.theme.scrollTo.dotNotSelectedColor
  },
  selected: {
    display: uikitStyles.theme.scrollTo.horizontal.dotDisplay,
    height: uikitStyles.theme.scrollTo.dotRootSize,
    width: uikitStyles.theme.scrollTo.dotRootSize
  }
});
exports.staticClasses = staticClasses;
exports.useClasses = useClasses;
//# sourceMappingURL=ScrollToHorizontal.styles.cjs.map
