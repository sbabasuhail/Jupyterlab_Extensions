"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const focusUtils = require("../../../../utils/focusUtils.cjs");
const uikitStyles = require("@hitachivantara/uikit-styles");
const classes = require("../../../../utils/classes.cjs");
const name = "HvVerticalScrollListItem";
const {
  staticClasses,
  useClasses
} = classes.createClasses(name, {
  root: {
    padding: "0",
    height: "32px",
    width: "32px",
    display: "flex",
    justifyContent: "center",
    alignItems: "center"
  },
  notSelected: {
    height: uikitStyles.theme.scrollTo.dotNotSelectedSize,
    width: uikitStyles.theme.scrollTo.dotNotSelectedSize,
    borderRadius: "50%",
    display: "inline-block",
    backgroundColor: uikitStyles.theme.scrollTo.dotNotSelectedColor
  },
  text: {
    height: uikitStyles.theme.scrollTo.dotRootSize,
    width: uikitStyles.theme.scrollTo.dotRootSize,
    display: "flex",
    justifyContent: "center",
    alignItems: "center"
  },
  button: {
    display: "flex",
    justifyContent: "center",
    alignItems: "center",
    height: uikitStyles.theme.scrollTo.dotRootSize,
    width: uikitStyles.theme.scrollTo.dotRootSize,
    borderRadius: uikitStyles.theme.scrollTo.dotRootRadius,
    cursor: "pointer",
    "&:hover": {
      backgroundColor: uikitStyles.theme.scrollTo.dotHoverBackgroundColor,
      "& $notSelected": {
        height: uikitStyles.theme.scrollTo.dotHoverSize,
        width: uikitStyles.theme.scrollTo.dotHoverSize,
        backgroundColor: uikitStyles.theme.scrollTo.dotHoverColor
      }
    },
    "&:focus": {
      outline: "none"
    },
    "&:focus-visible": {
      ...focusUtils.outlineStyles
    }
  }
});
exports.staticClasses = staticClasses;
exports.useClasses = useClasses;
//# sourceMappingURL=VerticalScrollListItem.styles.cjs.map
