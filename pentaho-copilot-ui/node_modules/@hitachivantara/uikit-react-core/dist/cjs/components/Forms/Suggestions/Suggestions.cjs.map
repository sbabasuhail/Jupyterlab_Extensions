{"version":3,"file":"Suggestions.cjs","sources":["../../../../../src/components/Forms/Suggestions/Suggestions.tsx"],"sourcesContent":["import React, {\n  forwardRef,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\n\nimport { useForkRef, Popper as MuiPopper } from \"@mui/material\";\n\nimport { HvBaseProps } from \"@core/types/generic\";\nimport { setId } from \"@core/utils/setId\";\nimport { HvListItem } from \"@core/components/ListContainer\";\nimport {\n  HvClickOutsideEvent,\n  useClickOutside,\n} from \"@core/hooks/useClickOutside\";\nimport { ExtractNames } from \"@core/utils/classes\";\nimport { HvSelectionList } from \"@core/components/SelectionList\";\n\nimport { staticClasses, useClasses } from \"./Suggestions.styles\";\nimport { HvFormElementContext } from \"../FormElement\";\n\nexport { staticClasses as suggestionsClasses };\n\nexport type HvSuggestionsClasses = ExtractNames<typeof useClasses>;\n\nexport interface HvSuggestion {\n  id?: string;\n  label: React.ReactNode;\n  value?: string;\n  disabled?: boolean;\n}\n\nexport interface HvSuggestionsProps extends HvBaseProps {\n  /** Whether suggestions is visible. */\n  expanded?: boolean;\n  /** The HTML element Suggestions attaches to. */\n  anchorEl?: HTMLElement | null;\n  /** Array of { id, label, ...others } values to display in the suggestion list */\n  suggestionValues?: HvSuggestion[] | null;\n  /** Function called when a suggestion is selected */\n  onSuggestionSelected?: (event: React.MouseEvent, value: HvSuggestion) => void;\n  /** Function called when suggestion list is closed */\n  onClose?: (event: HvClickOutsideEvent) => void;\n  /** A Jss Object used to override or extend the styles applied to the component. */\n  classes?: HvSuggestionsClasses;\n}\n\nexport const HvSuggestions = forwardRef((props: HvSuggestionsProps, extRef) => {\n  const {\n    id,\n    className,\n    classes: classesProp,\n    expanded = false,\n    anchorEl,\n    suggestionValues = [],\n    onClose,\n    onSuggestionSelected,\n    ...others\n  } = props;\n  const { classes, cx } = useClasses(classesProp);\n\n  const { elementId } = useContext(HvFormElementContext);\n  const localId = id ?? setId(elementId, \"suggestions\");\n\n  const ref = useRef<HTMLDivElement>(null);\n  const forkedRef = useForkRef(ref, extRef);\n\n  const [isOpen, setIsOpen] = useState(expanded);\n\n  useClickOutside(ref, (event) => {\n    setIsOpen(false);\n    onClose?.(event);\n  });\n\n  useEffect(() => {\n    setIsOpen(expanded);\n  }, [expanded]);\n\n  return (\n    <div\n      id={localId}\n      ref={forkedRef}\n      className={cx(classes.root, className)}\n      {...others}\n    >\n      <MuiPopper\n        open={isOpen}\n        disablePortal\n        anchorEl={anchorEl}\n        className={classes.popper}\n      >\n        <HvSelectionList\n          className={classes.list}\n          id={setId(localId, \"list\")}\n          onChange={onSuggestionSelected}\n        >\n          {suggestionValues?.map((item, i) => {\n            const itemKey = item.id || setId(\"item\", i);\n\n            return (\n              <HvListItem\n                key={itemKey}\n                value={item}\n                disabled={item.disabled || undefined}\n              >\n                {item.label}\n              </HvListItem>\n            );\n          })}\n        </HvSelectionList>\n      </MuiPopper>\n    </div>\n  );\n});\n"],"names":["HvSuggestions","forwardRef","props","extRef","id","className","classes","classesProp","expanded","anchorEl","suggestionValues","onClose","onSuggestionSelected","others","cx","useClasses","elementId","useContext","HvFormElementContext","localId","setId","ref","useRef","forkedRef","useForkRef","isOpen","setIsOpen","useState","useClickOutside","event","useEffect","root","MuiPopper","popper","jsx","HvSelectionList","list","map","item","i","itemKey","HvListItem","disabled","undefined","label"],"mappings":";;;;;;;;;;;AAiDO,MAAMA,gBAAgBC,MAAAA,WAAW,CAACC,OAA2BC,WAAW;AACvE,QAAA;AAAA,IACJC;AAAAA,IACAC;AAAAA,IACAC,SAASC;AAAAA,IACTC,WAAW;AAAA,IACXC;AAAAA,IACAC,mBAAmB,CAAE;AAAA,IACrBC;AAAAA,IACAC;AAAAA,IACA,GAAGC;AAAAA,EACDX,IAAAA;AACE,QAAA;AAAA,IAAEI;AAAAA,IAASQ;AAAAA,EAAAA,IAAOC,mBAAAA,WAAWR,WAAW;AAExC,QAAA;AAAA,IAAES;AAAAA,EAAAA,IAAcC,MAAAA,WAAWC,mBAAAA,oBAAoB;AACrD,QAAMC,UAAUf,MAAMgB,MAAMJ,MAAAA,WAAW,aAAa;AAE9CK,QAAAA,MAAMC,aAAuB,IAAI;AACjCC,QAAAA,YAAYC,SAAAA,WAAWH,KAAKlB,MAAM;AAExC,QAAM,CAACsB,QAAQC,SAAS,IAAIC,eAASnB,QAAQ;AAE7CoB,kCAAgBP,KAAMQ,CAAU,UAAA;AAC9BH,cAAU,KAAK;AACff,uCAAUkB;AAAAA,EAAK,CAChB;AAEDC,QAAAA,UAAU,MAAM;AACdJ,cAAUlB,QAAQ;AAAA,EAAA,GACjB,CAACA,QAAQ,CAAC;AAEb,wCACG,OACC,EAAA,IAAIW,SACJ,KAAKI,WACL,WAAWT,GAAGR,QAAQyB,MAAM1B,SAAS,GACrC,GAAIQ,QAEJ,yCAACmB,SACC,QAAA,EAAA,MAAMP,QACN,eAAa,MACb,UACA,WAAWnB,QAAQ2B,QAEnB,UAAAC,2BAAAA,IAACC,iCACC,WAAW7B,QAAQ8B,MACnB,IAAIhB,MAAAA,MAAMD,SAAS,MAAM,GACzB,UAAUP,sBAETF,+DAAkB2B,IAAI,CAACC,MAAMC,MAAM;AAClC,UAAMC,UAAUF,KAAKlC,MAAMgB,MAAAA,MAAM,QAAQmB,CAAC;AAGxC,WAAAL,2BAAAA,IAACO,SAAAA,YAEC,EAAA,OAAOH,MACP,UAAUA,KAAKI,YAAYC,QAE1BL,UAAKM,KAAAA,MAAAA,GAJDJ,OAKP;AAAA,EAAA,GAGN,CAAA,GACF,EACF,CAAA;AAEJ,CAAC;;;"}