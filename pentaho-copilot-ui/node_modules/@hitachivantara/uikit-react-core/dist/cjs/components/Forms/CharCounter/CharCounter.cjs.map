{"version":3,"file":"CharCounter.cjs","sources":["../../../../../src/components/Forms/CharCounter/CharCounter.tsx"],"sourcesContent":["import { useContext } from \"react\";\n\nimport { useDefaultProps } from \"@core/hooks/useDefaultProps\";\nimport { HvBaseProps } from \"@core/types/generic\";\nimport { setId } from \"@core/utils/setId\";\nimport { ExtractNames } from \"@core/utils/classes\";\nimport { HvTypography } from \"@core/components/Typography\";\n\nimport { staticClasses, useClasses } from \"./CharCounter.styles\";\nimport { HvFormElementContext } from \"../FormElement\";\n\nexport { staticClasses as charCounterClasses };\n\nexport type HvCharCounterClasses = ExtractNames<typeof useClasses>;\n\nexport interface HvCharCounterProps extends HvBaseProps {\n  /** The string that separates the current char quantity from the max quantity. */\n  separator?: string;\n  /** The maximum allowed length of the characters. */\n  maxCharQuantity: number;\n  /** The current char quantity to be rendered. */\n  currentCharQuantity?: number;\n  /** If `true` the counter is disabled. */\n  disabled?: boolean;\n  /** If `true` the info message won't have margins. */\n  disableGutter?: boolean;\n  /** A Jss Object used to override or extend the styles applied to the component. */\n  classes?: HvCharCounterClasses;\n}\n\n/**\n * Displays the capacity and current usage of a text input box (character count by default).\n *\n * Use the character counter when there is a character or word limit.\n * By itself it doesn't block the user from going above the limit.\n */\nexport const HvCharCounter = (props: HvCharCounterProps) => {\n  const {\n    separator = \"/\",\n    maxCharQuantity,\n    currentCharQuantity = 0,\n    classes: classesProp,\n    className,\n    id,\n    disabled,\n    disableGutter = false,\n    ...others\n  } = useDefaultProps(\"HvCharCounter\", props);\n\n  const { classes, cx } = useClasses(classesProp);\n\n  const { elementId, elementDisabled } = useContext(HvFormElementContext);\n  const localDisabled = disabled || elementDisabled;\n  const localId = id ?? setId(elementId, \"counter\");\n  const currentId = setId(localId, \"currentQuantity\");\n  const maxQuantityId = setId(localId, \"maxQuantity\");\n  const isOverloaded = currentCharQuantity > maxCharQuantity;\n\n  return (\n    <div\n      id={localId}\n      className={cx(\n        classes.root,\n        {\n          [classes.counterDisabled]: !!localDisabled,\n          [classes.gutter]: !disableGutter,\n        },\n        className\n      )}\n      aria-live=\"polite\"\n      aria-disabled={localDisabled}\n      {...others}\n    >\n      <HvTypography\n        id={currentId}\n        className={cx({\n          [classes.overloaded]: isOverloaded && !localDisabled,\n          [classes.counterDisabled]: !!localDisabled,\n        })}\n        variant=\"label\"\n        component=\"label\"\n      >\n        {currentCharQuantity}\n      </HvTypography>\n      <HvTypography\n        id={maxQuantityId}\n        className={cx({\n          [classes.overloaded]: isOverloaded && !localDisabled,\n          [classes.counterDisabled]: !!localDisabled,\n        })}\n        variant=\"body\"\n        component=\"label\"\n      >\n        {` ${separator} ${maxCharQuantity}`}\n      </HvTypography>\n    </div>\n  );\n};\n"],"names":["HvCharCounter","props","separator","maxCharQuantity","currentCharQuantity","classes","classesProp","className","id","disabled","disableGutter","others","useDefaultProps","cx","useClasses","elementId","elementDisabled","useContext","HvFormElementContext","localDisabled","localId","setId","currentId","maxQuantityId","isOverloaded","root","counterDisabled","gutter","jsx","HvTypography","overloaded"],"mappings":";;;;;;;;;AAoCaA,MAAAA,gBAAgBA,CAACC,UAA8B;AACpD,QAAA;AAAA,IACJC,YAAY;AAAA,IACZC;AAAAA,IACAC,sBAAsB;AAAA,IACtBC,SAASC;AAAAA,IACTC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC,gBAAgB;AAAA,IAChB,GAAGC;AAAAA,EAAAA,IACDC,gBAAgB,gBAAA,iBAAiBX,KAAK;AAEpC,QAAA;AAAA,IAAEI;AAAAA,IAASQ;AAAAA,EAAAA,IAAOC,mBAAAA,WAAWR,WAAW;AAExC,QAAA;AAAA,IAAES;AAAAA,IAAWC;AAAAA,EAAAA,IAAoBC,MAAAA,WAAWC,mBAAAA,oBAAoB;AACtE,QAAMC,gBAAgBV,YAAYO;AAClC,QAAMI,UAAUZ,MAAMa,MAAMN,MAAAA,WAAW,SAAS;AAC1CO,QAAAA,YAAYD,MAAAA,MAAMD,SAAS,iBAAiB;AAC5CG,QAAAA,gBAAgBF,MAAAA,MAAMD,SAAS,aAAa;AAClD,QAAMI,eAAepB,sBAAsBD;AAE3C,yCACG,OACC,EAAA,IAAIiB,SACJ,WAAWP,GACTR,QAAQoB,MACR;AAAA,IACE,CAACpB,QAAQqB,eAAe,GAAG,CAAC,CAACP;AAAAA,IAC7B,CAACd,QAAQsB,MAAM,GAAG,CAACjB;AAAAA,EAAAA,GAErBH,SACF,GACA,aAAU,UACV,iBAAeY,eACf,GAAIR,QAEJ,UAAA;AAAA,IAAAiB,2BAAA,IAACC,WACC,cAAA,EAAA,IAAIP,WACJ,WAAWT,GAAG;AAAA,MACZ,CAACR,QAAQyB,UAAU,GAAGN,gBAAgB,CAACL;AAAAA,MACvC,CAACd,QAAQqB,eAAe,GAAG,CAAC,CAACP;AAAAA,IAAAA,CAC9B,GACD,SAAQ,SACR,WAAU,SAETf,UACH,qBAAA;AAAA,IACCwB,2BAAA,IAAAC,WAAA,cAAA,EACC,IAAIN,eACJ,WAAWV,GAAG;AAAA,MACZ,CAACR,QAAQyB,UAAU,GAAGN,gBAAgB,CAACL;AAAAA,MACvC,CAACd,QAAQqB,eAAe,GAAG,CAAC,CAACP;AAAAA,IAC9B,CAAA,GACD,SAAQ,QACR,WAAU,SAER,UAAGjB,IAAAA,SAAU,IAAGC,eAAgB,GACpC,CAAA;AAAA,EACF,EAAA,CAAA;AAEJ;;;"}