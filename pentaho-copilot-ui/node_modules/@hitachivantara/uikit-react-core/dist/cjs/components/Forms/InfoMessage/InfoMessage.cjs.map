{"version":3,"file":"InfoMessage.cjs","sources":["../../../../../src/components/Forms/InfoMessage/InfoMessage.tsx"],"sourcesContent":["import { useContext } from \"react\";\n\nimport { useDefaultProps } from \"@core/hooks/useDefaultProps\";\nimport { setId } from \"@core/utils/setId\";\nimport { ExtractNames } from \"@core/utils/classes\";\nimport { HvTypography, HvTypographyProps } from \"@core/components/Typography\";\n\nimport { staticClasses, useClasses } from \"./InfoMessage.styles\";\nimport { HvFormElementContext } from \"../FormElement\";\n\nexport { staticClasses as infoMessageClasses };\n\nexport type HvInfoMessageClasses = ExtractNames<typeof useClasses>;\n\nexport interface HvInfoMessageProps extends HvTypographyProps<\"label\"> {\n  /** If `true` the label is disabled. */\n  disabled?: boolean;\n  /** If `true` the info message won't have margins. */\n  disableGutter?: boolean;\n  /** A Jss Object used to override or extend the styles applied to the component. */\n  classes?: HvInfoMessageClasses;\n}\n\n/**\n * Provides the user with additional descriptive text for the form element.\n */\nexport const HvInfoMessage = (props: HvInfoMessageProps) => {\n  const {\n    id,\n    classes: classesProp,\n    className,\n    children,\n    disabled,\n    disableGutter = false,\n    ...others\n  } = useDefaultProps(\"HvInfoMessage\", props);\n\n  const { classes, cx } = useClasses(classesProp);\n\n  const { elementId, elementDisabled } = useContext(HvFormElementContext);\n  const localDisabled = disabled || elementDisabled;\n  const localId = id ?? setId(elementId, \"description\");\n\n  return (\n    <HvTypography\n      id={localId}\n      className={cx(\n        classes.root,\n        {\n          [classes.infoDisabled]: !!localDisabled,\n          [classes.gutter]: !disableGutter,\n        },\n        className\n      )}\n      variant=\"body\"\n      component=\"label\"\n      {...others}\n    >\n      {children}\n    </HvTypography>\n  );\n};\n"],"names":["HvInfoMessage","props","id","classes","classesProp","className","children","disabled","disableGutter","others","useDefaultProps","cx","useClasses","elementId","elementDisabled","useContext","HvFormElementContext","localDisabled","localId","setId","HvTypography","root","infoDisabled","gutter"],"mappings":";;;;;;;;;AA0BaA,MAAAA,gBAAgBA,CAACC,UAA8B;AACpD,QAAA;AAAA,IACJC;AAAAA,IACAC,SAASC;AAAAA,IACTC;AAAAA,IACAC;AAAAA,IACAC;AAAAA,IACAC,gBAAgB;AAAA,IAChB,GAAGC;AAAAA,EAAAA,IACDC,gBAAgB,gBAAA,iBAAiBT,KAAK;AAEpC,QAAA;AAAA,IAAEE;AAAAA,IAASQ;AAAAA,EAAAA,IAAOC,mBAAAA,WAAWR,WAAW;AAExC,QAAA;AAAA,IAAES;AAAAA,IAAWC;AAAAA,EAAAA,IAAoBC,MAAAA,WAAWC,mBAAAA,oBAAoB;AACtE,QAAMC,gBAAgBV,YAAYO;AAClC,QAAMI,UAAUhB,MAAMiB,MAAMN,MAAAA,WAAW,aAAa;AAEpD,wCACGO,WACC,cAAA,EAAA,IAAIF,SACJ,WAAWP,GACTR,QAAQkB,MACR;AAAA,IACE,CAAClB,QAAQmB,YAAY,GAAG,CAAC,CAACL;AAAAA,IAC1B,CAACd,QAAQoB,MAAM,GAAG,CAACf;AAAAA,EAAAA,GAErBH,SACF,GACA,SAAQ,QACR,WAAU,SACV,GAAII,QAEHH,SACH,CAAA;AAEJ;;;"}