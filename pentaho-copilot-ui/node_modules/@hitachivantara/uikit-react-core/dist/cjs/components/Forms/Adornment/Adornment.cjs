"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("@emotion/react/jsx-runtime");
const React = require("react");
const Adornment_styles = require("./Adornment.styles.cjs");
const FormElementDescriptorsContext = require("../FormElement/context/FormElementDescriptorsContext.cjs");
const FormElementContext = require("../FormElement/context/FormElementContext.cjs");
const noop = () => {
};
const HvAdornment = React.forwardRef(({
  id,
  classes: classesProp,
  className,
  icon,
  showWhen = void 0,
  onClick,
  isVisible = void 0,
  ...others
}, ref) => {
  var _a;
  const {
    classes,
    cx
  } = Adornment_styles.useClasses(classesProp);
  const {
    elementStatus = ""
  } = React.useContext(FormElementContext.HvFormElementContext);
  const {
    input
  } = React.useContext(FormElementDescriptorsContext.HvFormElementDescriptorsContext);
  const displayIcon = isVisible ?? (showWhen === void 0 || elementStatus === showWhen);
  const isClickable = !!onClick;
  return isClickable ? /* @__PURE__ */ jsxRuntime.jsx("button", { id, ref, type: "button", tabIndex: -1, "aria-controls": (_a = input == null ? void 0 : input[0]) == null ? void 0 : _a.id, className: cx(classes.root, classes.adornment, classes.adornmentButton, {
    [classes.hideIcon]: !displayIcon
  }, className), onClick, onMouseDown: (event) => event.preventDefault(), onKeyDown: noop, ...others, children: /* @__PURE__ */ jsxRuntime.jsx("div", { className: classes.icon, children: icon }) }) : /* @__PURE__ */ jsxRuntime.jsx("div", { id, ref, className: cx(classes.root, classes.adornment, classes.adornmentIcon, {
    [classes.hideIcon]: !displayIcon
  }, className), role: "presentation", ...others, children: /* @__PURE__ */ jsxRuntime.jsx("div", { className: classes.icon, children: icon }) });
});
exports.adornmentClasses = Adornment_styles.staticClasses;
exports.HvAdornment = HvAdornment;
//# sourceMappingURL=Adornment.cjs.map
