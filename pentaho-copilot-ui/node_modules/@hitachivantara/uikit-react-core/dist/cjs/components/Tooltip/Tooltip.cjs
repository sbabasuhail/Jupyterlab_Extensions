"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("@emotion/react/jsx-runtime");
const material = require("@mui/material");
const React = require("react");
const useTheme = require("../../hooks/useTheme.cjs");
const useDefaultProps = require("../../hooks/useDefaultProps.cjs");
const Tooltip_styles = require("./Tooltip.styles.cjs");
const HvTooltip = React.forwardRef((props, ref) => {
  const {
    className,
    classes: classesProp,
    open,
    enterDelay = 300,
    placement = "top",
    useSingle = true,
    children,
    title,
    TransitionComponent = material.Fade,
    TransitionProps = {
      timeout: 400,
      placement
    },
    containerId,
    ...others
  } = useDefaultProps.useDefaultProps("HvTooltip", props);
  const {
    rootId
  } = useTheme.useTheme();
  const {
    classes
  } = Tooltip_styles.useClasses(classesProp);
  return /* @__PURE__ */ jsxRuntime.jsx(material.Tooltip, { ref, open: open ?? void 0, enterDelay, placement, TransitionComponent, TransitionProps, className, classes: {
    tooltip: useSingle ? classes.tooltip : classes.tooltipMulti,
    popper: classes.popper
  }, title, PopperProps: {
    sx: Tooltip_styles.popperSx(useSingle),
    container: typeof window !== "undefined" ? document.getElementById(containerId || rootId || "") || document.body : void 0
  }, ...others, children });
});
exports.tooltipClasses = Tooltip_styles.staticClasses;
exports.HvTooltip = HvTooltip;
//# sourceMappingURL=Tooltip.cjs.map
