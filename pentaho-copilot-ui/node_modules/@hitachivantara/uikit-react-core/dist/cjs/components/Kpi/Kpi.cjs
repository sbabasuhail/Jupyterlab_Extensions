"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("@emotion/react/jsx-runtime");
const useDefaultProps = require("../../hooks/useDefaultProps.cjs");
const useLabels = require("../../hooks/useLabels.cjs");
const Kpi_styles = require("./Kpi.styles.cjs");
const Typography = require("../Typography/Typography.cjs");
const DEFAULT_LABELS = {
  title: "",
  indicator: void 0,
  unit: void 0,
  comparisonIndicatorInfo: void 0
};
const HvKpi = (props) => {
  const {
    trendIndicator = null,
    visualIndicator = null,
    visualComparison = null,
    indicatorUnitTextVariant = "title2",
    indicatorTextVariant = "title1",
    labels,
    classes: classesProp,
    className,
    ...others
  } = useDefaultProps.useDefaultProps("HvKpi", props);
  const {
    classes,
    cx
  } = Kpi_styles.useClasses(classesProp);
  const mergedLabels = useLabels.useLabels(DEFAULT_LABELS, labels);
  const InternalVisualComparison = typeof visualComparison === "string" ? Typography.HvTypography : "div";
  return /* @__PURE__ */ jsxRuntime.jsxs("div", { className: cx(classes.root, className), ...others, children: [
    /* @__PURE__ */ jsxRuntime.jsx("div", { children: /* @__PURE__ */ jsxRuntime.jsx(Typography.HvTypography, { variant: "label", children: mergedLabels == null ? void 0 : mergedLabels.title }) }),
    /* @__PURE__ */ jsxRuntime.jsxs("div", { className: classes.indicatorsContainer, children: [
      visualIndicator && /* @__PURE__ */ jsxRuntime.jsx("div", { className: cx(classes.visualIndicatorContainer, classes.spacingToTheRight), children: visualIndicator }),
      (mergedLabels == null ? void 0 : mergedLabels.indicator) && /* @__PURE__ */ jsxRuntime.jsx(Typography.HvTypography, { className: cx(classes.spacingToTheRight, classes.indicatorText), variant: indicatorTextVariant, children: mergedLabels.indicator }),
      (mergedLabels == null ? void 0 : mergedLabels.unit) && /* @__PURE__ */ jsxRuntime.jsx(Typography.HvTypography, { className: classes.indicatorUnit, variant: indicatorUnitTextVariant, children: mergedLabels.unit })
    ] }),
    visualComparison && /* @__PURE__ */ jsxRuntime.jsxs("div", { className: classes.comparisonComposition, children: [
      trendIndicator && /* @__PURE__ */ jsxRuntime.jsx("div", { className: cx(classes.trendLine, classes.spacingToTheRight), children: trendIndicator }),
      /* @__PURE__ */ jsxRuntime.jsxs("div", { children: [
        /* @__PURE__ */ jsxRuntime.jsx("div", { className: classes.comparisonContainer, children: /* @__PURE__ */ jsxRuntime.jsx(InternalVisualComparison, { className: cx(classes.comparisons, classes.spacingToTheRight), variant: "label", children: visualComparison }) }),
        /* @__PURE__ */ jsxRuntime.jsx("div", { className: classes.comparisonContainer, children: /* @__PURE__ */ jsxRuntime.jsx(Typography.HvTypography, { className: classes.comparisons, variant: "caption2", children: mergedLabels == null ? void 0 : mergedLabels.comparisonIndicatorInfo }) })
      ] })
    ] })
  ] });
};
exports.kpiClasses = Kpi_styles.staticClasses;
exports.HvKpi = HvKpi;
//# sourceMappingURL=Kpi.cjs.map
