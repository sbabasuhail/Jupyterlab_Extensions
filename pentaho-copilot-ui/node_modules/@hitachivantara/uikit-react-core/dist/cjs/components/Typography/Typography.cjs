"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("@emotion/react/jsx-runtime");
const React = require("react");
const useTheme = require("../../hooks/useTheme.cjs");
const useDefaultProps = require("../../hooks/useDefaultProps.cjs");
const utils = require("./utils.cjs");
const Typography_styles = require("./Typography.styles.cjs");
const HvTypographyMap = {
  display: "h1",
  title1: "h1",
  title2: "h2",
  title3: "h3",
  title4: "h4",
  body: "p",
  label: "span",
  caption1: "p",
  caption2: "p",
  // LEGACY
  "5xlTitle": "h1",
  "4xlTitle": "h1",
  xxlTitle: "h1",
  lTitle: "h2",
  sTitle: "h4",
  xxsTitle: "h6",
  sectionTitle: "p",
  placeholderText: "p",
  link: "p",
  disabledText: "p",
  selectedNavText: "p",
  vizTextDisabled: "p",
  xsInlineLink: "p"
};
const HvTypography = React.forwardRef((props, ref) => {
  const {
    className,
    component: ComponentProp,
    classes: classesProp,
    variant: variantProp = "body",
    link = false,
    disabled = false,
    noWrap = false,
    paragraph = false,
    ...others
  } = useDefaultProps.useDefaultProps("HvTypography", props);
  const {
    classes,
    cx
  } = Typography_styles.useClasses(classesProp);
  const {
    activeTheme
  } = useTheme.useTheme();
  const variant = utils.mapVariant(variantProp, activeTheme == null ? void 0 : activeTheme.name);
  const Component = ComponentProp || paragraph && "p" || HvTypographyMap[variant] || "span";
  return /* @__PURE__ */ jsxRuntime.jsx(Component, { ref, className: cx(classes.root, classes[variant], {
    [classes.isLink]: link,
    [classes.noWrap]: noWrap,
    [classes.disabled]: disabled
  }, className), ...others });
});
exports.typographyClasses = Typography_styles.staticClasses;
exports.HvTypography = HvTypography;
//# sourceMappingURL=Typography.cjs.map
