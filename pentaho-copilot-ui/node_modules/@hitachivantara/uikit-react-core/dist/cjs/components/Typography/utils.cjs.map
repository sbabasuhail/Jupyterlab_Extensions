{"version":3,"file":"utils.cjs","sources":["../../../../src/components/Typography/utils.ts"],"sourcesContent":["export const typographyVariants = [\n  \"display\",\n  \"title1\",\n  \"title2\",\n  \"title3\",\n  \"title4\",\n  \"body\",\n  \"label\",\n  \"caption1\",\n  \"caption2\",\n] as const;\n\nexport type HvTypographyVariants = (typeof typographyVariants)[number];\n\n/** @deprecated */\nexport type HvTypographyLegacyVariants =\n  | \"5xlTitle\"\n  | \"4xlTitle\"\n  | \"3xlTitle\"\n  | \"xxlTitle\"\n  | \"xlTitle\"\n  | \"lTitle\"\n  | \"mTitle\"\n  | \"sTitle\"\n  | \"xsTitle\"\n  | \"xxsTitle\"\n  | \"sectionTitle\"\n  | \"highlightText\"\n  | \"normalText\"\n  | \"placeholderText\"\n  | \"link\"\n  | \"disabledText\"\n  | \"selectedNavText\"\n  | \"vizText\"\n  | \"vizTextDisabled\"\n  | \"xsInlineLink\";\n\ntype Variant = HvTypographyVariants | HvTypographyLegacyVariants;\n\nconst mappableVariants = new Map<Variant, HvTypographyVariants>([\n  [\"3xlTitle\", \"display\"],\n  [\"xlTitle\", \"title1\"],\n  [\"mTitle\", \"title2\"],\n  [\"xsTitle\", \"title3\"],\n  [\"highlightText\", \"label\"],\n  [\"normalText\", \"body\"],\n  [\"vizText\", \"caption1\"],\n]);\n\nconst isLegacyVariant = (variant: string) => {\n  return [\n    \"5xlTitle\",\n    \"4xlTitle\",\n    \"3xlTitle\",\n    \"xxlTitle\",\n    \"xlTitle\",\n    \"lTitle\",\n    \"mTitle\",\n    \"sTitle\",\n    \"xsTitle\",\n    \"xxsTitle\",\n    \"sectionTitle\",\n    \"highlightText\",\n    \"normalText\",\n    \"placeholderText\",\n    \"link\",\n    \"disabledText\",\n    \"selectedNavText\",\n    \"vizText\",\n    \"vizTextDisabled\",\n    \"xsInlineLink\",\n  ].includes(variant);\n};\n\nexport const mapVariant = (variant: Variant, theme?: string) => {\n  const mappedVariant = mappableVariants.get(variant);\n\n  if (theme !== \"ds3\") {\n    if (mappedVariant) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `The typography variant ${variant} is deprecated. You should use ${mappedVariant} instead.`\n      );\n      return mappedVariant;\n    }\n    if (isLegacyVariant(variant)) {\n      // eslint-disable-next-line no-console\n      console.warn(`The typography variant ${variant} is deprecated.`);\n    }\n  }\n\n  return variant;\n};\n"],"names":["typographyVariants","mappableVariants","Map","isLegacyVariant","variant","includes","mapVariant","theme","mappedVariant","get","console","warn"],"mappings":";;AAAaA,MAAAA,qBAAqB,CAChC,WACA,UACA,UACA,UACA,UACA,QACA,SACA,YACA,UAAU;AA8BZ,MAAMC,mBAAmB,oBAAIC,IAAmC,CAC9D,CAAC,YAAY,SAAS,GACtB,CAAC,WAAW,QAAQ,GACpB,CAAC,UAAU,QAAQ,GACnB,CAAC,WAAW,QAAQ,GACpB,CAAC,iBAAiB,OAAO,GACzB,CAAC,cAAc,MAAM,GACrB,CAAC,WAAW,UAAU,CAAC,CACxB;AAED,MAAMC,kBAAkBA,CAACC,YAAoB;AACpC,SAAA,CACL,YACA,YACA,YACA,YACA,WACA,UACA,UACA,UACA,WACA,YACA,gBACA,iBACA,cACA,mBACA,QACA,gBACA,mBACA,WACA,mBACA,cAAc,EACdC,SAASD,OAAO;AACpB;AAEaE,MAAAA,aAAaA,CAACF,SAAkBG,UAAmB;AACxDC,QAAAA,gBAAgBP,iBAAiBQ,IAAIL,OAAO;AAElD,MAAIG,UAAU,OAAO;AACnB,QAAIC,eAAe;AAEjBE,cAAQC,KACL,0BAAyBP,OAAQ,kCAAiCI,aAAc,WACnF;AACOA,aAAAA;AAAAA,IACT;AACIL,QAAAA,gBAAgBC,OAAO,GAAG;AAEpBO,cAAAA,KAAM,0BAAyBP,OAAQ,iBAAgB;AAAA,IACjE;AAAA,EACF;AAEOA,SAAAA;AACT;;;"}