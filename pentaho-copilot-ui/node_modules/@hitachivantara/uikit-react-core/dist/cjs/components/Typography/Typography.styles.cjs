"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const uikitStyles = require("@hitachivantara/uikit-styles");
const classes = require("../../utils/classes.cjs");
const {
  useClasses,
  staticClasses
} = classes.createClasses("HvTypography", {
  root: {
    fontFamily: uikitStyles.theme.fontFamily.body
  },
  disabled: {
    color: uikitStyles.theme.colors.secondary_60
  },
  isLink: {
    color: uikitStyles.theme.colors.primary,
    textDecoration: "underline"
  },
  noWrap: {
    overflow: "hidden",
    textOverflow: "ellipsis",
    whiteSpace: "nowrap"
  },
  // variants
  display: {
    ...uikitStyles.theme.typography.display
  },
  title1: {
    ...uikitStyles.theme.typography.title1
  },
  title2: {
    ...uikitStyles.theme.typography.title2
  },
  title3: {
    ...uikitStyles.theme.typography.title3
  },
  title4: {
    ...uikitStyles.theme.typography.title4
  },
  body: {
    ...uikitStyles.theme.typography.body
  },
  label: {
    ...uikitStyles.theme.typography.label
  },
  caption1: {
    ...uikitStyles.theme.typography.caption1
  },
  caption2: {
    ...uikitStyles.theme.typography.caption2
  },
  // legacy variants
  "5xlTitle": {
    ...uikitStyles.theme.typography["5xlTitle"]
  },
  "4xlTitle": {
    ...uikitStyles.theme.typography["4xlTitle"]
  },
  "3xlTitle": {
    ...uikitStyles.theme.typography["3xlTitle"]
  },
  xxlTitle: {
    ...uikitStyles.theme.typography.xxlTitle
  },
  xlTitle: {},
  lTitle: {
    ...uikitStyles.theme.typography.lTitle
  },
  mTitle: {},
  sTitle: {
    ...uikitStyles.theme.typography.sTitle
  },
  xsTitle: {},
  xxsTitle: {
    ...uikitStyles.theme.typography.xxsTitle
  },
  sectionTitle: {
    ...uikitStyles.theme.typography.sectionTitle,
    textTransform: "uppercase"
  },
  highlightText: {},
  normalText: {},
  placeholderText: {
    ...uikitStyles.theme.typography.placeholderText
  },
  link: {
    ...uikitStyles.theme.typography.link,
    cursor: "pointer",
    textDecoration: "underline"
  },
  disabledText: {
    ...uikitStyles.theme.typography.disabledText
  },
  selectedNavText: {
    ...uikitStyles.theme.typography.selectedNavText
  },
  vizText: {},
  vizTextDisabled: {
    ...uikitStyles.theme.typography.vizTextDisabled
  },
  xsInlineLink: {
    ...uikitStyles.theme.typography.xsInlineLink
  }
});
exports.staticClasses = staticClasses;
exports.useClasses = useClasses;
//# sourceMappingURL=Typography.styles.cjs.map
