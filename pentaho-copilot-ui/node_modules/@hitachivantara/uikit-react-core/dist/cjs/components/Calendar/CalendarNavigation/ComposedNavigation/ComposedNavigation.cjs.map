{"version":3,"file":"ComposedNavigation.cjs","sources":["../../../../../../src/components/Calendar/CalendarNavigation/ComposedNavigation/ComposedNavigation.tsx"],"sourcesContent":["import { setId } from \"@core/utils/setId\";\n\nimport { ExtractNames } from \"@core/utils/classes\";\nimport { getMonthNamesList } from \"../../utils\";\nimport { ViewMode } from \"../../enums\";\nimport { Navigation } from \"../Navigation\";\nimport { VisibilitySelectorActions } from \"../../types\";\n\nimport { staticClasses, useClasses } from \"./ComposedNavigation.styles\";\n\nexport { staticClasses as composedNavigationClasses };\n\nexport type HvComposedNavigationClasses = ExtractNames<typeof useClasses>;\n\nexport const HvComposedNavigation = ({\n  classes: classesProp,\n  id,\n  locale,\n  onChange,\n  onViewModeChange,\n  visibleYear,\n  visibleMonth,\n  ...others\n}: HvComposedNavigationProps) => {\n  const { classes } = useClasses(classesProp);\n\n  const listMonthNamesLong = getMonthNamesList(locale, \"long\");\n  const monthName = listMonthNamesLong[visibleMonth - 1];\n\n  return (\n    <div className={classes.navigationContainer} {...others}>\n      <div className={classes.navigationMonth}>\n        <Navigation\n          id={setId(id, \"navigation-month\")}\n          navigationText={monthName}\n          onNavigatePrevious={(event) => {\n            onChange?.(event, \"previous_month\");\n          }}\n          onNavigateNext={(event) => {\n            onChange?.(event, \"next_month\");\n          }}\n          onTextClick={() => {\n            onViewModeChange(\"monthly\");\n          }}\n          className={classes.navigationMonth}\n        />\n      </div>\n\n      <Navigation\n        id={setId(id, \"navigation-year\")}\n        navigationText={visibleYear.toString()}\n        onNavigatePrevious={(event) => {\n          onChange?.(event, \"previous_year\");\n        }}\n        onNavigateNext={(event) => {\n          onChange?.(event, \"next_year\");\n        }}\n      />\n    </div>\n  );\n};\n\nexport interface HvComposedNavigationProps {\n  /**\n   * A Jss Object used to override or extend the component styles.\n   */\n  classes?: HvComposedNavigationClasses;\n  /**\n   * Identifier.\n   */\n  id?: string;\n  /**\n   * Locale to be used by the calendar.\n   */\n  locale?: string;\n  /**\n   * Callback to define the input date.\n   */\n  onChange?: (event, action: VisibilitySelectorActions) => void;\n  /**\n   * Callback to define the view mode.\n   */\n  onViewModeChange: (viewMode: ViewMode) => void;\n  /**\n   * Controls the visible month of the Calendar\n   */\n  visibleMonth: number;\n  /**\n   * Controls the visible month of the Calendar\n   */\n  visibleYear: number;\n}\n"],"names":["HvComposedNavigation","classes","classesProp","id","locale","onChange","onViewModeChange","visibleYear","visibleMonth","others","useClasses","listMonthNamesLong","getMonthNamesList","monthName","navigationContainer","jsx","navigationMonth","Navigation","setId","event","toString"],"mappings":";;;;;;;AAcO,MAAMA,uBAAuBA,CAAC;AAAA,EACnCC,SAASC;AAAAA,EACTC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACA,GAAGC;AACsB,MAAM;AACzB,QAAA;AAAA,IAAER;AAAAA,EAAAA,IAAYS,0BAAAA,WAAWR,WAAW;AAEpCS,QAAAA,qBAAqBC,MAAAA,kBAAkBR,QAAQ,MAAM;AACrDS,QAAAA,YAAYF,mBAAmBH,eAAe,CAAC;AAErD,yCACG,OAAI,EAAA,WAAWP,QAAQa,qBAAqB,GAAIL,QAC/C,UAAA;AAAA,IAAAM,2BAAA,IAAC,OAAI,EAAA,WAAWd,QAAQe,iBACtB,yCAACC,WACC,YAAA,EAAA,IAAIC,MAAMf,MAAAA,IAAI,kBAAkB,GAChC,gBAAgBU,WAChB,oBAAqBM,CAAU,UAAA;AAC7Bd,2CAAWc,OAAO;AAAA,IAAgB,GAEpC,gBAAiBA,CAAU,UAAA;AACzBd,2CAAWc,OAAO;AAAA,IACpB,GACA,aAAa,MAAM;AACjBb,uBAAiB,SAAS;AAAA,IAE5B,GAAA,WAAWL,QAAQe,gBAAAA,CAAgB,EAEvC,CAAA;AAAA,IAECD,2BAAAA,IAAAE,WAAAA,YAAA,EACC,IAAIC,MAAAA,MAAMf,IAAI,iBAAiB,GAC/B,gBAAgBI,YAAYa,SAC5B,GAAA,oBAAqBD,CAAU,UAAA;AAC7Bd,2CAAWc,OAAO;AAAA,IAAe,GAEnC,gBAAiBA,CAAU,UAAA;AACzBd,2CAAWc,OAAO;AAAA,IAAW,GAC7B;AAAA,EAEN,EAAA,CAAA;AAEJ;;;"}