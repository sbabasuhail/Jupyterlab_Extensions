"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("@emotion/react/jsx-runtime");
const useDefaultProps = require("../../hooks/useDefaultProps.cjs");
const React = require("react");
const setId = require("../../utils/setId.cjs");
const utils = require("./utils.cjs");
const Calendar_styles = require("./Calendar.styles.cjs");
const SingleCalendar = require("./SingleCalendar/SingleCalendar.cjs");
const FormElementContext = require("../Forms/FormElement/context/FormElementContext.cjs");
const FormElementValueContext = require("../Forms/FormElement/context/FormElementValueContext.cjs");
const HvCalendar = (props) => {
  const {
    classes: classesProp,
    id,
    locale = "en-US",
    value,
    visibleMonth,
    visibleYear,
    rightVisibleMonth,
    rightVisibleYear,
    minimumDate,
    maximumDate,
    startAdornment,
    onChange,
    onInputChange,
    onVisibleDateChange,
    invalidDateLabel,
    ...others
  } = useDefaultProps.useDefaultProps("HvCalendar", props);
  const {
    classes
  } = Calendar_styles.useClasses(classesProp);
  const {
    elementId
  } = React.useContext(FormElementContext.HvFormElementContext);
  const elementValue = React.useContext(FormElementValueContext.HvFormElementValueContext);
  const localValue = value ?? elementValue;
  const localId = id ?? setId.setId(elementId, "single-calendar");
  const rangeMode = utils.isRange(localValue);
  const rightCalendarId = setId.setId(localId, "single-calendar-right");
  const clampedMonth = visibleMonth && visibleMonth % 13 > 0 ? visibleMonth % 13 : 1;
  const singleCalendar = /* @__PURE__ */ jsxRuntime.jsx(SingleCalendar.HvSingleCalendar, { id: localId, locale, value: localValue, visibleMonth: clampedMonth, visibleYear, minimumDate, maximumDate, onChange, onInputChange: (evt, date) => onInputChange && onInputChange(evt, date, "left"), onVisibleDateChange, invalidDateLabel, ...others });
  const rangeCalendar = /* @__PURE__ */ jsxRuntime.jsxs("div", { className: classes.rangeCalendarContainer, children: [
    /* @__PURE__ */ jsxRuntime.jsx(SingleCalendar.HvSingleCalendar, { className: classes.singleCalendar, id: localId, locale, value: localValue, visibleMonth: clampedMonth, visibleYear, minimumDate, maximumDate, onChange, onInputChange: (evt, date) => onInputChange && onInputChange(evt, date, "left"), onVisibleDateChange: (event, action, index) => onVisibleDateChange == null ? void 0 : onVisibleDateChange(event, action, index, "left"), invalidDateLabel, ...others }),
    /* @__PURE__ */ jsxRuntime.jsx(SingleCalendar.HvSingleCalendar, { className: classes.singleCalendar, id: rightCalendarId, locale, value: localValue, visibleMonth: rightVisibleMonth, visibleYear: rightVisibleYear, minimumDate, maximumDate, onChange, onInputChange: (evt, date) => onInputChange && onInputChange(evt, date, "right"), onVisibleDateChange: (event, action, index) => {
      onVisibleDateChange == null ? void 0 : onVisibleDateChange(event, action, index, "right");
    }, showEndDate: true, invalidDateLabel, ...others })
  ] });
  return /* @__PURE__ */ jsxRuntime.jsxs("div", { className: classes.root, children: [
    startAdornment,
    rangeMode ? rangeCalendar : singleCalendar
  ] });
};
exports.calendarClasses = Calendar_styles.staticClasses;
exports.HvCalendar = HvCalendar;
//# sourceMappingURL=Calendar.cjs.map
