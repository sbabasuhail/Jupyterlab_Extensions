"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("@emotion/react/jsx-runtime");
const keyboardUtils = require("../../../../utils/keyboardUtils.cjs");
const utils = require("../../utils.cjs");
const MonthSelector_styles = require("./MonthSelector.styles.cjs");
const Typography = require("../../../Typography/Typography.cjs");
const HvMonthSelector = ({
  classes: classesProp,
  id,
  locale,
  onChange,
  onViewModeChange,
  rangeMode,
  visibleMonth,
  ...others
}) => {
  const {
    classes,
    cx
  } = MonthSelector_styles.useClasses(classesProp);
  const listMonthNamesShort = utils.getMonthNamesList(locale, "short");
  const onKeyDownHandler = (event, index) => {
    if (keyboardUtils.isKey(event, "Enter")) {
      onChange == null ? void 0 : onChange(event, "month", index + 1);
      onViewModeChange("calendar");
    }
  };
  return /* @__PURE__ */ jsxRuntime.jsx("div", { className: cx(classes.calendarMonthlyGrid, {
    [classes.rangeModeWidth]: rangeMode,
    [classes.normalWidth]: !rangeMode
  }), children: listMonthNamesShort.map((monthName, index) => /* @__PURE__ */ jsxRuntime.jsx("div", { className: classes.focusSelection, role: "button", onClick: (event) => {
    onChange == null ? void 0 : onChange(event, "month", index + 1);
    onViewModeChange("calendar");
  }, onKeyDown: (event) => onKeyDownHandler(event, index), tabIndex: 0, ...others, children: /* @__PURE__ */ jsxRuntime.jsx(Typography.HvTypography, { className: cx(classes.calendarMonthlyCell, {
    [classes.calendarMonthlyCellSelected]: index + 1 === visibleMonth
  }), children: monthName }) }, monthName)) });
};
exports.monthSelectorClasses = MonthSelector_styles.staticClasses;
exports.HvMonthSelector = HvMonthSelector;
//# sourceMappingURL=MonthSelector.cjs.map
