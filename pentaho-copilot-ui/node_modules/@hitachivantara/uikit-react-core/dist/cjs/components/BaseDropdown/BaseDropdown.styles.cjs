"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const uikitStyles = require("@hitachivantara/uikit-styles");
const focusUtils = require("../../utils/focusUtils.cjs");
const classes = require("../../utils/classes.cjs");
const {
  useClasses,
  staticClasses
} = classes.createClasses("HvBaseDropdown", {
  root: {
    width: "100%",
    position: "relative"
  },
  rootDisabled: {
    cursor: "not-allowed",
    "&:focus": {
      outline: "none"
    }
  },
  anchor: {
    display: "inline-block",
    width: "100%"
  },
  container: {
    zIndex: uikitStyles.theme.zIndices.popover,
    width: "auto"
  },
  header: {
    cursor: "pointer",
    userSelect: "none",
    position: "relative",
    background: uikitStyles.theme.colors.atmo1,
    boxSizing: "border-box",
    border: `1px solid ${uikitStyles.theme.baseDropdown.borderColor}`,
    borderRadius: uikitStyles.theme.radii.base,
    "&:hover": {
      border: `1px solid ${uikitStyles.theme.baseDropdown.hoverBorderColor}`
    },
    "&:focus": {
      outline: "none"
    },
    "&:focus-visible": {
      ...focusUtils.outlineStyles,
      border: `1px solid ${uikitStyles.theme.baseDropdown.hoverBorderColor}`
    }
  },
  headerOpen: {
    border: `1px solid ${uikitStyles.theme.baseDropdown.openBorderColor}`,
    boxShadow: uikitStyles.theme.baseDropdown.shadow,
    "&:hover": {
      border: `1px solid ${uikitStyles.theme.baseDropdown.openBorderColor}`,
      boxShadow: uikitStyles.theme.baseDropdown.shadow
    }
  },
  headerOpenUp: {
    borderRadius: `0px 0px ${uikitStyles.theme.radii.base} ${uikitStyles.theme.radii.base}`
  },
  headerOpenDown: {
    borderRadius: `${uikitStyles.theme.radii.base} ${uikitStyles.theme.radii.base} 0px 0px`
  },
  headerDisabled: {
    cursor: "not-allowed",
    pointerEvents: "none",
    border: `1px solid ${uikitStyles.theme.baseDropdown.disabledBorderColor}`,
    background: uikitStyles.theme.baseDropdown.disabledBackgroundColor,
    "&:hover": {
      border: `1px solid ${uikitStyles.theme.baseDropdown.disabledBorderColor}`
    }
  },
  headerReadOnly: {
    cursor: "not-allowed",
    pointerEvents: "none",
    border: uikitStyles.theme.baseDropdown.readOnlyBorder,
    background: uikitStyles.theme.baseDropdown.readOnlyBackgroundColor,
    userSelect: "text",
    "&:focus-visible": {
      outline: "none",
      border: uikitStyles.theme.baseDropdown.readOnlyBorder
    }
  },
  arrowContainer: {
    position: "absolute",
    pointerEvents: "none",
    top: -1,
    right: -1
  },
  arrow: {},
  selection: {
    display: "flex",
    alignItems: "center",
    height: "30px",
    boxSizing: "border-box",
    paddingLeft: uikitStyles.theme.space.xs
  },
  placeholder: {
    display: "block",
    overflow: "hidden",
    textOverflow: "ellipsis",
    whiteSpace: "nowrap",
    ...uikitStyles.theme.typography.body,
    color: uikitStyles.theme.baseDropdown.placeholderColor
  },
  selectionDisabled: {
    color: uikitStyles.theme.colors.secondary_60
  },
  panel: {
    position: "relative",
    boxShadow: uikitStyles.theme.baseDropdown.shadow,
    backgroundColor: uikitStyles.theme.colors.atmo1,
    border: `1px solid ${uikitStyles.theme.baseDropdown.openBorderColor}`
  },
  panelOpenedUp: {
    top: 1,
    borderRadius: `${uikitStyles.theme.radii.base} ${uikitStyles.theme.radii.base} 0 0`
  },
  panelOpenedDown: {
    top: -1,
    borderRadius: `0 0 ${uikitStyles.theme.radii.base} ${uikitStyles.theme.radii.base}`
  },
  inputExtensionOpen: {
    height: uikitStyles.theme.dropDownMenu.extensionHeight,
    backgroundColor: uikitStyles.theme.colors.atmo1,
    borderTop: "none",
    borderBottom: "none",
    borderRight: `1px solid ${uikitStyles.theme.dropDownMenu.extensionBorderColor}`,
    borderLeft: `1px solid ${uikitStyles.theme.dropDownMenu.extensionBorderColor}`
  },
  inputExtensionLeftPosition: {
    marginLeft: "auto"
  },
  inputExtensionOpenShadow: {
    boxShadow: `0px 8px 0px ${uikitStyles.theme.colors.atmo1}, 0px 0px 9px 0px rgba(65,65,65,.12)`
  },
  inputExtensionFloatRight: {
    float: "right"
  },
  inputExtensionFloatLeft: {
    float: "left"
  }
});
exports.staticClasses = staticClasses;
exports.useClasses = useClasses;
//# sourceMappingURL=BaseDropdown.styles.cjs.map
