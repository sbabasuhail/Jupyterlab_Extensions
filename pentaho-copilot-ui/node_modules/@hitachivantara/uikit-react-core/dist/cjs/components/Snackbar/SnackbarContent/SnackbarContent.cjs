"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("@emotion/react/jsx-runtime");
const React = require("react");
const SnackbarContent = require("@mui/material/SnackbarContent");
const setId = require("../../../utils/setId.cjs");
const iconVariant = require("../../../utils/iconVariant.cjs");
const useTheme = require("../../../hooks/useTheme.cjs");
const SnackbarContent_styles = require("./SnackbarContent.styles.cjs");
const ActionsGeneric = require("../../ActionsGeneric/ActionsGeneric.cjs");
const _interopDefault = (e) => e && e.__esModule ? e : { default: e };
const SnackbarContent__default = /* @__PURE__ */ _interopDefault(SnackbarContent);
const HvSnackbarContent = React.forwardRef(({
  className,
  id,
  classes: classesProp,
  label,
  variant = "default",
  showIcon,
  customIcon,
  action,
  actionCallback,
  ...others
}, ref) => {
  const icon = customIcon || showIcon && iconVariant.iconVariant(variant, "base_dark");
  const innerAction = React.isValidElement(action) ? action : [action];
  const {
    classes,
    cx
  } = SnackbarContent_styles.useClasses(classesProp);
  const {
    activeTheme
  } = useTheme.useTheme();
  return /* @__PURE__ */ jsxRuntime.jsx(SnackbarContent__default.default, { ref, id, classes: {
    root: classes.root,
    message: classes.message
  }, className: cx(classes == null ? void 0 : classes[variant], className), message: /* @__PURE__ */ jsxRuntime.jsxs("div", { id: setId.setId(id, "message"), className: classes.messageSpan, children: [
    icon && /* @__PURE__ */ jsxRuntime.jsx("div", { className: classes.iconVariant, children: icon }),
    /* @__PURE__ */ jsxRuntime.jsx("div", { className: classes.messageText, children: label }),
    action && /* @__PURE__ */ jsxRuntime.jsx("div", { id: setId.setId(id, "action"), className: classes.action, children: /* @__PURE__ */ jsxRuntime.jsx(ActionsGeneric.HvActionsGeneric, { id, category: activeTheme == null ? void 0 : activeTheme.snackbar.actionButtonVariant, actions: innerAction, actionsCallback: actionCallback }) })
  ] }), ...others });
});
exports.snackbarContentClasses = SnackbarContent_styles.staticClasses;
exports.HvSnackbarContent = HvSnackbarContent;
//# sourceMappingURL=SnackbarContent.cjs.map
