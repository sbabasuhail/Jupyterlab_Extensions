"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("@emotion/react/jsx-runtime");
const Slide = require("@mui/material/Slide");
const material = require("@mui/material");
const capitalize = require("lodash/capitalize");
const setId = require("../../utils/setId.cjs");
const Snackbar_styles = require("./Snackbar.styles.cjs");
const SnackbarContent = require("./SnackbarContent/SnackbarContent.cjs");
const _interopDefault = (e) => e && e.__esModule ? e : { default: e };
const Slide__default = /* @__PURE__ */ _interopDefault(Slide);
const capitalize__default = /* @__PURE__ */ _interopDefault(capitalize);
const transLeft = (props) => /* @__PURE__ */ jsxRuntime.jsx(Slide__default.default, { ...props, direction: "left" });
const transRight = (props) => /* @__PURE__ */ jsxRuntime.jsx(Slide__default.default, { ...props, direction: "right" });
const transUp = (props) => /* @__PURE__ */ jsxRuntime.jsx(Slide__default.default, { ...props, direction: "up" });
const transDown = (props) => /* @__PURE__ */ jsxRuntime.jsx(Slide__default.default, { ...props, direction: "down" });
const snackBarDirComponent = (direction) => {
  switch (direction) {
    case "right":
      return transRight;
    case "up":
      return transUp;
    case "down":
      return transDown;
    case "left":
    default:
      return transLeft;
  }
};
const HvSnackbar = ({
  classes: classesProp,
  className,
  id,
  open = false,
  onClose,
  label = "",
  anchorOrigin = {
    vertical: "top",
    horizontal: "right"
  },
  autoHideDuration = 5e3,
  variant = "default",
  showIcon = false,
  customIcon = null,
  action = null,
  actionCallback,
  transitionDuration = 300,
  transitionDirection = "left",
  offset = 60,
  snackbarContentProps,
  ...others
}) => {
  const {
    classes
  } = Snackbar_styles.useClasses(classesProp);
  const anchorOriginOffset = {
    anchorOriginTop: {
      top: `${offset}px`
    },
    anchorOriginBottom: {
      bottom: `${offset}px`
    }
  };
  return /* @__PURE__ */ jsxRuntime.jsx(material.Snackbar, { style: anchorOriginOffset[`anchorOrigin${capitalize__default.default(anchorOrigin.vertical)}`], classes, className, id, anchorOrigin, open, onClose, autoHideDuration, transitionDuration, TransitionComponent: snackBarDirComponent(transitionDirection), ...others, children: /* @__PURE__ */ jsxRuntime.jsx(SnackbarContent.HvSnackbarContent, { id: setId.setId(id, "content"), label, variant, customIcon, showIcon, action, actionCallback, ...snackbarContentProps }) });
};
exports.snackbarClasses = Snackbar_styles.staticClasses;
exports.HvSnackbar = HvSnackbar;
//# sourceMappingURL=Snackbar.cjs.map
