{"version":3,"file":"DotPagination.cjs","sources":["../../../../src/components/DotPagination/DotPagination.tsx"],"sourcesContent":["import { CurrentStep, OtherStep } from \"@hitachivantara/uikit-react-icons\";\n\nimport { cloneElement } from \"react\";\n\nimport { HvRadio } from \"@core/components/Radio\";\nimport { HvRadioGroup, HvRadioGroupProps } from \"@core/components/RadioGroup\";\nimport { ExtractNames } from \"@core/utils/classes\";\n\nimport { useDefaultProps } from \"@core/hooks/useDefaultProps\";\nimport { staticClasses, useClasses } from \"./DotPagination.styles\";\n\nexport { staticClasses as dotPaginationClasses };\n\nexport type HvDotPaginationClasses = ExtractNames<typeof useClasses>;\n\nexport interface HvDotPaginationProps\n  extends Omit<HvRadioGroupProps, \"classes\"> {\n  /**\n   * Icon to override the default one used for the unselected state.\n   *\n   * The default icon is `OtherStep`.\n   */\n  unselectedIcon?: React.ReactElement;\n  /**\n   * Icon to override the default one used for the selected state.\n   *\n   * The default icon is `CurrentStep`.\n   */\n  selectedIcon?: React.ReactElement;\n  /**\n   *  The number of pages the component has.\n   */\n  pages?: number;\n  /**\n   * The currently selected page.\n   */\n  page?: number;\n  /**\n   * The callback fired when the page value changes.\n   */\n  onPageChange?: (\n    event: React.ChangeEvent<HTMLInputElement>,\n    page: number\n  ) => void;\n  /**\n   * The callback fired to get the page aria label.\n   */\n  getItemAriaLabel?: (page: number) => string;\n  /**\n   * A Jss Object used to override or extend the styles applied.\n   */\n  classes?: HvDotPaginationClasses;\n}\n\nconst getSelectorIcons = (\n  radioIcon?: React.ReactElement,\n  radioCheckedIcon?: React.ReactElement,\n  classes?: HvDotPaginationClasses\n) => {\n  return {\n    radio: cloneElement(radioIcon || <OtherStep width={8} height={8} />, {\n      className: classes?.icon,\n    }),\n    radioChecked: cloneElement(\n      radioCheckedIcon || <CurrentStep width={8} height={8} />,\n      {\n        className: classes?.icon,\n      }\n    ),\n  };\n};\n\nconst range = (n: number) => Array.from(Array(n), (_, i) => i);\n\n/**\n * Pagination is the process of dividing a document into discrete pages. It relates to how users interact with structured content on a website or application.\n * This component uses Radio Buttons to represent each page.\n */\nexport const HvDotPagination = (props: HvDotPaginationProps) => {\n  const {\n    className,\n    classes: classesProp,\n    unselectedIcon,\n    selectedIcon,\n    pages = 1,\n    page = 0,\n    onPageChange,\n    getItemAriaLabel,\n    ...others\n  } = useDefaultProps(\"HvDotPagination\", props);\n\n  const { classes, cx } = useClasses(classesProp);\n\n  const icons = getSelectorIcons(unselectedIcon, selectedIcon, classes);\n\n  return (\n    <HvRadioGroup\n      className={cx(classes.root, className)}\n      classes={{\n        horizontal: classes.horizontal,\n      }}\n      orientation=\"horizontal\"\n      {...others}\n    >\n      {range(pages).map((i) => (\n        <HvRadio\n          classes={{\n            radio: classes.radio,\n            root: classes.radioRoot,\n          }}\n          key={i}\n          value={i}\n          checked={page === i}\n          onChange={(event) => onPageChange?.(event, i)}\n          icon={icons.radio}\n          checkedIcon={icons.radioChecked}\n          aria-label={getItemAriaLabel?.(i)}\n        />\n      ))}\n    </HvRadioGroup>\n  );\n};\n"],"names":["getSelectorIcons","radioIcon","radioCheckedIcon","classes","radio","cloneElement","jsx","OtherStep","className","icon","radioChecked","CurrentStep","range","n","Array","from","_","i","HvDotPagination","props","classesProp","unselectedIcon","selectedIcon","pages","page","onPageChange","getItemAriaLabel","others","useDefaultProps","cx","useClasses","icons","HvRadioGroup","root","horizontal","map","HvRadio","radioRoot","event"],"mappings":";;;;;;;;;AAsDA,MAAMA,mBAAmBA,CACvBC,WACAC,kBACAC,YACG;AACI,SAAA;AAAA,IACLC,OAAOC,mBAAaJ,aAAaK,2BAAAA,IAACC,6BAAU,OAAO,GAAG,QAAQ,EAAA,IAAO;AAAA,MACnEC,WAAWL,mCAASM;AAAAA,IAAAA,CACrB;AAAA,IACDC,cAAcL,mBACZH,oBAAoBI,2BAAAA,IAACK,+BAAY,OAAO,GAAG,QAAQ,EAAA,IACnD;AAAA,MACEH,WAAWL,mCAASM;AAAAA,IAAAA,CAExB;AAAA,EAAA;AAEJ;AAEA,MAAMG,QAAQA,CAACC,MAAcC,MAAMC,KAAKD,MAAMD,CAAC,GAAG,CAACG,GAAGC,MAAMA,CAAC;AAMhDC,MAAAA,kBAAkBA,CAACC,UAAgC;AACxD,QAAA;AAAA,IACJX;AAAAA,IACAL,SAASiB;AAAAA,IACTC;AAAAA,IACAC;AAAAA,IACAC,QAAQ;AAAA,IACRC,OAAO;AAAA,IACPC;AAAAA,IACAC;AAAAA,IACA,GAAGC;AAAAA,EAAAA,IACDC,gBAAgB,gBAAA,mBAAmBT,KAAK;AAEtC,QAAA;AAAA,IAAEhB;AAAAA,IAAS0B;AAAAA,EAAAA,IAAOC,qBAAAA,WAAWV,WAAW;AAE9C,QAAMW,QAAQ/B,iBAAiBqB,gBAAgBC,cAAcnB,OAAO;AAGlE,SAAAG,2BAAA,IAAC0B,2BACC,WAAWH,GAAG1B,QAAQ8B,MAAMzB,SAAS,GACrC,SAAS;AAAA,IACP0B,YAAY/B,QAAQ+B;AAAAA,EAEtB,GAAA,aAAY,cACZ,GAAIP,QAEHf,UAAAA,MAAMW,KAAK,EAAEY,IAAKlB,CAAAA,MAChBX,2BAAA,IAAA8B,MAAA,SAAA,EACC,SAAS;AAAA,IACPhC,OAAOD,QAAQC;AAAAA,IACf6B,MAAM9B,QAAQkC;AAAAA,EAChB,GAEA,OAAOpB,GACP,SAASO,SAASP,GAClB,UAAWqB,CAAAA,UAAUb,6CAAea,OAAOrB,IAC3C,MAAMc,MAAM3B,OACZ,aAAa2B,MAAMrB,cACnB,cAAYgB,qDAAmBT,GAAC,GAN3BA,CAM6B,CAErC,EACH,CAAA;AAEJ;;;"}