"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const uikitStyles = require("@hitachivantara/uikit-styles");
const focusUtils = require("../../utils/focusUtils.cjs");
const classes = require("../../utils/classes.cjs");
const {
  staticClasses,
  useClasses
} = classes.createClasses("HvCheckBox", {
  root: {
    display: "inline-block"
  },
  container: {
    cursor: "pointer",
    display: "flex",
    height: "32px",
    transition: "background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms",
    "&:hover": {
      backgroundColor: uikitStyles.theme.checkbox.hoverColor,
      borderRadius: uikitStyles.theme.checkbox.borderRadius
    }
  },
  disabled: {
    cursor: "not-allowed",
    "& $label": {
      color: uikitStyles.theme.colors.secondary_60,
      cursor: "not-allowed"
    }
  },
  focusVisible: {
    ...focusUtils.outlineStyles,
    "& div": {
      backgroundColor: uikitStyles.theme.colors.atmo3
    },
    [`& $checkbox div > svg`]: {
      outline: "none",
      boxShadow: "none"
    }
  },
  invalidContainer: {
    borderBottom: `1px solid ${uikitStyles.theme.colors.negative}`,
    "&:hover": {
      borderBottomLeftRadius: "0px",
      borderBottomRightRadius: "0px"
    }
  },
  checkbox: {
    height: "32px"
  },
  invalidCheckbox: {
    borderBottom: `1px solid ${uikitStyles.theme.colors.negative}`,
    borderBottomLeftRadius: "0px",
    borderBottomRightRadius: "0px"
  },
  label: {
    overflow: "hidden",
    textOverflow: "ellipsis",
    verticalAlign: "middle",
    paddingRight: uikitStyles.theme.space.xs,
    whiteSpace: "nowrap",
    ...uikitStyles.theme.typography.body,
    cursor: "pointer",
    height: "32px",
    lineHeight: "32px",
    width: "100%"
  }
});
exports.staticClasses = staticClasses;
exports.useClasses = useClasses;
//# sourceMappingURL=CheckBox.styles.cjs.map
