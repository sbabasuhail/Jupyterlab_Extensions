"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("@emotion/react/jsx-runtime");
const React = require("react");
const Slide = require("@mui/material/Slide");
const Snackbar = require("@mui/material/Snackbar");
const setId = require("../../utils/setId.cjs");
const useDefaultProps = require("../../hooks/useDefaultProps.cjs");
const Banner_styles = require("./Banner.styles.cjs");
const BannerContent = require("./BannerContent/BannerContent.cjs");
const _interopDefault = (e) => e && e.__esModule ? e : { default: e };
const Slide__default = /* @__PURE__ */ _interopDefault(Slide);
const Snackbar__default = /* @__PURE__ */ _interopDefault(Snackbar);
const HvBanner = (props) => {
  const {
    id,
    classes: classesProp,
    className,
    open,
    onClose,
    anchorOrigin = "top",
    variant = "default",
    transitionDuration = 300,
    transitionDirection = "down",
    showIcon = false,
    customIcon,
    actions,
    actionsCallback,
    actionsPosition = "auto",
    label,
    offset = 60,
    bannerContentProps,
    ...others
  } = useDefaultProps.useDefaultProps("HvBanner", props);
  const {
    classes,
    cx
  } = Banner_styles.useClasses(classesProp);
  const anchorOriginBanner = {
    horizontal: "center",
    vertical: anchorOrigin
  };
  const SlideTransition = React.useCallback((properties) => /* @__PURE__ */ jsxRuntime.jsx(Slide__default.default, { ...properties, direction: transitionDirection }), [transitionDirection]);
  return /* @__PURE__ */ jsxRuntime.jsx(Snackbar__default.default, { id, open, className, classes: {
    root: cx(classes.root, {
      [classes.rootClosed]: !open
    }),
    anchorOriginTopCenter: classes.anchorOriginTopCenter,
    anchorOriginBottomCenter: classes.anchorOriginBottomCenter
  }, style: {
    [anchorOrigin]: offset
  }, anchorOrigin: anchorOriginBanner, TransitionComponent: SlideTransition, transitionDuration, ...others, children: /* @__PURE__ */ jsxRuntime.jsx(BannerContent.HvBannerContent, { id: setId.setId(id, "content"), content: label, variant, customIcon, showIcon, actions, actionsCallback, actionsPosition, onClose, ...bannerContentProps }) });
};
exports.bannerClasses = Banner_styles.staticClasses;
exports.HvBanner = HvBanner;
//# sourceMappingURL=Banner.cjs.map
