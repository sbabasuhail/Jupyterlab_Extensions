{"version":3,"file":"useVisibleDate.cjs","sources":["../../../../src/components/DatePicker/useVisibleDate.tsx"],"sourcesContent":["import { Reducer, useReducer } from \"react\";\n\nimport { VisibilitySelectorActions } from \"@core/components/Calendar\";\n\nimport { validateDate } from \"./utils\";\n\nfunction stateToLeftRight({\n  visibleYear,\n  visibleMonth,\n  rightVisibleYear,\n  rightVisibleMonth,\n}) {\n  return {\n    left: { year: visibleYear, month: visibleMonth },\n    right: { year: rightVisibleYear, month: rightVisibleMonth },\n  };\n}\n\nfunction leftRightToState(left, right) {\n  return {\n    visibleYear: left.year,\n    visibleMonth: left.month,\n    rightVisibleYear: right.year,\n    rightVisibleMonth: right.month,\n  };\n}\n\nfunction subtractYear({ year, month }) {\n  return { year: year - 1, month };\n}\n\nfunction addYear({ year, month }) {\n  return { year: year + 1, month };\n}\n\nfunction subtractMonth({ year, month }) {\n  let y = year;\n  let m = month;\n\n  m -= 1;\n  if (m === 0) {\n    y -= 1;\n    m = 12;\n  }\n\n  return { year: y, month: m };\n}\n\nfunction addMonth({ year, month }) {\n  let y = year;\n  let m = month;\n\n  m += 1;\n  if (m === 13) {\n    y += 1;\n    m = 1;\n  }\n\n  return { year: y, month: m };\n}\n\nfunction ensureNoOverlap(left, right, keepRight = false) {\n  let l = left;\n  let r = right;\n  if (\n    left.year > right.year ||\n    (left.year === right.year && left.month >= right.month)\n  ) {\n    if (keepRight) {\n      l = subtractMonth(right);\n    } else {\n      r = addMonth(left);\n    }\n  }\n\n  return leftRightToState(l, r);\n}\n\nexport function isSameYearMonth(d1, d2) {\n  return d1.year === d2.year && d1.month === d2.month;\n}\n\ntype State = {\n  visibleYear: any;\n  visibleMonth: any;\n  rightVisibleYear: any;\n  rightVisibleMonth: any;\n};\ntype Action = { type: VisibilitySelectorActions } & Record<string, any>;\n\nconst visibleDateReducer: Reducer<State, Action> = (state, action) => {\n  let { left, right } = stateToLeftRight(state);\n\n  switch (action.type) {\n    case \"previous_year\":\n      if (action.target === \"right\") {\n        right = subtractYear(right);\n        return ensureNoOverlap(left, right, true);\n      }\n\n      left = subtractYear(left);\n      return ensureNoOverlap(left, right, false);\n\n    case \"next_year\":\n      if (action.target === \"right\") {\n        right = addYear(right);\n        return ensureNoOverlap(left, right, true);\n      }\n\n      left = addYear(left);\n      return ensureNoOverlap(left, right, false);\n\n    case \"previous_month\":\n      if (action.target === \"right\") {\n        right = subtractMonth(right);\n        return ensureNoOverlap(left, right, true);\n      }\n\n      left = subtractMonth(left);\n      return ensureNoOverlap(left, right, false);\n\n    case \"next_month\":\n      if (action.target === \"right\") {\n        right = addMonth(right);\n        return ensureNoOverlap(left, right, true);\n      }\n\n      left = addMonth(left);\n      return ensureNoOverlap(left, right, false);\n\n    case \"month\":\n      if (action.month != null) {\n        if (action.target === \"right\") {\n          if (right.month !== action.month) {\n            right = { year: right.year, month: action.month };\n            return ensureNoOverlap(left, right, true);\n          }\n        } else if (left.month !== action.month) {\n          left = { year: left.year, month: action.month };\n          return ensureNoOverlap(left, right, false);\n        }\n      }\n      break;\n\n    case \"month_year\":\n      if (action.month != null && action.year != null) {\n        if (action.target === \"right\") {\n          if (\n            !isSameYearMonth(left, action) &&\n            !isSameYearMonth(right, action)\n          ) {\n            right = { year: action.year, month: action.month };\n            return ensureNoOverlap(left, right, true);\n          }\n        } else if (\n          !isSameYearMonth(left, action) &&\n          (action.target === \"left\" || !isSameYearMonth(right, action))\n        ) {\n          left = { year: action.year, month: action.month };\n          return ensureNoOverlap(left, right, false);\n        }\n      }\n\n      break;\n\n    default:\n  }\n\n  return state;\n};\n\nfunction stateFromRange(startDate, endDate) {\n  const initialStartDate = validateDate(startDate);\n  const initialEndDate =\n    endDate != null ? validateDate(endDate) : initialStartDate;\n\n  return ensureNoOverlap(\n    {\n      year: initialStartDate.getFullYear(),\n      month: initialStartDate.getMonth() + 1,\n    },\n    { year: initialEndDate.getFullYear(), month: initialEndDate.getMonth() + 1 }\n  );\n}\n\nexport default function useVisibleDate(startDate?: Date, endDate?: Date) {\n  return useReducer(visibleDateReducer, { startDate, endDate }, (initData) =>\n    stateFromRange(initData.startDate, initData.endDate)\n  );\n}\n"],"names":["stateToLeftRight","visibleYear","visibleMonth","rightVisibleYear","rightVisibleMonth","left","year","month","right","leftRightToState","subtractYear","addYear","subtractMonth","y","m","addMonth","ensureNoOverlap","keepRight","l","r","isSameYearMonth","d1","d2","visibleDateReducer","state","action","type","target","stateFromRange","startDate","endDate","initialStartDate","validateDate","initialEndDate","getFullYear","getMonth","useVisibleDate","useReducer","initData"],"mappings":"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"}