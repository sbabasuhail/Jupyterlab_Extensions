"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("@emotion/react/jsx-runtime");
const React = require("react");
const uikitReactIcons = require("@hitachivantara/uikit-react-icons");
const setId = require("../../../utils/setId.cjs");
const utils = require("../utils.cjs");
const SliderInput_styles = require("./SliderInput.styles.cjs");
const Input = require("../../Input/Input.cjs");
const HvSliderInput = ({
  classes: classesProp,
  className,
  id,
  label,
  status,
  values: valuesProp = [],
  inputProps = [],
  readOnly = false,
  disabled = false,
  markDigits = 0,
  onChange,
  ...others
}) => {
  const {
    classes,
    cx
  } = SliderInput_styles.useClasses(classesProp);
  const [inputValues, setInputValues] = React.useState(utils.knobsValuesToString(valuesProp, markDigits));
  const handleChange = (index) => {
    if (disabled)
      return;
    onChange == null ? void 0 : onChange(utils.stringValuesToKnobs(inputValues), index);
  };
  React.useEffect(() => {
    setInputValues(utils.knobsValuesToString(valuesProp, markDigits));
  }, [markDigits, valuesProp]);
  return /* @__PURE__ */ jsxRuntime.jsx("div", { className: cx(classes.inputRoot, className), ...others, children: inputValues.map((value, index) => /* @__PURE__ */ jsxRuntime.jsxs("div", { className: classes.inputContainer, children: [
    index !== 0 && /* @__PURE__ */ jsxRuntime.jsx(uikitReactIcons.Remove, { color: disabled ? ["atmo4"] : void 0 }),
    /* @__PURE__ */ jsxRuntime.jsx(Input.HvInput, { id: setId.setId(id, index), "aria-label": `${label}-${index}`, className: classes.input, disabled, type: "number", value: Number.isNaN(value) || value == null ? "" : value.toString(), onEnter: () => handleChange(index), onBlur: () => handleChange(index), onChange: (_, inputValue) => {
      const newValues = [...inputValues];
      newValues[index] = inputValue;
      setInputValues(newValues);
    }, status: (status == null ? void 0 : status[index]) || "standBy", readOnly, disableClear: true, ...inputProps[index] })
  ] }, setId.setId(id, index))) });
};
exports.sliderInputClasses = SliderInput_styles.staticClasses;
exports.HvSliderInput = HvSliderInput;
//# sourceMappingURL=SliderInput.cjs.map
