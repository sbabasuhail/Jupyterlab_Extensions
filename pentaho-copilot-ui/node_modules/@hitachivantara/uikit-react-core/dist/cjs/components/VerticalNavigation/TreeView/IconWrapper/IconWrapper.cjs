"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("@emotion/react/jsx-runtime");
const uikitReactIcons = require("@hitachivantara/uikit-react-icons");
const React = require("react");
const VerticalNavigationContext = require("../../VerticalNavigationContext.cjs");
const IconWrapper_styles = require("./IconWrapper.styles.cjs");
const TooltipWrapper = require("../TooltipWrapper/TooltipWrapper.cjs");
const Avatar = require("../../../Avatar/Avatar.cjs");
const IconWrapper = ({
  icon,
  label,
  hasChildren,
  showAvatar,
  isOpen,
  disableTooltip
}) => {
  const {
    hasAnyChildWithData
  } = React.useContext(VerticalNavigationContext.VerticalNavigationContext);
  return /* @__PURE__ */ jsxRuntime.jsx(TooltipWrapper.TooltipWrapper, { showTooltip: !hasChildren && !isOpen && !disableTooltip, label, children: /* @__PURE__ */ jsxRuntime.jsxs(IconWrapper_styles.StyledIconsContainer, { hasAnyChildWithData, children: [
    showAvatar ? /* @__PURE__ */ jsxRuntime.jsx(Avatar.HvAvatar, { variant: "square", size: "xs", backgroundColor: "secondary_80", style: {
      fontSize: "15px"
    }, children: label.substring(0, 1) }) : icon,
    hasChildren && !isOpen ? /* @__PURE__ */ jsxRuntime.jsx(uikitReactIcons.Forwards, { iconSize: "XS" }) : hasAnyChildWithData && !isOpen && /* @__PURE__ */ jsxRuntime.jsx(IconWrapper_styles.SpacerDiv, {})
  ] }) });
};
exports.IconWrapper = IconWrapper;
//# sourceMappingURL=IconWrapper.cjs.map
