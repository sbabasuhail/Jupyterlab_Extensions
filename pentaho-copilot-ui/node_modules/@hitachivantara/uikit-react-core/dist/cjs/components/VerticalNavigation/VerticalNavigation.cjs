"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("@emotion/react/jsx-runtime");
const useDefaultProps = require("../../hooks/useDefaultProps.cjs");
const React = require("react");
const VerticalNavigationContext = require("./VerticalNavigationContext.cjs");
const VerticalNavigation_utils = require("./utils/VerticalNavigation.utils.cjs");
const VerticalNavigation_styles = require("./VerticalNavigation.styles.cjs");
const NavigationSlider_utils = require("./NavigationSlider/utils/NavigationSlider.utils.cjs");
const HvVerticalNavigation = (props) => {
  const {
    id,
    className,
    classes: classesProp,
    children,
    open = true,
    slider = false,
    useIcons = false,
    ...others
  } = useDefaultProps.useDefaultProps("HvVerticalNavigation", props);
  const {
    classes,
    cx
  } = VerticalNavigation_styles.useClasses(classesProp);
  const [parentData, setParentData] = React.useState([]);
  const [parentSelected, setParentSelected] = React.useState();
  const [headerTitle, setHeaderTitle] = React.useState();
  const withParentData = React.useMemo(() => NavigationSlider_utils.fillDataWithParentId(parentData), [parentData]);
  const initialParentItem = React.useMemo(() => NavigationSlider_utils.getParentItemById(withParentData, parentSelected), [withParentData, parentSelected]);
  const [parentItem, setParentItem] = React.useState(initialParentItem);
  const hasAnyChildWithData = React.useMemo(() => VerticalNavigation_utils.hasChildNavigationItems(parentData), [parentData]);
  React.useEffect(() => setHeaderTitle(parentItem == null ? void 0 : parentItem.label), [parentItem, setParentItem]);
  const navigateToParentHandler = React.useCallback(() => {
    setParentItem(NavigationSlider_utils.getParentItemById(withParentData, parentItem.id));
  }, [parentItem, setParentItem, withParentData]);
  const navigateToChildHandler = React.useCallback((event, item) => {
    setParentItem(NavigationSlider_utils.getNavigationItemById(withParentData, item.id));
    event.stopPropagation();
  }, [setParentItem, withParentData]);
  const value = React.useMemo(() => ({
    isOpen: open,
    useIcons,
    slider,
    headerTitle,
    setHeaderTitle,
    parentItem,
    setParentItem,
    withParentData,
    navigateToChildHandler,
    navigateToParentHandler,
    parentData,
    setParentData,
    parentSelected,
    setParentSelected,
    hasAnyChildWithData
  }), [open, useIcons, slider, headerTitle, setHeaderTitle, parentItem, setParentItem, withParentData, navigateToChildHandler, navigateToParentHandler, hasAnyChildWithData, parentData, parentSelected]);
  const content = /* @__PURE__ */ jsxRuntime.jsx(VerticalNavigationContext.VerticalNavigationContext.Provider, { value, children: /* @__PURE__ */ jsxRuntime.jsx("div", { id, className: cx(classes.root, {
    [classes.collapsed]: !open,
    [classes.slider]: slider,
    [classes.childData]: hasAnyChildWithData
  }, className), ...others, children }) });
  return content;
};
exports.verticalNavigationClasses = VerticalNavigation_styles.staticClasses;
exports.HvVerticalNavigation = HvVerticalNavigation;
//# sourceMappingURL=VerticalNavigation.cjs.map
