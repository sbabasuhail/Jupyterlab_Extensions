"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("@emotion/react/jsx-runtime");
const useDefaultProps = require("../../hooks/useDefaultProps.cjs");
const uikitReactIcons = require("@hitachivantara/uikit-react-icons");
const Carousel_styles = require("./Carousel.styles.cjs");
const Button = require("../Button/Button.cjs");
const HvCarouselControls = (props) => {
  const {
    classes: classesProp,
    className,
    showDots,
    page,
    pages,
    canPrevious,
    canNext,
    actions,
    onPreviousClick,
    onNextClick
  } = useDefaultProps.useDefaultProps("HvCarouselControls", props);
  const {
    classes,
    cx
  } = Carousel_styles.useClasses(classesProp, false);
  const selectedIndex = page || 0;
  const numSlides = pages;
  return /* @__PURE__ */ jsxRuntime.jsxs("div", { className: cx(classes.controls, className), children: [
    showDots ? /* @__PURE__ */ jsxRuntime.jsx("div", { className: classes.dots, children: Array.from(Array(numSlides)).map((el, index) => /* @__PURE__ */ jsxRuntime.jsx("span", { className: cx(classes.dot, {
      [classes.dotSelected]: index === selectedIndex
    }) }, `circle-${index}`)) }) : /* @__PURE__ */ jsxRuntime.jsxs(jsxRuntime.Fragment, { children: [
      /* @__PURE__ */ jsxRuntime.jsx(Button.HvButton, { icon: true, disabled: !canPrevious, "aria-label": "Backwards", onClick: onPreviousClick, children: /* @__PURE__ */ jsxRuntime.jsx(uikitReactIcons.Backwards, { iconSize: "XS" }) }),
      /* @__PURE__ */ jsxRuntime.jsx("div", { className: classes.pageCounter, children: `${selectedIndex + 1} / ${numSlides}` }),
      /* @__PURE__ */ jsxRuntime.jsx(Button.HvButton, { icon: true, disabled: !canNext, "aria-label": "Forwards", onClick: onNextClick, children: /* @__PURE__ */ jsxRuntime.jsx(uikitReactIcons.Forwards, { iconSize: "XS" }) })
    ] }),
    actions
  ] });
};
exports.HvCarouselControls = HvCarouselControls;
//# sourceMappingURL=CarouselControls.cjs.map
