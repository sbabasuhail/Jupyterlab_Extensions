"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("@emotion/react/jsx-runtime");
const React = require("react");
const setId = require("../../../utils/setId.cjs");
const wrapperTooltip = require("../../../utils/wrapperTooltip.cjs");
const FilterGroupContext = require("../FilterGroupContext.cjs");
const LeftPanel_styles = require("./LeftPanel.styles.cjs");
const Counter = require("../Counter/Counter.cjs");
const Panel = require("../../Panel/Panel.cjs");
const ListContainer = require("../../ListContainer/ListContainer.cjs");
const ListItem = require("../../ListContainer/ListItem/ListItem.cjs");
const HvFilterGroupLeftPanel = ({
  id,
  className,
  emptyElement,
  classes: classesProp
}) => {
  const {
    classes,
    cx
  } = LeftPanel_styles.useClasses(classesProp);
  const {
    filterOptions,
    activeGroup,
    setActiveGroup
  } = React.useContext(FilterGroupContext.HvFilterGroupContext);
  return /* @__PURE__ */ jsxRuntime.jsx(Panel.HvPanel, { id: setId.setId(id, "leftPanel"), className, children: filterOptions.length > 0 ? /* @__PURE__ */ jsxRuntime.jsx(ListContainer.HvListContainer, { id: setId.setId(id, "leftPanel-list"), condensed: true, interactive: true, children: filterOptions.map((group, index) => {
    const ItemText = wrapperTooltip.wrapperTooltip(true, group.name, group.name);
    return /* @__PURE__ */ jsxRuntime.jsx(ListItem.HvListItem, { id: group.id, className: cx(classes.listItem), onClick: () => setActiveGroup(index), selected: filterOptions[activeGroup].id === group.id, endAdornment: /* @__PURE__ */ jsxRuntime.jsx(Counter.HvFilterGroupCounter, { id: group.id }), children: /* @__PURE__ */ jsxRuntime.jsx(ItemText, {}) }, group.name);
  }) }) : emptyElement });
};
exports.filterGroupLeftPanelClasses = LeftPanel_styles.staticClasses;
exports.HvFilterGroupLeftPanel = HvFilterGroupLeftPanel;
//# sourceMappingURL=LeftPanel.cjs.map
