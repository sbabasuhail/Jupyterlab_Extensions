{"version":3,"file":"Counter.cjs","sources":["../../../../../src/components/FilterGroup/Counter/Counter.tsx"],"sourcesContent":["import { useContext } from \"react\";\n\nimport { ExtractNames } from \"@core/utils/classes\";\n\nimport { HvFilterGroupContext } from \"../FilterGroupContext\";\nimport { staticClasses, useClasses } from \"./Counter.styles\";\nimport { HvFilterGroupFilters, HvFilterGroupValue } from \"../types\";\n\nexport { staticClasses as filterGroupCounterClasses };\n\nexport type HvFilterGroupCounterClasses = ExtractNames<typeof useClasses>;\n\nexport interface HvFilterGroupCounterProps {\n  className?: string;\n  id?: string;\n  classes?: HvFilterGroupCounterClasses;\n}\n\nconst getExistingFiltersById = (\n  idx: number,\n  filterValues: HvFilterGroupValue,\n  filterOptions: HvFilterGroupFilters\n) => {\n  let total = 0;\n  filterValues[idx]?.forEach((fv) => {\n    if (filterOptions[idx]?.data.find((f) => f.id === fv)) {\n      total += 1;\n    }\n  });\n  return total;\n};\n\nexport const HvFilterGroupCounter = ({\n  className,\n  id,\n  classes: classesProp,\n}: HvFilterGroupCounterProps) => {\n  const { classes, cx } = useClasses(classesProp);\n  const {\n    filterOptions,\n    filterValues = [],\n    appliedFilters = [],\n  } = useContext(HvFilterGroupContext);\n\n  const options =\n    id && filterOptions.find((option) => option.id === id)\n      ? ([\n          filterOptions.find((option) => option.id === id),\n        ] as HvFilterGroupFilters)\n      : filterOptions;\n  const optionIdx = filterOptions.findIndex((option) => option.id === id);\n\n  let groupsCounter = 0;\n  appliedFilters\n    .filter((elem) => elem !== undefined)\n    .forEach((fg, i) => {\n      groupsCounter += getExistingFiltersById(i, filterValues, filterOptions);\n    });\n\n  const partialCounter = id\n    ? getExistingFiltersById(optionIdx, filterValues, filterOptions) || 0\n    : groupsCounter;\n\n  const totalCounter = options.reduce(\n    (acc, option) => acc + option.data.length,\n    0\n  );\n\n  return (\n    <div className={cx(classes.root, className)}>\n      {partialCounter > 0 ? (\n        <p className={classes.partialCounter}>{partialCounter}</p>\n      ) : (\n        partialCounter\n      )}\n      {` / ${totalCounter}`}\n    </div>\n  );\n};\n"],"names":["getExistingFiltersById","idx","filterValues","filterOptions","total","forEach","fv","data","find","f","id","HvFilterGroupCounter","className","classes","classesProp","cx","useClasses","appliedFilters","useContext","HvFilterGroupContext","options","option","optionIdx","findIndex","groupsCounter","filter","elem","undefined","fg","i","partialCounter","totalCounter","reduce","acc","length","root","jsx"],"mappings":";;;;;;AAkBA,MAAMA,yBAAyBA,CAC7BC,KACAC,cACAC,kBACG;;AACH,MAAIC,QAAQ;AACCH,qBAAAA,GAAG,MAAHA,mBAAMI,QAASC,CAAO,OAAA;;AAC7BH,SAAAA,MAAAA,cAAcF,GAAG,MAAjBE,gBAAAA,IAAoBI,KAAKC,KAAMC,CAAMA,MAAAA,EAAEC,OAAOJ,KAAK;AAC5C,eAAA;AAAA,IACX;AAAA,EAAA;AAEKF,SAAAA;AACT;AAEO,MAAMO,uBAAuBA,CAAC;AAAA,EACnCC;AAAAA,EACAF;AAAAA,EACAG,SAASC;AACgB,MAAM;AACzB,QAAA;AAAA,IAAED;AAAAA,IAASE;AAAAA,EAAAA,IAAOC,eAAAA,WAAWF,WAAW;AACxC,QAAA;AAAA,IACJX;AAAAA,IACAD,eAAe,CAAE;AAAA,IACjBe,iBAAiB,CAAA;AAAA,EAAA,IACfC,MAAAA,WAAWC,mBAAAA,oBAAoB;AAEnC,QAAMC,UACJV,MAAMP,cAAcK,KAAMa,CAAAA,WAAWA,OAAOX,OAAOA,EAAE,IAChD,CACCP,cAAcK,KAAMa,CAAAA,WAAWA,OAAOX,OAAOA,EAAE,CAAC,IAElDP;AACN,QAAMmB,YAAYnB,cAAcoB,UAAWF,CAAWA,WAAAA,OAAOX,OAAOA,EAAE;AAEtE,MAAIc,gBAAgB;AAEjBC,iBAAAA,OAAQC,UAASA,SAASC,MAAS,EACnCtB,QAAQ,CAACuB,IAAIC,MAAM;AACD7B,qBAAAA,uBAAuB6B,GAAG3B,cAAcC,aAAa;AAAA,EAAA,CACvE;AAEH,QAAM2B,iBAAiBpB,KACnBV,uBAAuBsB,WAAWpB,cAAcC,aAAa,KAAK,IAClEqB;AAEEO,QAAAA,eAAeX,QAAQY,OAC3B,CAACC,KAAKZ,WAAWY,MAAMZ,OAAOd,KAAK2B,QACnC,CACF;AAEA,yCACG,OAAI,EAAA,WAAWnB,GAAGF,QAAQsB,MAAMvB,SAAS,GACvCkB,UAAAA;AAAAA,IAAAA,iBAAiB,IACfM,+BAAA,KAAA,EAAE,WAAWvB,QAAQiB,gBAAiBA,0BAAe,IAEtDA;AAAAA,IAEA,MAAKC,YAAa;AAAA,EACtB,EAAA,CAAA;AAEJ;;;"}