"use strict";
Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
const jsxRuntime = require("@emotion/react/jsx-runtime");
const React = require("react");
const Tooltip = require("../Tooltip/Tooltip.cjs");
const Typography = require("../Typography/Typography.cjs");
const TitleWithTooltip = ({
  className,
  title
}) => {
  const textRef = React.useRef(null);
  const isOverflowed = React.useMemo(() => {
    const el = textRef.current;
    if (!el)
      return false;
    return el.scrollWidth > el.clientWidth || el.scrollHeight > el.clientHeight;
  }, []);
  return /* @__PURE__ */ jsxRuntime.jsx(Tooltip.HvTooltip, { disableHoverListener: !isOverflowed, placement: "top-start", title: /* @__PURE__ */ jsxRuntime.jsx(Typography.HvTypography, { children: title }), children: /* @__PURE__ */ jsxRuntime.jsx(Typography.HvTypography, { className, variant: "label", component: "span", ref: textRef, children: title }) });
};
const TitleWithTooltip$1 = TitleWithTooltip;
exports.default = TitleWithTooltip$1;
//# sourceMappingURL=TitleWithTooltip.cjs.map
