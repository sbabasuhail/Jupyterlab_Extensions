{"version":3,"file":"Panel.cjs","sources":["../../../../src/components/Panel/Panel.tsx"],"sourcesContent":["import { useDefaultProps } from \"@core/hooks/useDefaultProps\";\n\nimport { HvBaseProps } from \"@core/types/generic\";\n\nimport { ExtractNames } from \"@core/utils/classes\";\nimport { staticClasses, useClasses } from \"./Panel.styles\";\n\nexport { staticClasses as panelClasses };\n\nexport type HvPanelClasses = ExtractNames<typeof useClasses>;\n\nexport interface HvPanelProps extends HvBaseProps {\n  /** A Jss Object used to override or extend the styles applied. */\n  classes?: HvPanelClasses;\n}\n\n/**\n * A panel is a container used in a variety of patterns (e.g. dropdown, filter group, details section).\n * It can be horizontal or vertical and its size is defined by its content and how it relates to surrounding patterns.\n * Regardless of its content, a panel look and feel should be consistent.\n */\nexport const HvPanel = (props: HvPanelProps) => {\n  const {\n    id,\n    className,\n    classes: classesProp,\n    children,\n    ...others\n  } = useDefaultProps(\"HvPanel\", props);\n  const { classes, cx } = useClasses(classesProp);\n\n  return (\n    <div id={id} className={cx(classes.root, className)} {...others}>\n      {children}\n    </div>\n  );\n};\n"],"names":["HvPanel","props","id","className","classes","classesProp","children","others","useDefaultProps","cx","useClasses","jsx","root"],"mappings":";;;;;AAqBaA,MAAAA,UAAUA,CAACC,UAAwB;AACxC,QAAA;AAAA,IACJC;AAAAA,IACAC;AAAAA,IACAC,SAASC;AAAAA,IACTC;AAAAA,IACA,GAAGC;AAAAA,EAAAA,IACDC,gBAAgB,gBAAA,WAAWP,KAAK;AAC9B,QAAA;AAAA,IAAEG;AAAAA,IAASK;AAAAA,EAAAA,IAAOC,aAAAA,WAAWL,WAAW;AAG5C,SAAAM,2BAAA,IAAC,OAAI,EAAA,IAAQ,WAAWF,GAAGL,QAAQQ,MAAMT,SAAS,GAAOI,GAAAA,QACtDD,SACH,CAAA;AAEJ;;;"}