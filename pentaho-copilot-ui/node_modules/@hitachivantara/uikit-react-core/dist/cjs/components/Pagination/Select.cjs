"use strict";
Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
const jsxRuntime = require("@emotion/react/jsx-runtime");
const React = require("react");
const Select_styles = require("./Select.styles.cjs");
const ListItem = require("../ListContainer/ListItem/ListItem.cjs");
const BaseDropdown = require("../BaseDropdown/BaseDropdown.cjs");
const Panel = require("../Panel/Panel.cjs");
const SelectionList = require("../SelectionList/SelectionList.cjs");
const Option = ({
  ...props
}) => /* @__PURE__ */ jsxRuntime.jsx(ListItem.HvListItem, { ...props });
const HvSelect = ({
  className,
  classes: classesProp,
  onChange,
  disabled,
  value,
  children,
  ...others
}) => {
  const {
    classes
  } = Select_styles.useClasses(classesProp);
  const [open, setOpen] = React.useState(false);
  const handleSelect = (evt, val) => {
    onChange == null ? void 0 : onChange(evt, val);
    setOpen(false);
  };
  const handleToggle = (_evt, s) => {
    setOpen(s);
  };
  const setFocusToContent = (containerRef) => {
    const listItems = containerRef != null ? [...containerRef.getElementsByTagName("li")] : [];
    listItems.every((listItem) => {
      if (listItem.tabIndex >= 0) {
        listItem.focus();
        return false;
      }
      return true;
    });
  };
  return /* @__PURE__ */ jsxRuntime.jsx(BaseDropdown.HvBaseDropdown, { className, classes: {
    selection: classes.selection,
    header: classes.header,
    headerOpen: classes.headerOpen
  }, expanded: open, onToggle: handleToggle, onContainerCreation: setFocusToContent, placeholder: value, disabled, variableWidth: true, ...others, children: /* @__PURE__ */ jsxRuntime.jsx(Panel.HvPanel, { children: /* @__PURE__ */ jsxRuntime.jsx(SelectionList.HvSelectionList, { value, onChange: handleSelect, children }) }) });
};
const HvSelect$1 = HvSelect;
exports.Option = Option;
exports.default = HvSelect$1;
//# sourceMappingURL=Select.cjs.map
