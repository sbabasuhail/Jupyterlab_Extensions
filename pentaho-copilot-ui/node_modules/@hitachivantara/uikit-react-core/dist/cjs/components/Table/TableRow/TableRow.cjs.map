{"version":3,"file":"TableRow.cjs","sources":["../../../../../src/components/Table/TableRow/TableRow.tsx"],"sourcesContent":["import { forwardRef, useContext, useEffect, useState } from \"react\";\n\nimport { theme } from \"@hitachivantara/uikit-styles\";\n\nimport { ExtractNames } from \"@core/utils/classes\";\nimport { checkValidHexColorValue } from \"@core/utils/checkValidHexColorValue\";\nimport { hexToRgbA } from \"@core/utils/hexToRgbA\";\nimport { getVarValue } from \"@core/utils/theme\";\nimport { HvBaseProps } from \"@core/types/generic\";\nimport { useTheme } from \"@core/hooks/useTheme\";\n\nimport TableContext from \"../TableContext\";\nimport TableSectionContext from \"../TableSectionContext\";\nimport { staticClasses, useClasses } from \"./TableRow.styles\";\n\nexport { staticClasses as tableRowClasses };\n\nexport type HvTableRowClasses = ExtractNames<typeof useClasses>;\n\nexport interface HvTableRowProps\n  extends HvBaseProps<HTMLTableRowElement, \"children\"> {\n  /** Content to be rendered */\n  children: React.ReactNode;\n  /** The component used for the root node. Either a string to use a HTML element or a component. Defaults to tbody. */\n  component?: React.ElementType;\n  /** Whether the table row will shade on hover. */\n  hover?: boolean;\n  /** Whether the table row will have the selected shading. */\n  selected?: boolean;\n  /** Whether the table row is expanded. */\n  expanded?: boolean;\n  /** Whether the table row background is striped. */\n  striped?: boolean;\n  /** A Jss Object used to override or extend the styles applied to the component. */\n  classes?: HvTableRowClasses;\n}\n\nconst defaultComponent = \"tr\";\n\nconst getStripedColor = (color?: string, opacity: number = 0.6) => {\n  return checkValidHexColorValue(color) ? hexToRgbA(color, opacity) : color;\n};\n\n/**\n * `HvTableRow` acts as a `tr` element and inherits styles from its context\n */\nexport const HvTableRow = forwardRef<HTMLElement, HvTableRowProps>(\n  (props, externalRef) => {\n    const {\n      classes: classesProp,\n      className,\n      component,\n      hover = false,\n      selected = false,\n      expanded = false,\n      striped = false,\n      ...others\n    } = props;\n    const { classes, cx, css } = useClasses(classesProp);\n    const { colors, rootId } = useTheme();\n    const tableContext = useContext(TableContext);\n    const tableSectionContext = useContext(TableSectionContext);\n\n    const [even, setEven] = useState<string | undefined>();\n    const [odd, setOdd] = useState<string | undefined>();\n\n    const type = tableSectionContext?.type || \"body\";\n\n    const isList = tableContext.variant === \"listrow\";\n\n    const Component =\n      component || tableContext?.components?.Tr || defaultComponent;\n\n    const [stripedColorEven, setStripedColorEven] = useState(\n      getStripedColor(even)\n    );\n    const [stripedColorOdd, setStripedColorOdd] = useState(\n      getStripedColor(odd)\n    );\n\n    useEffect(() => {\n      setEven(getVarValue(theme.table.rowStripedBackgroundColorEven, rootId));\n      setOdd(getVarValue(theme.table.rowStripedBackgroundColorOdd, rootId));\n\n      setStripedColorEven(getStripedColor(even));\n      setStripedColorOdd(getStripedColor(odd));\n    }, [colors, even, odd, rootId]);\n\n    return (\n      <Component\n        ref={externalRef}\n        className={cx(\n          tableSectionContext.filterClassName,\n          classes.root,\n          classes[type],\n          striped &&\n            css({\n              \"&:nth-of-type(even)\": {\n                backgroundColor: stripedColorEven,\n                \"&:hover\": {\n                  backgroundColor: theme.table.rowHoverColor,\n                },\n              },\n              \"&:nth-of-type(odd)\": {\n                backgroundColor: stripedColorOdd,\n                \"&:hover\": {\n                  backgroundColor: theme.table.rowHoverColor,\n                },\n              },\n            }),\n          {\n            [classes.hover]: hover,\n            [classes.selected]: selected,\n            [classes.expanded]: expanded,\n            [classes.striped]: striped,\n            [classes.variantList]: isList && type === \"body\",\n            [classes.variantListHead]: isList && type === \"head\",\n          },\n          className\n        )}\n        role={Component === defaultComponent ? null : \"row\"}\n        {...others}\n      />\n    );\n  }\n);\n"],"names":["defaultComponent","getStripedColor","color","opacity","checkValidHexColorValue","hexToRgbA","HvTableRow","forwardRef","props","externalRef","classes","classesProp","className","component","hover","selected","expanded","striped","others","cx","css","useClasses","colors","rootId","useTheme","tableContext","useContext","TableContext","tableSectionContext","TableSectionContext","even","setEven","useState","odd","setOdd","type","isList","variant","Component","components","Tr","stripedColorEven","setStripedColorEven","stripedColorOdd","setStripedColorOdd","useEffect","getVarValue","theme","table","rowStripedBackgroundColorEven","rowStripedBackgroundColorOdd","jsx","filterClassName","root","backgroundColor","rowHoverColor","variantList","variantListHead"],"mappings":";;;;;;;;;;;;AAqCA,MAAMA,mBAAmB;AAEzB,MAAMC,kBAAkBA,CAACC,OAAgBC,UAAkB,QAAQ;AACjE,SAAOC,wBAAAA,wBAAwBF,KAAK,IAAIG,UAAAA,UAAUH,OAAOC,OAAO,IAAID;AACtE;AAKO,MAAMI,aAAaC,MAAAA,WACxB,CAACC,OAAOC,gBAAgB;;AAChB,QAAA;AAAA,IACJC,SAASC;AAAAA,IACTC;AAAAA,IACAC;AAAAA,IACAC,QAAQ;AAAA,IACRC,WAAW;AAAA,IACXC,WAAW;AAAA,IACXC,UAAU;AAAA,IACV,GAAGC;AAAAA,EACDV,IAAAA;AACE,QAAA;AAAA,IAAEE;AAAAA,IAASS;AAAAA,IAAIC;AAAAA,EAAAA,IAAQC,gBAAAA,WAAWV,WAAW;AAC7C,QAAA;AAAA,IAAEW;AAAAA,IAAQC;AAAAA,MAAWC,SAAS,SAAA;AAC9BC,QAAAA,eAAeC,iBAAWC,aAAAA,OAAY;AACtCC,QAAAA,sBAAsBF,iBAAWG,oBAAAA,OAAmB;AAE1D,QAAM,CAACC,MAAMC,OAAO,IAAIC,MAA6B,SAAA;AACrD,QAAM,CAACC,KAAKC,MAAM,IAAIF,MAA6B,SAAA;AAE7CG,QAAAA,QAAOP,2DAAqBO,SAAQ;AAEpCC,QAAAA,SAASX,aAAaY,YAAY;AAExC,QAAMC,YACJzB,eAAaY,kDAAcc,eAAdd,mBAA0Be,OAAMxC;AAE/C,QAAM,CAACyC,kBAAkBC,mBAAmB,IAAIV,MAC9C/B,SAAAA,gBAAgB6B,IAAI,CACtB;AACA,QAAM,CAACa,iBAAiBC,kBAAkB,IAAIZ,MAC5C/B,SAAAA,gBAAgBgC,GAAG,CACrB;AAEAY,QAAAA,UAAU,MAAM;AACdd,YAAQe,MAAYC,YAAAA,YAAAA,MAAMC,MAAMC,+BAA+B1B,MAAM,CAAC;AACtEW,WAAOY,MAAYC,YAAAA,YAAAA,MAAMC,MAAME,8BAA8B3B,MAAM,CAAC;AAEhDtB,wBAAAA,gBAAgB6B,IAAI,CAAC;AACtB7B,uBAAAA,gBAAgBgC,GAAG,CAAC;AAAA,KACtC,CAACX,QAAQQ,MAAMG,KAAKV,MAAM,CAAC;AAE9B,SACG4B,2BAAAA,IAAA,WAAA,EACC,KAAK1C,aACL,WAAWU,GACTS,oBAAoBwB,iBACpB1C,QAAQ2C,MACR3C,QAAQyB,IAAI,GACZlB,WACEG,IAAI;AAAA,IACF,uBAAuB;AAAA,MACrBkC,iBAAiBb;AAAAA,MACjB,WAAW;AAAA,QACTa,iBAAiBP,YAAAA,MAAMC,MAAMO;AAAAA,MAC/B;AAAA,IACF;AAAA,IACA,sBAAsB;AAAA,MACpBD,iBAAiBX;AAAAA,MACjB,WAAW;AAAA,QACTW,iBAAiBP,YAAAA,MAAMC,MAAMO;AAAAA,MAC/B;AAAA,IACF;AAAA,EAAA,CACD,GACH;AAAA,IACE,CAAC7C,QAAQI,KAAK,GAAGA;AAAAA,IACjB,CAACJ,QAAQK,QAAQ,GAAGA;AAAAA,IACpB,CAACL,QAAQM,QAAQ,GAAGA;AAAAA,IACpB,CAACN,QAAQO,OAAO,GAAGA;AAAAA,IACnB,CAACP,QAAQ8C,WAAW,GAAGpB,UAAUD,SAAS;AAAA,IAC1C,CAACzB,QAAQ+C,eAAe,GAAGrB,UAAUD,SAAS;AAAA,EAAA,GAEhDvB,SACF,GACA,MAAM0B,cAActC,mBAAmB,OAAO,OAC1CkB,GAAAA,OACJ,CAAA;AAEN,CACF;;;"}