"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("@emotion/react/jsx-runtime");
const React = require("react");
const useForkRef = require("../../../hooks/useForkRef.cjs");
const TableContext = require("../TableContext.cjs");
const TableSectionContext = require("../TableSectionContext.cjs");
const TableBody_styles = require("./TableBody.styles.cjs");
const Focus = require("../../Focus/Focus.cjs");
const tableSectionContext = {
  type: "body",
  filterClassName: "grid"
};
const defaultComponent = "tbody";
const HvTableBody = React.forwardRef(({
  classes: classesProp,
  className,
  component,
  children,
  withNavigation = false,
  ...others
}, externalRef) => {
  var _a;
  const {
    classes,
    cx
  } = TableBody_styles.useClasses(classesProp);
  const tableContext = React.useContext(TableContext.default);
  const bodyRef = React.useRef(null);
  const handleRef = useForkRef.useForkRef(externalRef, bodyRef);
  const Component = component || ((_a = tableContext == null ? void 0 : tableContext.components) == null ? void 0 : _a.TBody) || defaultComponent;
  return /* @__PURE__ */ jsxRuntime.jsx(TableSectionContext.default.Provider, { value: tableSectionContext, children: /* @__PURE__ */ jsxRuntime.jsx(Component, { className: cx(classes.root, className), ref: handleRef, role: Component === defaultComponent ? null : "rowgroup", ...others, children: withNavigation ? React.Children.map(children, (element) => {
    if (React.isValidElement(element)) {
      return /* @__PURE__ */ jsxRuntime.jsx(Focus.HvFocus, { id: `my-id-${element.key}`, rootRef: bodyRef, strategy: "grid", filterClass: tableSectionContext.filterClassName, navigationJump: 1, focusDisabled: false, selected: element.props.selected, children: element }, `row-${element.key}`);
    }
  }) : children }) });
});
exports.tableBodyClasses = TableBody_styles.staticClasses;
exports.HvTableBody = HvTableBody;
//# sourceMappingURL=TableBody.cjs.map
