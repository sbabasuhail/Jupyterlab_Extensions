{"version":3,"file":"DropdownColumnCell.cjs","sources":["../../../../../../src/components/Table/renderers/DropdownColumnCell/DropdownColumnCell.tsx"],"sourcesContent":["import { HvDropdownProps, HvDropdown } from \"@core/components/Dropdown\";\nimport { HvListValue } from \"@core/components/List\";\n\nexport interface HvDropdownColumnCellProp {\n  /** Values to render in the dropdown. */\n  values: HvListValue[];\n  /** Placeholder text for when the dropdown is empty. */\n  placeholder: string;\n  /** The whether the dropdown is disabled. */\n  disabled: boolean;\n  /** Function called when there is change on the dropdown. */\n  onChange?: (value: HvListValue) => void;\n  /** Extra props to be passed onto the dropdown. */\n  dropdownProps?: HvDropdownProps;\n}\n\nexport const HvDropdownColumnCell = ({\n  values,\n  disabled,\n  onChange,\n  placeholder,\n  dropdownProps,\n}: HvDropdownColumnCellProp): JSX.Element => {\n  return (\n    <HvDropdown\n      onChange={(item) => {\n        onChange?.(item as HvListValue);\n      }}\n      placeholder={placeholder}\n      disabled={disabled}\n      values={values}\n      disablePortal\n      {...dropdownProps}\n    />\n  );\n};\n"],"names":["HvDropdownColumnCell","values","disabled","onChange","placeholder","dropdownProps","jsx","HvDropdown","item"],"mappings":";;;;AAgBO,MAAMA,uBAAuBA,CAAC;AAAA,EACnCC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AACwB,MAAmB;AAEzC,SAAAC,2BAAA,IAACC,SACC,YAAA,EAAA,UAAWC,CAAS,SAAA;AAClBL,yCAAWK;AAAAA,EAAoB,GAEjC,aACA,UACA,QACA,eAAa,MACb,GAAIH,cACJ,CAAA;AAEN;;"}