"use strict";
Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
const reactTable = require("react-table");
const getHeaderPropsHook = (props, {
  instance,
  column
}) => {
  const {
    isMultiSortEvent = (e) => e.shiftKey
  } = instance;
  const sortDirection = column.isSortedDesc ? "descending" : "ascending";
  const nextProps = {
    sortable: column.canSort,
    sorted: column.isSorted,
    sortDirection: column.isSorted ? sortDirection : void 0,
    onClick: column.canSort ? (e) => {
      e.persist();
      column.toggleSortBy(void 0, !instance.disableMultiSort && isMultiSortEvent(e));
    } : void 0
  };
  return [props, nextProps];
};
const getCellPropsHook = (props, {
  cell
}) => {
  const nextProps = {
    sorted: cell.column.isSorted
  };
  return [props, nextProps];
};
const useInstanceHook = (instance) => {
  reactTable.ensurePluginOrder(instance.plugins, ["useSortBy"], "useHvSortBy");
};
const useSortBy = (hooks) => {
  hooks.getHeaderProps.push(getHeaderPropsHook);
  hooks.getCellProps.push(getCellPropsHook);
  hooks.useInstance.push(useInstanceHook);
};
useSortBy.pluginName = "useHvSortBy";
const useSortBy$1 = useSortBy;
exports.default = useSortBy$1;
//# sourceMappingURL=useSortBy.cjs.map
