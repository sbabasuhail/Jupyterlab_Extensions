{"version":3,"file":"SwitchColumnCell.cjs","sources":["../../../../../../src/components/Table/renderers/SwitchColumnCell/SwitchColumnCell.tsx"],"sourcesContent":["import { HvBaseSwitch, HvBaseSwitchProps } from \"@core/components/BaseSwitch\";\nimport { HvTypography } from \"@core/components/Typography\";\n\nimport { useClasses } from \"./SwitchColumnCell.styles\";\n\nexport interface HvSwitchColumnCellProp {\n  /** Whether the switch is checked or not. */\n  checked: boolean;\n  /** The switch label. */\n  value: number | string | undefined;\n  /** The value of the switch. */\n  switchLabel: string;\n  /** The right switch label. */\n  falseLabel?: string;\n  /** The left switch label. */\n  trueLabel?: string;\n  /** Extra props to be passed to the switch. */\n  switchProps?: HvBaseSwitchProps;\n}\n\nexport const HvSwitchColumnCell = ({\n  checked,\n  value,\n  switchLabel,\n  falseLabel,\n  trueLabel,\n  switchProps,\n}: HvSwitchColumnCellProp): JSX.Element => {\n  const { classes } = useClasses();\n\n  return (\n    <>\n      {falseLabel != null && (\n        <HvTypography\n          aria-hidden=\"true\"\n          variant=\"body\"\n          className={classes.switchNo}\n        >\n          {falseLabel}\n        </HvTypography>\n      )}\n      <HvBaseSwitch\n        checked={checked}\n        value={value}\n        {...switchProps}\n        inputProps={{ \"aria-label\": switchLabel, ...switchProps?.inputProps }}\n      />\n      {trueLabel != null && (\n        <HvTypography\n          aria-hidden=\"true\"\n          variant=\"body\"\n          className={classes.switchYes}\n        >\n          {trueLabel}\n        </HvTypography>\n      )}\n    </>\n  );\n};\n"],"names":["HvSwitchColumnCell","checked","value","switchLabel","falseLabel","trueLabel","switchProps","classes","useClasses","jsx","HvTypography","switchNo","HvBaseSwitch","inputProps","switchYes"],"mappings":";;;;;;AAoBO,MAAMA,qBAAqBA,CAAC;AAAA,EACjCC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AACsB,MAAmB;AACnC,QAAA;AAAA,IAAEC;AAAAA,MAAYC,wBAAW,WAAA;AAE/B,SAEKJ,2BAAAA,KAAAA,qBAAAA,EAAAA,UAAAA;AAAAA,IAAc,cAAA,QACZK,2BAAAA,IAAAC,WAAAA,cAAA,EACC,eAAY,QACZ,SAAQ,QACR,WAAWH,QAAQI,UAElBP,UACH,WAAA,CAAA;AAAA,mCAEDQ,WACC,cAAA,EAAA,SACA,OACA,GAAIN,aACJ,YAAY;AAAA,MAAE,cAAcH;AAAAA,MAAa,GAAGG,2CAAaO;AAAAA,IAAAA,GAAa;AAAA,IAEvER,aAAa,QACZI,2BAAAA,IAACC,WAAAA,cACC,EAAA,eAAY,QACZ,SAAQ,QACR,WAAWH,QAAQO,WAElBT,UACH,UAAA,CAAA;AAAA,EAEJ,EAAA,CAAA;AAEJ;;"}