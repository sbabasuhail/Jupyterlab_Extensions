{"version":3,"file":"TableHeader.cjs","sources":["../../../../../src/components/Table/TableHeader/TableHeader.tsx"],"sourcesContent":["import {\n  forwardRef,\n  HTMLAttributes,\n  ThHTMLAttributes,\n  useContext,\n  useMemo,\n} from \"react\";\n\nimport capitalize from \"lodash/capitalize\";\n\nimport { hexToRgb, alpha } from \"@mui/material\";\n\nimport { theme } from \"@hitachivantara/uikit-styles\";\n\nimport { HvTypography, HvTypographyProps } from \"@core/components/Typography\";\nimport { useTheme } from \"@core/hooks/useTheme\";\nimport { ExtractNames } from \"@core/utils/classes\";\nimport { HvButton, HvButtonProps } from \"@core/components/Button\";\n\nimport TableContext from \"../TableContext\";\nimport TableSectionContext from \"../TableSectionContext\";\nimport { getSortIcon, isParagraph } from \"./utils\";\nimport { useClasses, staticClasses } from \"./TableHeader.styles\";\nimport {\n  HvTableCellAlign,\n  HvTableCellType,\n  HvTableCellVariant,\n} from \"../Table\";\n\nexport { staticClasses as tableHeaderClasses };\n\nexport type HvTableHeaderClasses = ExtractNames<typeof useClasses>;\n\nexport interface HvTableHeaderProps\n  extends Omit<ThHTMLAttributes<HTMLTableCellElement>, \"align\"> {\n  /** The component used for the root node. Either a string to use a HTML element or a component. Defaults to th. */\n  component?: React.ElementType;\n  /** Content to be rendered */\n  children?: React.ReactNode;\n  /** The scope of cells that the header element relates to. */\n  scope?: \"col\" | \"row\" | \"colgroup\" | \"rowgroup\";\n  /** Set the text-align on the table cell content. */\n  align?: HvTableCellAlign;\n  /** Sets the cell's variant. */\n  variant?: HvTableCellVariant;\n  /** Specify the cell type. The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components. */\n  type?: HvTableCellType;\n  /** The cell is part of a sticky column. */\n  stickyColumn?: boolean;\n  /** The cell is part of the last sticky to the left column. */\n  stickyColumnMostLeft?: boolean;\n  /** The cell is part of the first sticky to the right column. */\n  stickyColumnLeastRight?: boolean;\n  /** The cell is part of the first column in the group. */\n  groupColumnMostLeft?: boolean;\n  /** The cell is part of the last column in the group. */\n  groupColumnMostRight?: boolean;\n  /** Whether or not the cell is sorted */\n  sorted?: boolean;\n  /** Whether or not the cell is sortable */\n  sortable?: boolean;\n  /** Set sort direction icon and aria-sort. */\n  sortDirection?: \"ascending\" | \"descending\" | false;\n  /** Extra props to be passed onto the text in the header. */\n  headerTextProps?: HvTypographyProps;\n  /** Whether or not the cell is resizable */\n  resizable?: boolean;\n  /** Whether or not the cell is being resized */\n  resizing?: boolean;\n  /** The resize props injected in the resize handler */\n  resizerProps?: HTMLAttributes<HTMLDivElement>;\n  /** A Jss Object used to override or extend the styles applied to the component. */\n  classes?: HvTableHeaderClasses;\n  /** Extra props to be passed onto the sort button in the header. */\n  sortButtonProps?: HvButtonProps;\n}\n\nconst defaultComponent = \"th\";\n\n/**\n * `HvTableHeader` acts as a `th` element and inherits styles from its context\n */\nexport const HvTableHeader = forwardRef<HTMLElement, HvTableHeaderProps>(\n  (\n    {\n      children,\n      component,\n      className,\n      style,\n      classes: classesProp,\n      scope: scopeProp,\n      align = \"inherit\",\n      variant = \"default\",\n      type: typeProp,\n      stickyColumn = false,\n      stickyColumnMostLeft = false,\n      stickyColumnLeastRight = false,\n      groupColumnMostLeft = false,\n      groupColumnMostRight = false,\n      sortDirection = \"none\",\n      sorted,\n      sortable,\n      headerTextProps,\n      resizerProps = {},\n      resizable = false,\n      resizing = false,\n      sortButtonProps,\n      ...others\n    },\n    externalRef\n  ) => {\n    const { classes, cx, css } = useClasses(classesProp);\n\n    const { colors } = useTheme();\n    const tableContext = useContext(TableContext);\n    const tableSectionContext = useContext(TableSectionContext);\n\n    const type = typeProp || tableSectionContext?.type || \"body\";\n    const isHeadCell = type === \"head\";\n\n    const scope = scopeProp ?? (isHeadCell ? \"col\" : \"row\");\n\n    const Sort = useMemo(\n      () => getSortIcon(sorted && sortDirection),\n      [sorted, sortDirection]\n    );\n\n    const Component =\n      component || tableContext?.components?.Th || defaultComponent;\n\n    const role =\n      Component === defaultComponent\n        ? null\n        : isHeadCell\n        ? \"columnheader\"\n        : \"rowheader\";\n    const paragraph = isParagraph(children);\n\n    return (\n      <Component\n        ref={externalRef}\n        role={role}\n        scope={scope}\n        style={style}\n        className={cx(\n          classes.root,\n          classes[type],\n          type === \"body\" &&\n            css({\n              [`&.${staticClasses.sorted}`]: {\n                backgroundColor: alpha(\n                  hexToRgb(colors?.atmo1 || theme.colors.atmo1),\n                  0.4\n                ),\n              },\n            }),\n          {\n            [classes.groupColumnMostLeft]: groupColumnMostLeft,\n            [classes.groupColumnMostRight]: groupColumnMostRight,\n            [classes.sortable]: sortable,\n            [classes.sorted]: sorted,\n            [classes.resizable]: resizable,\n            [classes.resizing]: resizing,\n            [classes.stickyColumn]: stickyColumn,\n            [classes.stickyColumnMostLeft]: stickyColumnMostLeft,\n            [classes.stickyColumnLeastRight]: stickyColumnLeastRight,\n            [classes.variantList]: tableContext.variant === \"listrow\",\n            [classes[`align${capitalize(align)}`]]: align !== \"inherit\",\n            [classes[`variant${capitalize(variant)}`]]: variant !== \"default\",\n          },\n          className\n        )}\n        aria-sort={sortable ? sortDirection : undefined}\n        {...others}\n      >\n        <div\n          className={cx(classes.headerContent, {\n            [classes[`alignFlex${capitalize(align)}`]]: align !== \"inherit\",\n          })}\n        >\n          {isHeadCell && sortable && (\n            <HvButton\n              className={classes.sortButton}\n              icon\n              overrideIconColors={false}\n              aria-label=\"Sort\"\n              {...sortButtonProps}\n            >\n              <Sort className={classes.sortIcon} />\n            </HvButton>\n          )}\n          <HvTypography\n            component=\"div\"\n            className={cx({\n              [classes.headerText]: !paragraph,\n              [classes.headerParagraph]: paragraph,\n              [classes.sortableHeaderText]: sortable,\n            })}\n            variant=\"label\"\n            {...headerTextProps}\n          >\n            {children}\n          </HvTypography>\n          {resizable && <div {...resizerProps} className={classes.resizer} />}\n        </div>\n      </Component>\n    );\n  }\n);\n"],"names":["defaultComponent","HvTableHeader","forwardRef","children","component","className","style","classes","classesProp","scope","scopeProp","align","variant","type","typeProp","stickyColumn","stickyColumnMostLeft","stickyColumnLeastRight","groupColumnMostLeft","groupColumnMostRight","sortDirection","sorted","sortable","headerTextProps","resizerProps","resizable","resizing","sortButtonProps","others","externalRef","cx","css","useClasses","colors","useTheme","tableContext","useContext","TableContext","tableSectionContext","TableSectionContext","isHeadCell","Sort","useMemo","getSortIcon","Component","components","Th","role","paragraph","isParagraph","root","staticClasses","backgroundColor","alpha","hexToRgb","atmo1","theme","variantList","capitalize","undefined","jsxs","headerContent","jsx","HvButton","sortButton","sortIcon","HvTypography","headerText","headerParagraph","sortableHeaderText","resizer"],"mappings":";;;;;;;;;;;;;;;;AA6EA,MAAMA,mBAAmB;AAKZC,MAAAA,gBAAgBC,iBAC3B,CACE;AAAA,EACEC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC,SAASC;AAAAA,EACTC,OAAOC;AAAAA,EACPC,QAAQ;AAAA,EACRC,UAAU;AAAA,EACVC,MAAMC;AAAAA,EACNC,eAAe;AAAA,EACfC,uBAAuB;AAAA,EACvBC,yBAAyB;AAAA,EACzBC,sBAAsB;AAAA,EACtBC,uBAAuB;AAAA,EACvBC,gBAAgB;AAAA,EAChBC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC,eAAe,CAAC;AAAA,EAChBC,YAAY;AAAA,EACZC,WAAW;AAAA,EACXC;AAAAA,EACA,GAAGC;AACL,GACAC,gBACG;;AACG,QAAA;AAAA,IAAEtB;AAAAA,IAASuB;AAAAA,IAAIC;AAAAA,EAAAA,IAAQC,mBAAAA,WAAWxB,WAAW;AAE7C,QAAA;AAAA,IAAEyB;AAAAA,MAAWC,SAAS,SAAA;AACtBC,QAAAA,eAAeC,iBAAWC,aAAAA,OAAY;AACtCC,QAAAA,sBAAsBF,iBAAWG,oBAAAA,OAAmB;AAEpD1B,QAAAA,OAAOC,aAAYwB,2DAAqBzB,SAAQ;AACtD,QAAM2B,aAAa3B,SAAS;AAEtBJ,QAAAA,QAAQC,cAAc8B,aAAa,QAAQ;AAE3CC,QAAAA,OAAOC,cACX,MAAMC,kBAAYtB,UAAUD,aAAa,GACzC,CAACC,QAAQD,aAAa,CACxB;AAEA,QAAMwB,YACJxC,eAAa+B,kDAAcU,eAAdV,mBAA0BW,OAAM9C;AAE/C,QAAM+C,OACJH,cAAc5C,mBACV,OACAwC,aACA,iBACA;AACAQ,QAAAA,YAAYC,kBAAY9C,QAAQ;AAEtC,wCACG,WACC,EAAA,KAAK0B,aACL,MACA,OACA,OACA,WAAWC,GACTvB,QAAQ2C,MACR3C,QAAQM,IAAI,GACZA,SAAS,UACPkB,IAAI;AAAA,IACF,CAAE,KAAIoB,iCAAc9B,MAAO,EAAC,GAAG;AAAA,MAC7B+B,iBAAiBC,SAAAA,MACfC,SAASrB,UAAAA,iCAAQsB,UAASC,YAAAA,MAAMvB,OAAOsB,KAAK,GAC5C,GACF;AAAA,IACF;AAAA,EAAA,CACD,GACH;AAAA,IACE,CAAChD,QAAQW,mBAAmB,GAAGA;AAAAA,IAC/B,CAACX,QAAQY,oBAAoB,GAAGA;AAAAA,IAChC,CAACZ,QAAQe,QAAQ,GAAGA;AAAAA,IACpB,CAACf,QAAQc,MAAM,GAAGA;AAAAA,IAClB,CAACd,QAAQkB,SAAS,GAAGA;AAAAA,IACrB,CAAClB,QAAQmB,QAAQ,GAAGA;AAAAA,IACpB,CAACnB,QAAQQ,YAAY,GAAGA;AAAAA,IACxB,CAACR,QAAQS,oBAAoB,GAAGA;AAAAA,IAChC,CAACT,QAAQU,sBAAsB,GAAGA;AAAAA,IAClC,CAACV,QAAQkD,WAAW,GAAGtB,aAAavB,YAAY;AAAA,IAChD,CAACL,QAAS,QAAOmD,oBAAAA,QAAW/C,KAAK,CAAE,EAAC,CAAC,GAAGA,UAAU;AAAA,IAClD,CAACJ,QAAS,UAASmD,oBAAAA,QAAW9C,OAAO,CAAE,EAAC,CAAC,GAAGA,YAAY;AAAA,EAAA,GAE1DP,SACF,GACA,aAAWiB,WAAWF,gBAAgBuC,QACtC,GAAI/B,QAEJ,UAACgC,2BAAAA,KAAA,OAAA,EACC,WAAW9B,GAAGvB,QAAQsD,eAAe;AAAA,IACnC,CAACtD,QAAS,YAAWmD,oBAAAA,QAAW/C,KAAK,CAAE,EAAC,CAAC,GAAGA,UAAU;AAAA,EACvD,CAAA,GAEA6B,UAAAA;AAAAA,IAAAA,cAAclB,YACZwC,+BAAAC,OAAAA,UAAA,EACC,WAAWxD,QAAQyD,YACnB,MAAI,MACJ,oBAAoB,OACpB,cAAW,QACX,GAAIrC,iBAEJ,UAAAmC,2BAAA,IAAC,QAAK,WAAWvD,QAAQ0D,UAAS,EACpC,CAAA;AAAA,IAEDH,2BAAA,IAAAI,WAAA,cAAA,EACC,WAAU,OACV,WAAWpC,GAAG;AAAA,MACZ,CAACvB,QAAQ4D,UAAU,GAAG,CAACnB;AAAAA,MACvB,CAACzC,QAAQ6D,eAAe,GAAGpB;AAAAA,MAC3B,CAACzC,QAAQ8D,kBAAkB,GAAG/C;AAAAA,IAC/B,CAAA,GACD,SAAQ,SACJC,GAAAA,iBAEHpB,SACH,CAAA;AAAA,IACCsB,aAAcqC,2BAAAA,IAAA,OAAA,EAAQtC,GAAAA,cAAc,WAAWjB,QAAQ+D,SAAW;AAAA,EAAA,EACrE,CAAA,EACF,CAAA;AAEJ,CACF;;;"}