{"version":3,"file":"Unit.cjs","sources":["../../../../../src/components/TimePicker/Unit/Unit.tsx"],"sourcesContent":["import { KeyboardEvent } from \"react\";\n\nimport { DateFieldState, DateSegment } from \"@react-stately/datepicker\";\n\nimport {\n  DropDownXS as SubtractTimeIcon,\n  DropUpXS as AddTimeIcon,\n} from \"@hitachivantara/uikit-react-icons\";\nimport { theme } from \"@hitachivantara/uikit-styles\";\n\nimport { HvInput, HvInputProps } from \"@core/components/Input\";\nimport { HvToggleButton } from \"@core/components/ToggleButton\";\n\nimport { useClasses } from \"./Unit.styles\";\n\ninterface UnitProps {\n  id?: string;\n  state: DateFieldState;\n  segment: DateSegment;\n  placeholder?: string;\n  /** Called when the value changes */\n  onChange?: HvInputProps[\"onChange\"];\n  /** Called when the up/add arrow is pressed */\n  onAdd?: () => void;\n  /** Called when the down/subtract arrow is pressed */\n  onSub?: () => void;\n}\n\nexport const Unit = ({\n  id,\n  state,\n  segment,\n  placeholder: placeholderProp,\n  onChange,\n  onAdd,\n  onSub,\n}: UnitProps) => {\n  const { classes } = useClasses();\n  const { type, text } = segment;\n  const placeholder = placeholderProp ?? segment.placeholder;\n\n  return (\n    <div className={classes.root}>\n      {type !== \"literal\" && <AddTimeIcon onClick={onAdd} />}\n      {type === \"literal\" && <div className={classes.separator}>{text}</div>}\n      {type === \"dayPeriod\" && (\n        <HvToggleButton className={classes.periodToggle} onClick={onAdd}>\n          {text}\n        </HvToggleButton>\n      )}\n      {[\"hour\", \"minute\", \"second\"].includes(type) && (\n        <HvInput\n          id={id}\n          disableClear\n          style={{\n            ...theme.typography.title3,\n          }}\n          classes={{\n            input: classes.input,\n            root: classes.inputContainer,\n            inputBorderContainer: classes.inputBorderContainer,\n            inputRoot: classes.inputRoot,\n          }}\n          onKeyDown={(event) => {\n            if ((event as KeyboardEvent).key === \"Enter\") {\n              event.preventDefault();\n              event.stopPropagation();\n            }\n          }}\n          required\n          status={state.validationState}\n          value={text.padStart(2, \"0\")}\n          onChange={onChange}\n          placeholder={placeholder}\n          inputProps={{ autoComplete: \"off\", type: \"number\" }}\n        />\n      )}\n      {type !== \"literal\" && <SubtractTimeIcon onClick={onSub} />}\n    </div>\n  );\n};\n"],"names":["Unit","id","state","segment","placeholder","placeholderProp","onChange","onAdd","onSub","classes","useClasses","type","text","jsxs","root","jsx","AddTimeIcon","separator","HvToggleButton","periodToggle","includes","HvInput","theme","typography","title3","input","inputContainer","inputBorderContainer","inputRoot","event","key","preventDefault","stopPropagation","validationState","padStart","autoComplete","SubtractTimeIcon"],"mappings":";;;;;;;;AA4BO,MAAMA,OAAOA,CAAC;AAAA,EACnBC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC,aAAaC;AAAAA,EACbC;AAAAA,EACAC;AAAAA,EACAC;AACS,MAAM;AACT,QAAA;AAAA,IAAEC;AAAAA,MAAYC,YAAW,WAAA;AACzB,QAAA;AAAA,IAAEC;AAAAA,IAAMC;AAAAA,EAAST,IAAAA;AACjBC,QAAAA,cAAcC,mBAAmBF,QAAQC;AAE/C,SACGS,2BAAAA,KAAA,OAAA,EAAI,WAAWJ,QAAQK,MACrBH,UAAAA;AAAAA,IAAAA,SAAS,aAAaI,2BAAA,IAACC,gBAAY,UAAA,EAAA,SAAST,OAAS;AAAA,IACrDI,SAAS,aAAaI,2BAAA,IAAC,SAAI,WAAWN,QAAQQ,WAAYL,UAAK,MAAA;AAAA,IAC/DD,SAAS,eACPI,+BAAAG,aAAAA,gBAAA,EAAe,WAAWT,QAAQU,cAAc,SAASZ,OACvDK,UACH,KAAA,CAAA;AAAA,IAED,CAAC,QAAQ,UAAU,QAAQ,EAAEQ,SAAST,IAAI,KACxCI,2BAAA,IAAAM,MAAA,SAAA,EACC,IACA,cAAY,MACZ,OAAO;AAAA,MACL,GAAGC,YAAAA,MAAMC,WAAWC;AAAAA,OAEtB,SAAS;AAAA,MACPC,OAAOhB,QAAQgB;AAAAA,MACfX,MAAML,QAAQiB;AAAAA,MACdC,sBAAsBlB,QAAQkB;AAAAA,MAC9BC,WAAWnB,QAAQmB;AAAAA,IAAAA,GAErB,WAAYC,CAAU,UAAA;AACfA,UAAAA,MAAwBC,QAAQ,SAAS;AAC5CD,cAAME,eAAe;AACrBF,cAAMG,gBAAgB;AAAA,MACxB;AAAA,IAEF,GAAA,UAAQ,MACR,QAAQ9B,MAAM+B,iBACd,OAAOrB,KAAKsB,SAAS,GAAG,GAAG,GAC3B,UACA,aACA,YAAY;AAAA,MAAEC,cAAc;AAAA,MAAOxB,MAAM;AAAA,IAAA,GAE5C;AAAA,IACAA,SAAS,aAAcI,2BAAA,IAAAqB,gBAAA,YAAA,EAAiB,SAAS5B,OAAS;AAAA,EAC7D,EAAA,CAAA;AAEJ;;"}