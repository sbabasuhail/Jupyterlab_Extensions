{"version":3,"file":"index.cjs","sources":["../../../../../src/components/QueryBuilder/utils/index.tsx"],"sourcesContent":["export const isBigList = (values) => values != null && values?.length > 10;\n\nexport const emptyRule = () => ({\n  id: Math.random(),\n});\n\nexport const emptyGroup = (createEmptyRule = false) => ({\n  id: Math.random(),\n  combinator: \"and\",\n  rules: createEmptyRule ? [emptyRule()] : [],\n});\n\nexport const clearNodeIds = (original) => {\n  const rule = { ...original };\n\n  delete rule.id;\n\n  if (\"rules\" in rule) {\n    rule.rules = rule.rules.map((r) => clearNodeIds(r));\n  }\n\n  return rule;\n};\n\nexport const findNodeById = (id, node) => {\n  if (node.id === id) {\n    return node;\n  }\n  if (\"rules\" in node) {\n    for (let i = 0; i < node.rules.length; ++i) {\n      const rule = node.rules[i];\n\n      const found = findNodeById(id, rule);\n      if (found) {\n        return found;\n      }\n    }\n  }\n\n  return null;\n};\n\nexport const findParentById = (id, node, parent?) => {\n  if (node.id === id) {\n    return parent ?? null;\n  }\n\n  if (\"rules\" in node) {\n    const group = node;\n\n    for (let i = 0; i < group.rules.length; ++i) {\n      const rule = group.rules[i];\n\n      const found = findParentById(id, rule, group);\n      if (found) {\n        return found;\n      }\n    }\n  }\n\n  return null;\n};\n"],"names":["isBigList","values","length","emptyRule","id","Math","random","emptyGroup","createEmptyRule","combinator","rules","clearNodeIds","original","rule","map","r","findNodeById","node","i","found","findParentById","parent","group"],"mappings":";;AAAO,MAAMA,YAAaC,CAAAA,WAAWA,UAAU,SAAQA,iCAAQC,UAAS;AAEjE,MAAMC,YAAYA,OAAO;AAAA,EAC9BC,IAAIC,KAAKC,OAAO;AAClB;AAEaC,MAAAA,aAAaA,CAACC,kBAAkB,WAAW;AAAA,EACtDJ,IAAIC,KAAKC,OAAO;AAAA,EAChBG,YAAY;AAAA,EACZC,OAAOF,kBAAkB,CAACL,UAAU,CAAC,IAAI,CAAA;AAC3C;AAEO,MAAMQ,eAAgBC,CAAa,aAAA;AACxC,QAAMC,OAAO;AAAA,IAAE,GAAGD;AAAAA,EAAAA;AAElB,SAAOC,KAAKT;AAEZ,MAAI,WAAWS,MAAM;AACnBA,SAAKH,QAAQG,KAAKH,MAAMI,IAAKC,CAAMJ,MAAAA,aAAaI,CAAC,CAAC;AAAA,EACpD;AAEOF,SAAAA;AACT;AAEaG,MAAAA,eAAeA,CAACZ,IAAIa,SAAS;AACpCA,MAAAA,KAAKb,OAAOA,IAAI;AACXa,WAAAA;AAAAA,EACT;AACA,MAAI,WAAWA,MAAM;AACnB,aAASC,IAAI,GAAGA,IAAID,KAAKP,MAAMR,QAAQ,EAAEgB,GAAG;AACpCL,YAAAA,OAAOI,KAAKP,MAAMQ,CAAC;AAEnBC,YAAAA,QAAQH,aAAaZ,IAAIS,IAAI;AACnC,UAAIM,OAAO;AACFA,eAAAA;AAAAA,MACT;AAAA,IACF;AAAA,EACF;AAEO,SAAA;AACT;AAEO,MAAMC,iBAAiBA,CAAChB,IAAIa,MAAMI,WAAY;AAC/CJ,MAAAA,KAAKb,OAAOA,IAAI;AAClB,WAAOiB,UAAU;AAAA,EACnB;AAEA,MAAI,WAAWJ,MAAM;AACnB,UAAMK,QAAQL;AAEd,aAASC,IAAI,GAAGA,IAAII,MAAMZ,MAAMR,QAAQ,EAAEgB,GAAG;AACrCL,YAAAA,OAAOS,MAAMZ,MAAMQ,CAAC;AAE1B,YAAMC,QAAQC,eAAehB,IAAIS,MAAMS,KAAK;AAC5C,UAAIH,OAAO;AACFA,eAAAA;AAAAA,MACT;AAAA,IACF;AAAA,EACF;AAEO,SAAA;AACT;;;;;;;"}