"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("@emotion/react/jsx-runtime");
const React = require("react");
const Context = require("../../Context.cjs");
const TextValue = require("./TextValue/TextValue.cjs");
const DateTimeValue = require("./DateTimeValue/DateTimeValue.cjs");
const NumericValue = require("./NumericValue/NumericValue.cjs");
const BooleanValue = require("./BooleanValue/BooleanValue.cjs");
const Value = ({
  id,
  attribute,
  operator,
  value: valueProp
}) => {
  const context = React.useContext(Context.QueryBuilderContext);
  const {
    attributes,
    initialTouched
  } = context;
  const value = attribute && attributes ? {
    ...attributes[attribute]
  } : {
    type: null
  };
  const {
    type
  } = value;
  switch (type) {
    case "boolean": {
      return /* @__PURE__ */ jsxRuntime.jsx(BooleanValue.BooleanValue, { id, value: !!valueProp });
    }
    case "numeric": {
      return /* @__PURE__ */ jsxRuntime.jsx(NumericValue.NumericValue, { id, operator, value: valueProp, initialTouched });
    }
    case "dateandtime": {
      return /* @__PURE__ */ jsxRuntime.jsx(DateTimeValue.DateTimeValue, { id, operator, value: valueProp, initialTouched });
    }
    case "text":
    case "textarea":
    default: {
      return /* @__PURE__ */ jsxRuntime.jsx(TextValue.TextValue, { id, value: valueProp, initialTouched });
    }
  }
};
React.memo(Value);
exports.Value = Value;
//# sourceMappingURL=Value.cjs.map
