"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const uikitStyles = require("@hitachivantara/uikit-styles");
const classes = require("../../../utils/classes.cjs");
const name = "HvColorPicker-SavedColors";
const {
  staticClasses,
  useClasses
} = classes.createClasses(name, {
  addButton: {
    margin: uikitStyles.theme.colorPicker.addSavedColorButtonMargin,
    width: uikitStyles.theme.colorPicker.addSavedColorButtonWidth,
    height: uikitStyles.theme.colorPicker.addSavedColorButtonHeight
  },
  root: {
    display: "flex",
    flexWrap: "wrap",
    position: "relative",
    alignItems: "center",
    padding: 0,
    width: uikitStyles.theme.colorPicker.savedColorsWidth,
    margin: uikitStyles.theme.colorPicker.savedColorsMargin
  },
  swatchRoot: {
    position: "relative"
  },
  swatchWrap: {
    width: uikitStyles.theme.colorPicker.savedColorsSwatchWidth,
    height: uikitStyles.theme.colorPicker.savedColorsSwatchHeight,
    margin: uikitStyles.theme.colorPicker.savedColorsSwatchMargin,
    "& > span > div": {
      borderRadius: uikitStyles.theme.colorPicker.savedColorsSwatchBorderRadius
    }
  },
  removeButtonRoot: {
    position: "absolute",
    top: 0,
    right: 0,
    display: "flex",
    justifyContent: "center",
    alignItems: "center",
    height: 16,
    width: 16,
    background: uikitStyles.theme.colors.atmo1,
    borderRadius: uikitStyles.theme.radii.base
  },
  removeButton: {
    height: 16,
    width: 16,
    minWidth: 16,
    minHeight: 16,
    padding: 0,
    margin: 0,
    "& div > span": {
      height: 16,
      width: 16,
      "& > div": {
        height: 16,
        width: 16
      }
    }
  }
});
exports.staticClasses = staticClasses;
exports.useClasses = useClasses;
//# sourceMappingURL=SavedColors.styles.cjs.map
