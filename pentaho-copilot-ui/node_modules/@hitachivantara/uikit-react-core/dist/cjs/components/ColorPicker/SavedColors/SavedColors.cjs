"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("@emotion/react/jsx-runtime");
const uikitReactIcons = require("@hitachivantara/uikit-react-icons");
const common = require("react-color/lib/components/common");
const SavedColors_styles = require("./SavedColors.styles.cjs");
const Button = require("../../Button/Button.cjs");
const SavedColors = ({
  colors,
  onClickColor,
  onAddColor,
  onRemoveColor,
  deleteButtonAriaLabel,
  addButtonAriaLabel,
  classes: classesProp
}) => {
  const {
    classes
  } = SavedColors_styles.useClasses(classesProp);
  const handleClick = (hex) => {
    onClickColor({
      hex,
      source: "hex"
    });
  };
  return /* @__PURE__ */ jsxRuntime.jsxs("div", { className: classes.root, children: [
    /* @__PURE__ */ jsxRuntime.jsx(Button.HvButton, { className: classes.addButton, variant: "secondarySubtle", icon: true, onClick: onAddColor, "aria-label": addButtonAriaLabel, children: /* @__PURE__ */ jsxRuntime.jsx(uikitReactIcons.Add, { "aria-hidden": true }) }),
    colors.map((color, index) => /* @__PURE__ */ jsxRuntime.jsxs("div", { className: classes.swatchRoot, children: [
      /* @__PURE__ */ jsxRuntime.jsx("div", { className: classes.swatchWrap, children: /* @__PURE__ */ jsxRuntime.jsx(common.Swatch, { color, onClick: handleClick, focusStyle: {
        boxShadow: `inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px ${color}`
      } }) }),
      /* @__PURE__ */ jsxRuntime.jsx("div", { className: classes.removeButtonRoot, children: /* @__PURE__ */ jsxRuntime.jsx(Button.HvButton, { className: classes.removeButton, variant: "secondarySubtle", onClick: () => onRemoveColor(color, index), tabIndex: 0, "aria-label": deleteButtonAriaLabel, children: /* @__PURE__ */ jsxRuntime.jsx(uikitReactIcons.CloseXS, { "aria-hidden": true, iconSize: "XS" }) }) })
    ] }, `saved-color-${color}-${index}`))
  ] });
};
exports.colorPickerSavedColorsClasses = SavedColors_styles.staticClasses;
exports.SavedColors = SavedColors;
//# sourceMappingURL=SavedColors.cjs.map
